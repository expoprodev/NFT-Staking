{
	"id": "6a12a7033ef2d5f74d02119dc0467cfc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./SafeBEP20.sol\";\r\n\r\ncontract StakingPlatform is Ownable {\r\n\r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    // args for _stakers\r\n    struct Staker {\r\n        uint256 stakerCurrentReward;\r\n        uint256 stakedAmount;\r\n        uint256 mode;\r\n        uint256 stakeStartTime;\r\n        uint256 lastUpdatedTime;\r\n    }   \r\n\r\n    enum Mode{DAILY_MODE, WEEKLY_MODE}\r\n    \r\n    // refer to CRSFANS token. Address: 0x7AD8A62451f79399c940fC1A6FE96358a80B1931\r\n    \r\n    uint256 private _unstakingFeeRate;\r\n    uint256 private _eventPeriod;\r\n    uint256 private _fixedAPY;\r\n    uint256 private _rewardFeeRate;\r\n    address private _bountyWallet;\r\n\r\n    mapping(address => Staker) private _staker;\r\n\r\n    // Total amount of token staked in staking pool.\r\n    uint256 public totalStaked;\r\n    IBEP20 public token;\r\n\r\n    // Events triggered when start, stake, unstake(withdraw), get reward.\r\n    event Staked(address staker, uint256 amount);\r\n    event Harvest(address staker, uint256 rewardToClaim);\r\n    event Withdraw(address staker, uint256 amount);\r\n    event SetFixedAPY(uint256 fixedAPY);\r\n    event SetEventPeriod(uint256 lockupDuration);\r\n    event SetUnstakingFeeRate(uint256 unstakingFeeRate);\r\n    event SetBountyWallet(address bountyWallet);\r\n    \r\n    constructor(address _token, address __bountyWallet) {\r\n\r\n        Init();\r\n        _bountyWallet = __bountyWallet;\r\n        token = IBEP20(_token);\r\n    }\r\n\r\n    function Init() internal {\r\n        _fixedAPY = 125;\r\n        _unstakingFeeRate = 1500;\r\n        _rewardFeeRate = 200;\r\n        _eventPeriod = 7 days;\r\n    }\r\n\r\n    function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r\n        \r\n        return timedur.div(1 days);\r\n    }\r\n\r\n    // Update rewards for _stakers according to deposited amount.\r\n    function updateReward() private{\r\n        \r\n        Staker storage staker = _staker[msg.sender];\r\n        if(block.timestamp < staker.lastUpdatedTime) {\r\n            return;\r\n        }        \r\n        uint256 duration = calDaysFromTimestamp(block.timestamp - staker.stakeStartTime);\r\n        uint256 newReward = staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4);\r\n        if (staker.mode == 1) {\r\n            uint256 eventCount = duration.div(_eventPeriod);\r\n            newReward = staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4);\r\n        }\r\n        staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward);\r\n        staker.lastUpdatedTime = block.timestamp;\r\n    }\r\n\r\n    // Staker tries to stake specific amount of token.\r\n    function stake(uint256 _amount, uint256 _mode) external{\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n        staker.stakedAmount = staker.stakedAmount.add(_amount);\r\n        staker.stakeStartTime = block.timestamp;\r\n        staker.mode = _mode;\r\n        totalStaked = totalStaked.add(_amount);\r\n        \r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    // Withdraw some of token staked.\r\n    function withdraw(uint256 amount) external{\r\n\r\n        Staker storage staker = _staker[msg.sender];\r\n\r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        require(amount <= staker.stakedAmount, \"Invalid amount\");\r\n\r\n        updateReward();\r\n        uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this));\r\n        uint256 isLockupTimeOver = block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1;\r\n        amountTobeWithdrawn = amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4));\r\n        totalStaked = totalStaked.sub(amountTobeWithdrawn);\r\n        staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn);\r\n        token.safeTransfer(msg.sender, amountTobeWithdrawn);\r\n\r\n        emit Withdraw(msg.sender, amountTobeWithdrawn);\r\n    }\r\n\r\n    function setFixedAPY(uint256 __fixedAPY) external onlyOwner {\r\n\r\n        require(__fixedAPY > 0, \"Invalid APY\");\r\n        \r\n        _fixedAPY = __fixedAPY;\r\n\r\n        emit SetFixedAPY(__fixedAPY);\r\n    }\r\n\r\n    function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r\n        \r\n        require(__eventPeriod > 0, \"Invalid Lockup Duration\");\r\n\r\n        _eventPeriod = __eventPeriod;\r\n\r\n        emit SetEventPeriod(__eventPeriod);\r\n    }\r\n\r\n    function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r\n\r\n        require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\");\r\n\r\n        _unstakingFeeRate = __unstakingFeeRate;\r\n\r\n        emit SetUnstakingFeeRate(__unstakingFeeRate);\r\n    }\r\n\r\n    function setBountyWallet(address __bountyWallet) external onlyOwner {\r\n        \r\n        require(__bountyWallet > address(0), \"Invalid Address. Address can't be zero\");\r\n\r\n        _bountyWallet = __bountyWallet;\r\n\r\n        emit SetBountyWallet(__bountyWallet);\r\n    }\r\n\r\n    // Amount of reward staker can be guaranteed.\r\n    function rewardToHarvest() public returns (uint256){\r\n        \r\n        updateReward();\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n\r\n    // Get reward of msg.sender\r\n    function harvest() public{\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4));\r\n        \r\n        require(rewardToClaim > 0, \"Nothing to claim\");\r\n        if (rewardToClaim > token.balanceOf(_bountyWallet))\r\n            rewardToClaim = token.balanceOf(_bountyWallet);\r\n        token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim);\r\n        staker.stakerCurrentReward = 0;\r\n\r\n        emit Harvest(msg.sender, rewardToClaim);\r\n    }\r\n\r\n    // Amount of token staked in staking pool.\r\n    function stakedAmount() public view returns (uint256) {\r\n        \r\n        return _staker[msg.sender].stakedAmount;\r\n    }\r\n\r\n    function rewardAmount() public view returns (uint256) {\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n\r\n    function remainedToNextEvent() public view returns (uint256) {\r\n        return _eventPeriod.sub(1 days).sub(calDaysFromTimestamp(block.timestamp - _staker[msg.sender].stakeStartTime) % (_eventPeriod.sub(1 days)));\r\n    }\r\n}\r\n"
			},
			"contracts/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"./IBEP20.sol\";\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n    \r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n        \r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
									".code": [
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"StakingPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "__bountyWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardToClaim",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "bountyWallet",
									"type": "address"
								}
							],
							"name": "SetBountyWallet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockupDuration",
									"type": "uint256"
								}
							],
							"name": "SetEventPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fixedAPY",
									"type": "uint256"
								}
							],
							"name": "SetFixedAPY",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "SetUnstakingFeeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainedToNextEvent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToHarvest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "__bountyWallet",
									"type": "address"
								}
							],
							"name": "setBountyWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__eventPeriod",
									"type": "uint256"
								}
							],
							"name": "setEventPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__fixedAPY",
									"type": "uint256"
								}
							],
							"name": "setFixedAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "setUnstakingFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":260:6836  contract StakingPlatform is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":1520:1673  constructor(address _token, address __bountyWallet) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Staking.sol\":1585:1591  Init() */\n  tag_12\n    /* \"contracts/Staking.sol\":1585:1589  Init */\n  shl(0x20, tag_13)\n    /* \"contracts/Staking.sol\":1585:1591  Init() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Staking.sol\":1618:1632  __bountyWallet */\n  dup1\n    /* \"contracts/Staking.sol\":1602:1615  _bountyWallet */\n  0x05\n  0x00\n    /* \"contracts/Staking.sol\":1602:1632  _bountyWallet = __bountyWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1658:1664  _token */\n  dup2\n    /* \"contracts/Staking.sol\":1643:1648  token */\n  0x08\n  0x00\n    /* \"contracts/Staking.sol\":1643:1665  token = IBEP20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1520:1673  constructor(address _token, address __bountyWallet) {\r... */\n  pop\n  pop\n    /* \"contracts/Staking.sol\":260:6836  contract StakingPlatform is Ownable {\r... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":1681:1838  function Init() internal {\r... */\ntag_13:\n    /* \"contracts/Staking.sol\":1729:1732  125 */\n  0x7d\n    /* \"contracts/Staking.sol\":1717:1726  _fixedAPY */\n  0x03\n    /* \"contracts/Staking.sol\":1717:1732  _fixedAPY = 125 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1763:1767  1500 */\n  0x05dc\n    /* \"contracts/Staking.sol\":1743:1760  _unstakingFeeRate */\n  0x01\n    /* \"contracts/Staking.sol\":1743:1767  _unstakingFeeRate = 1500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1795:1798  200 */\n  0xc8\n    /* \"contracts/Staking.sol\":1778:1792  _rewardFeeRate */\n  0x04\n    /* \"contracts/Staking.sol\":1778:1798  _rewardFeeRate = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1824:1830  7 days */\n  0x093a80\n    /* \"contracts/Staking.sol\":1809:1821  _eventPeriod */\n  0x02\n    /* \"contracts/Staking.sol\":1809:1830  _eventPeriod = 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1681:1838  function Init() internal {\r... */\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_19:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_21\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":260:379   */\ntag_24:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_27\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_19\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_28\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_31:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_33\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_34:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_26:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_22:\n    /* \"#utility.yul\":1303:1327   */\n  tag_40\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_31\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_41:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":260:6836  contract StakingPlatform is Ownable {\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":260:6836  contract StakingPlatform is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b0472f0\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x91e07e7a\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x91e07e7a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf7b2a7be\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x7b0472f0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8a9d3839\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x5d2ec65d\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x5d2ec65d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6413996c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x692642e7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x373d6132\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x50f19c87\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":3526:4442  function withdraw(uint256 amount) external{\r... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/Staking.sol\":6356:6478  function stakedAmount() public view returns (uint256) {\r... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5697:6300  function harvest() public{\r... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Staking.sol\":4450:4653  function setFixedAPY(uint256 __fixedAPY) external onlyOwner {\r... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/Staking.sol\":5505:5656  function rewardToHarvest() public returns (uint256){\r... */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":6613:6833  function remainedToNextEvent() public view returns (uint256) {\r... */\n    tag_8:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4661:4897  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/Staking.sol\":2861:3479  function stake(uint256 _amount, uint256 _mode) external{\r... */\n    tag_11:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/Staking.sol\":1014:1040  uint256 public totalStaked */\n    tag_12:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5179:5446  function setBountyWallet(address __bountyWallet) external onlyOwner {\r... */\n    tag_13:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4905:5171  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_15:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/Staking.sol\":6486:6605  function rewardAmount() public view returns (uint256) {\r... */\n    tag_17:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1047:1066  IBEP20 public token */\n    tag_18:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":3526:4442  function withdraw(uint256 amount) external{\r... */\n    tag_25:\n        /* \"contracts/Staking.sol\":3581:3602  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":3605:3612  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":3605:3624  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3613:3623  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3605:3624  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3581:3624  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3654:3655  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3645:3651  amount */\n      dup3\n        /* \"contracts/Staking.sol\":3645:3655  amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3637:3691  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"contracts/Staking.sol\":3720:3726  staker */\n      dup1\n        /* \"contracts/Staking.sol\":3720:3739  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":3710:3716  amount */\n      dup3\n        /* \"contracts/Staking.sol\":3710:3739  amount <= staker.stakedAmount */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":3702:3758  require(amount <= staker.stakedAmount, \"Invalid amount\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/Staking.sol\":3771:3785  updateReward() */\n      tag_81\n        /* \"contracts/Staking.sol\":3771:3783  updateReward */\n      tag_82\n        /* \"contracts/Staking.sol\":3771:3785  updateReward() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/Staking.sol\":3796:3823  uint256 amountTobeWithdrawn */\n      0x00\n        /* \"contracts/Staking.sol\":3835:3840  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3835:3850  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3859:3863  this */\n      address\n        /* \"contracts/Staking.sol\":3835:3865  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_83:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/Staking.sol\":3826:3832  amount */\n      dup4\n        /* \"contracts/Staking.sol\":3826:3865  amount < token.balanceOf(address(this)) */\n      lt\n        /* \"contracts/Staking.sol\":3826:3907  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      tag_89\n      jumpi\n        /* \"contracts/Staking.sol\":3877:3882  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3877:3892  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3901:3905  this */\n      address\n        /* \"contracts/Staking.sol\":3877:3907  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_90:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_94:\n        /* \"contracts/Staking.sol\":3826:3907  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      jump(tag_95)\n    tag_89:\n        /* \"contracts/Staking.sol\":3868:3874  amount */\n      dup3\n        /* \"contracts/Staking.sol\":3826:3907  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n    tag_95:\n        /* \"contracts/Staking.sol\":3796:3907  uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3918:3942  uint256 isLockupTimeOver */\n      0x00\n        /* \"contracts/Staking.sol\":4018:4019  0 */\n      dup1\n        /* \"contracts/Staking.sol\":4002:4014  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":3945:3999  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      tag_96\n        /* \"contracts/Staking.sol\":3992:3998  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":3945:3987  block.timestamp.sub(staker.stakeStartTime) */\n      tag_97\n        /* \"contracts/Staking.sol\":3965:3971  staker */\n      dup8\n        /* \"contracts/Staking.sol\":3965:3986  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":3945:3960  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":3945:3964  block.timestamp.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":3945:3987  block.timestamp.sub(staker.stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"contracts/Staking.sol\":3945:3991  block.timestamp.sub(staker.stakeStartTime).div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":3945:3999  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"contracts/Staking.sol\":3945:4014  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"contracts/Staking.sol\":3945:4019  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 */\n      eq\n        /* \"contracts/Staking.sol\":3945:4027  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n      tag_102\n      jumpi\n        /* \"contracts/Staking.sol\":4026:4027  1 */\n      0x01\n        /* \"contracts/Staking.sol\":3945:4027  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n      jump(tag_103)\n    tag_102:\n        /* \"contracts/Staking.sol\":4022:4023  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3945:4027  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n    tag_103:\n        /* \"contracts/Staking.sol\":3918:4027  uint256 isLockupTimeOver = block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4060:4175  amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4)) */\n      tag_104\n        /* \"contracts/Staking.sol\":4084:4174  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4) */\n      tag_105\n        /* \"contracts/Staking.sol\":4170:4173  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":4084:4165  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate) */\n      tag_106\n        /* \"contracts/Staking.sol\":4147:4164  _unstakingFeeRate */\n      sload(0x01)\n        /* \"contracts/Staking.sol\":4084:4142  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn) */\n      tag_107\n        /* \"contracts/Staking.sol\":4122:4141  amountTobeWithdrawn */\n      dup8\n        /* \"contracts/Staking.sol\":4084:4117  staker.mode.mul(isLockupTimeOver) */\n      tag_108\n        /* \"contracts/Staking.sol\":4100:4116  isLockupTimeOver */\n      dup9\n        /* \"contracts/Staking.sol\":4084:4090  staker */\n      dup12\n        /* \"contracts/Staking.sol\":4084:4095  staker.mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4084:4099  staker.mode.mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":4084:4117  staker.mode.mul(isLockupTimeOver) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"contracts/Staking.sol\":4084:4121  staker.mode.mul(isLockupTimeOver).mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":4084:4142  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"contracts/Staking.sol\":4084:4146  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":4084:4165  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"contracts/Staking.sol\":4084:4169  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":4084:4174  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/Staking.sol\":4060:4079  amountTobeWithdrawn */\n      dup4\n        /* \"contracts/Staking.sol\":4060:4083  amountTobeWithdrawn.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":4060:4175  amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"contracts/Staking.sol\":4038:4175  amountTobeWithdrawn = amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4)) */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":4200:4236  totalStaked.sub(amountTobeWithdrawn) */\n      tag_110\n        /* \"contracts/Staking.sol\":4216:4235  amountTobeWithdrawn */\n      dup3\n        /* \"contracts/Staking.sol\":4200:4211  totalStaked */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":4200:4215  totalStaked.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":4200:4236  totalStaked.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/Staking.sol\":4186:4197  totalStaked */\n      0x07\n        /* \"contracts/Staking.sol\":4186:4236  totalStaked = totalStaked.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4269:4313  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      tag_111\n        /* \"contracts/Staking.sol\":4293:4312  amountTobeWithdrawn */\n      dup3\n        /* \"contracts/Staking.sol\":4269:4275  staker */\n      dup5\n        /* \"contracts/Staking.sol\":4269:4288  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4269:4292  staker.stakedAmount.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":4269:4313  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"contracts/Staking.sol\":4247:4253  staker */\n      dup4\n        /* \"contracts/Staking.sol\":4247:4266  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":4247:4313  staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4324:4375  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      tag_112\n        /* \"contracts/Staking.sol\":4343:4353  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4355:4374  amountTobeWithdrawn */\n      dup4\n        /* \"contracts/Staking.sol\":4324:4329  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4324:4342  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_113\n      swap1\n        /* \"contracts/Staking.sol\":4324:4375  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/Staking.sol\":4393:4434  Withdraw(msg.sender, amountTobeWithdrawn) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/Staking.sol\":4402:4412  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4414:4433  amountTobeWithdrawn */\n      dup4\n        /* \"contracts/Staking.sol\":4393:4434  Withdraw(msg.sender, amountTobeWithdrawn) */\n      mload(0x40)\n      tag_114\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3568:4442  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":3526:4442  function withdraw(uint256 amount) external{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6356:6478  function stakedAmount() public view returns (uint256) {\r... */\n    tag_27:\n        /* \"contracts/Staking.sol\":6401:6408  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":6438:6445  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":6438:6457  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6446:6456  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6438:6457  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6438:6470  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":6431:6470  return _staker[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6356:6478  function stakedAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5697:6300  function harvest() public{\r... */\n    tag_31:\n        /* \"contracts/Staking.sol\":5743:5757  updateReward() */\n      tag_118\n        /* \"contracts/Staking.sol\":5743:5755  updateReward */\n      tag_82\n        /* \"contracts/Staking.sol\":5743:5757  updateReward() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/Staking.sol\":5768:5789  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":5792:5799  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":5792:5811  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":5800:5810  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5792:5811  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5768:5811  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5822:5843  uint256 rewardToClaim */\n      0x00\n        /* \"contracts/Staking.sol\":5846:5935  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      tag_119\n        /* \"contracts/Staking.sol\":5877:5934  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      tag_120\n        /* \"contracts/Staking.sol\":5928:5933  10**4 */\n      0x2710\n        /* \"contracts/Staking.sol\":5877:5923  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      tag_121\n        /* \"contracts/Staking.sol\":5908:5922  _rewardFeeRate */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":5877:5883  staker */\n      dup7\n        /* \"contracts/Staking.sol\":5877:5903  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":5877:5907  staker.stakerCurrentReward.mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":5877:5923  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"contracts/Staking.sol\":5877:5927  staker.stakerCurrentReward.mul(_rewardFeeRate).div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":5877:5934  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"contracts/Staking.sol\":5846:5852  staker */\n      dup4\n        /* \"contracts/Staking.sol\":5846:5872  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":5846:5876  staker.stakerCurrentReward.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":5846:5935  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/Staking.sol\":5822:5935  uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5980:5981  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5964:5977  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":5964:5981  rewardToClaim > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5956:6002  require(rewardToClaim > 0, \"Nothing to claim\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/Staking.sol\":6033:6038  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6033:6048  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":6049:6062  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6033:6063  token.balanceOf(_bountyWallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_125:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_129:\n        /* \"contracts/Staking.sol\":6017:6030  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":6017:6063  rewardToClaim > token.balanceOf(_bountyWallet) */\n      gt\n        /* \"contracts/Staking.sol\":6013:6124  if (rewardToClaim > token.balanceOf(_bountyWallet))\r... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/Staking.sol\":6094:6099  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6094:6109  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":6110:6123  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6094:6124  token.balanceOf(_bountyWallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_131:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_135:\n        /* \"contracts/Staking.sol\":6078:6124  rewardToClaim = token.balanceOf(_bountyWallet) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6013:6124  if (rewardToClaim > token.balanceOf(_bountyWallet))\r... */\n    tag_130:\n        /* \"contracts/Staking.sol\":6135:6199  token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim) */\n      tag_136\n        /* \"contracts/Staking.sol\":6158:6171  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6173:6183  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6185:6198  rewardToClaim */\n      dup4\n        /* \"contracts/Staking.sol\":6135:6140  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6135:6157  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_137\n      swap1\n        /* \"contracts/Staking.sol\":6135:6199  token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/Staking.sol\":6239:6240  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6210:6216  staker */\n      dup3\n        /* \"contracts/Staking.sol\":6210:6236  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":6210:6240  staker.stakerCurrentReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6258:6292  Harvest(msg.sender, rewardToClaim) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"contracts/Staking.sol\":6266:6276  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6278:6291  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":6258:6292  Harvest(msg.sender, rewardToClaim) */\n      mload(0x40)\n      tag_138\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5722:6300  {\r... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":5697:6300  function harvest() public{\r... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":4450:4653  function setFixedAPY(uint256 __fixedAPY) external onlyOwner {\r... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/Staking.sol\":4544:4545  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4531:4541  __fixedAPY */\n      dup2\n        /* \"contracts/Staking.sol\":4531:4545  __fixedAPY > 0 */\n      gt\n        /* \"contracts/Staking.sol\":4523:4561  require(__fixedAPY > 0, \"Invalid APY\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/Staking.sol\":4594:4604  __fixedAPY */\n      dup1\n        /* \"contracts/Staking.sol\":4582:4591  _fixedAPY */\n      0x03\n        /* \"contracts/Staking.sol\":4582:4604  _fixedAPY = __fixedAPY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4622:4645  SetFixedAPY(__fixedAPY) */\n      0xb8f51888a0746f534a064d0d08f74852a939d6cd181760e1cedc7a8396d9e22f\n        /* \"contracts/Staking.sol\":4634:4644  __fixedAPY */\n      dup2\n        /* \"contracts/Staking.sol\":4622:4645  SetFixedAPY(__fixedAPY) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":4450:4653  function setFixedAPY(uint256 __fixedAPY) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5505:5656  function rewardToHarvest() public returns (uint256){\r... */\n    tag_36:\n        /* \"contracts/Staking.sol\":5548:5555  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5577:5591  updateReward() */\n      tag_152\n        /* \"contracts/Staking.sol\":5577:5589  updateReward */\n      tag_82\n        /* \"contracts/Staking.sol\":5577:5591  updateReward() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/Staking.sol\":5609:5616  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":5609:5628  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":5617:5627  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5609:5628  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5609:5648  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":5602:5648  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5505:5656  function rewardToHarvest() public returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":6613:6833  function remainedToNextEvent() public view returns (uint256) {\r... */\n    tag_39:\n        /* \"contracts/Staking.sol\":6665:6672  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":6692:6825  _eventPeriod.sub(1 days).sub(calDaysFromTimestamp(block.timestamp - _staker[msg.sender].stakeStartTime) % (_eventPeriod.sub(1 days))) */\n      tag_154\n        /* \"contracts/Staking.sol\":6799:6823  _eventPeriod.sub(1 days) */\n      tag_155\n        /* \"contracts/Staking.sol\":6816:6822  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":6799:6811  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":6799:6815  _eventPeriod.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":6799:6823  _eventPeriod.sub(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"contracts/Staking.sol\":6721:6795  calDaysFromTimestamp(block.timestamp - _staker[msg.sender].stakeStartTime) */\n      tag_156\n        /* \"contracts/Staking.sol\":6760:6767  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":6760:6779  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6768:6778  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6760:6779  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6760:6794  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":6742:6757  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":6742:6794  block.timestamp - _staker[msg.sender].stakeStartTime */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/Staking.sol\":6721:6741  calDaysFromTimestamp */\n      tag_159\n        /* \"contracts/Staking.sol\":6721:6795  calDaysFromTimestamp(block.timestamp - _staker[msg.sender].stakeStartTime) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/Staking.sol\":6721:6824  calDaysFromTimestamp(block.timestamp - _staker[msg.sender].stakeStartTime) % (_eventPeriod.sub(1 days)) */\n      tag_160\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_160:\n        /* \"contracts/Staking.sol\":6692:6716  _eventPeriod.sub(1 days) */\n      tag_161\n        /* \"contracts/Staking.sol\":6709:6715  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":6692:6704  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":6692:6708  _eventPeriod.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":6692:6716  _eventPeriod.sub(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"contracts/Staking.sol\":6692:6720  _eventPeriod.sub(1 days).sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":6692:6825  _eventPeriod.sub(1 days).sub(calDaysFromTimestamp(block.timestamp - _staker[msg.sender].stakeStartTime) % (_eventPeriod.sub(1 days))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/Staking.sol\":6685:6825  return _eventPeriod.sub(1 days).sub(calDaysFromTimestamp(block.timestamp - _staker[msg.sender].stakeStartTime) % (_eventPeriod.sub(1 days))) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6613:6833  function remainedToNextEvent() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":4661:4897  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_145\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/Staking.sol\":4772:4773  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4756:4769  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":4756:4773  __eventPeriod > 0 */\n      gt\n        /* \"contracts/Staking.sol\":4748:4801  require(__eventPeriod > 0, \"Invalid Lockup Duration\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/Staking.sol\":4829:4842  __eventPeriod */\n      dup1\n        /* \"contracts/Staking.sol\":4814:4826  _eventPeriod */\n      0x02\n        /* \"contracts/Staking.sol\":4814:4842  _eventPeriod = __eventPeriod */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4860:4889  SetEventPeriod(__eventPeriod) */\n      0x189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c\n        /* \"contracts/Staking.sol\":4875:4888  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":4860:4889  SetEventPeriod(__eventPeriod) */\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":4661:4897  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_145\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":2861:3479  function stake(uint256 _amount, uint256 _mode) external{\r... */\n    tag_49:\n        /* \"contracts/Staking.sol\":2955:2956  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2945:2952  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2945:2956  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2937:2992  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_77\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/Staking.sol\":3041:3048  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":3011:3016  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3011:3026  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3027:3037  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3011:3038  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_183:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_187:\n        /* \"contracts/Staking.sol\":3011:3048  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":3003:3066  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/Staking.sol\":3087:3101  updateReward() */\n      tag_191\n        /* \"contracts/Staking.sol\":3087:3099  updateReward */\n      tag_82\n        /* \"contracts/Staking.sol\":3087:3101  updateReward() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/Staking.sol\":3112:3133  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":3136:3143  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":3136:3155  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3144:3154  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3136:3155  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3112:3155  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3166:3224  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_192\n        /* \"contracts/Staking.sol\":3189:3199  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3209:3213  this */\n      address\n        /* \"contracts/Staking.sol\":3216:3223  _amount */\n      dup6\n        /* \"contracts/Staking.sol\":3166:3171  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3166:3188  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_137\n      swap1\n        /* \"contracts/Staking.sol\":3166:3224  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"contracts/Staking.sol\":3257:3289  staker.stakedAmount.add(_amount) */\n      tag_193\n        /* \"contracts/Staking.sol\":3281:3288  _amount */\n      dup4\n        /* \"contracts/Staking.sol\":3257:3263  staker */\n      dup3\n        /* \"contracts/Staking.sol\":3257:3276  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":3257:3280  staker.stakedAmount.add */\n      tag_194\n      swap1\n        /* \"contracts/Staking.sol\":3257:3289  staker.stakedAmount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"contracts/Staking.sol\":3235:3241  staker */\n      dup2\n        /* \"contracts/Staking.sol\":3235:3254  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":3235:3289  staker.stakedAmount = staker.stakedAmount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3324:3339  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":3300:3306  staker */\n      dup2\n        /* \"contracts/Staking.sol\":3300:3321  staker.stakeStartTime */\n      0x03\n      add\n        /* \"contracts/Staking.sol\":3300:3339  staker.stakeStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3364:3369  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3350:3356  staker */\n      dup2\n        /* \"contracts/Staking.sol\":3350:3361  staker.mode */\n      0x02\n      add\n        /* \"contracts/Staking.sol\":3350:3369  staker.mode = _mode */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3394:3418  totalStaked.add(_amount) */\n      tag_195\n        /* \"contracts/Staking.sol\":3410:3417  _amount */\n      dup4\n        /* \"contracts/Staking.sol\":3394:3405  totalStaked */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":3394:3409  totalStaked.add */\n      tag_194\n      swap1\n        /* \"contracts/Staking.sol\":3394:3418  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"contracts/Staking.sol\":3380:3391  totalStaked */\n      0x07\n        /* \"contracts/Staking.sol\":3380:3418  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3444:3471  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staking.sol\":3451:3461  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3463:3470  _amount */\n      dup5\n        /* \"contracts/Staking.sol\":3444:3471  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_196\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":2916:3479  {\r... */\n      pop\n        /* \"contracts/Staking.sol\":2861:3479  function stake(uint256 _amount, uint256 _mode) external{\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":1014:1040  uint256 public totalStaked */\n    tag_51:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":5179:5446  function setBountyWallet(address __bountyWallet) external onlyOwner {\r... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_145\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/Staking.sol\":5301:5302  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5276:5303  __bountyWallet > address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":5276:5290  __bountyWallet */\n      dup2\n        /* \"contracts/Staking.sol\":5276:5303  __bountyWallet > address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"contracts/Staking.sol\":5268:5346  require(__bountyWallet > address(0), \"Invalid Address. Address can't be zero\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/Staking.sol\":5375:5389  __bountyWallet */\n      dup1\n        /* \"contracts/Staking.sol\":5359:5372  _bountyWallet */\n      0x05\n      0x00\n        /* \"contracts/Staking.sol\":5359:5389  _bountyWallet = __bountyWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5407:5438  SetBountyWallet(__bountyWallet) */\n      0xeda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a87\n        /* \"contracts/Staking.sol\":5423:5437  __bountyWallet */\n      dup2\n        /* \"contracts/Staking.sol\":5407:5438  SetBountyWallet(__bountyWallet) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5179:5446  function setBountyWallet(address __bountyWallet) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":4905:5171  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_145\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"contracts/Staking.sol\":5023:5024  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5002:5020  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":5002:5024  __unstakingFeeRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":4994:5055  require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"contracts/Staking.sol\":5088:5106  __unstakingFeeRate */\n      dup1\n        /* \"contracts/Staking.sol\":5068:5085  _unstakingFeeRate */\n      0x01\n        /* \"contracts/Staking.sol\":5068:5106  _unstakingFeeRate = __unstakingFeeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5124:5163  SetUnstakingFeeRate(__unstakingFeeRate) */\n      0x150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81\n        /* \"contracts/Staking.sol\":5144:5162  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":5124:5163  SetUnstakingFeeRate(__unstakingFeeRate) */\n      mload(0x40)\n      tag_217\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":4905:5171  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_145\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6486:6605  function rewardAmount() public view returns (uint256) {\r... */\n    tag_68:\n        /* \"contracts/Staking.sol\":6531:6538  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":6558:6565  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":6558:6577  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6566:6576  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6558:6577  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6558:6597  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6551:6597  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6486:6605  function rewardAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1047:1066  IBEP20 public token */\n    tag_71:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":2055:2797  function updateReward() private{\r... */\n    tag_82:\n        /* \"contracts/Staking.sol\":2107:2128  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":2131:2138  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":2131:2150  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2139:2149  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2131:2150  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2107:2150  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2182:2188  staker */\n      dup1\n        /* \"contracts/Staking.sol\":2182:2204  staker.lastUpdatedTime */\n      0x04\n      add\n      sload\n        /* \"contracts/Staking.sol\":2164:2179  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2164:2204  block.timestamp < staker.lastUpdatedTime */\n      lt\n        /* \"contracts/Staking.sol\":2161:2239  if(block.timestamp < staker.lastUpdatedTime) {\r... */\n      iszero\n      tag_230\n      jumpi\n        /* \"contracts/Staking.sol\":2221:2228  return; */\n      pop\n      jump(tag_229)\n        /* \"contracts/Staking.sol\":2161:2239  if(block.timestamp < staker.lastUpdatedTime) {\r... */\n    tag_230:\n        /* \"contracts/Staking.sol\":2257:2273  uint256 duration */\n      0x00\n        /* \"contracts/Staking.sol\":2276:2337  calDaysFromTimestamp(block.timestamp - staker.stakeStartTime) */\n      tag_231\n        /* \"contracts/Staking.sol\":2315:2321  staker */\n      dup3\n        /* \"contracts/Staking.sol\":2315:2336  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":2297:2312  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2297:2336  block.timestamp - staker.stakeStartTime */\n      tag_232\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_232:\n        /* \"contracts/Staking.sol\":2276:2296  calDaysFromTimestamp */\n      tag_159\n        /* \"contracts/Staking.sol\":2276:2337  calDaysFromTimestamp(block.timestamp - staker.stakeStartTime) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/Staking.sol\":2257:2337  uint256 duration = calDaysFromTimestamp(block.timestamp - staker.stakeStartTime) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2348:2365  uint256 newReward */\n      0x00\n        /* \"contracts/Staking.sol\":2368:2425  staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4) */\n      tag_233\n        /* \"contracts/Staking.sol\":2421:2424  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2368:2416  staker.stakedAmount.mul(duration).mul(_fixedAPY) */\n      tag_234\n        /* \"contracts/Staking.sol\":2406:2415  _fixedAPY */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2368:2401  staker.stakedAmount.mul(duration) */\n      tag_235\n        /* \"contracts/Staking.sol\":2392:2400  duration */\n      dup7\n        /* \"contracts/Staking.sol\":2368:2374  staker */\n      dup9\n        /* \"contracts/Staking.sol\":2368:2387  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2368:2391  staker.stakedAmount.mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":2368:2401  staker.stakedAmount.mul(duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"contracts/Staking.sol\":2368:2405  staker.stakedAmount.mul(duration).mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":2368:2416  staker.stakedAmount.mul(duration).mul(_fixedAPY) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"contracts/Staking.sol\":2368:2420  staker.stakedAmount.mul(duration).mul(_fixedAPY).div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":2368:2425  staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/Staking.sol\":2348:2425  uint256 newReward = staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2455:2456  1 */\n      0x01\n        /* \"contracts/Staking.sol\":2440:2446  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2440:2451  staker.mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":2440:2456  staker.mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":2436:2658  if (staker.mode == 1) {\r... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/Staking.sol\":2473:2491  uint256 eventCount */\n      0x00\n        /* \"contracts/Staking.sol\":2494:2520  duration.div(_eventPeriod) */\n      tag_237\n        /* \"contracts/Staking.sol\":2507:2519  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":2494:2502  duration */\n      dup5\n        /* \"contracts/Staking.sol\":2494:2506  duration.div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":2494:2520  duration.div(_eventPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"contracts/Staking.sol\":2473:2520  uint256 eventCount = duration.div(_eventPeriod) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2547:2646  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4) */\n      tag_238\n        /* \"contracts/Staking.sol\":2642:2645  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2547:2637  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))) */\n      tag_239\n        /* \"contracts/Staking.sol\":2587:2636  _fixedAPY.mul(calDaysFromTimestamp(_eventPeriod)) */\n      tag_240\n        /* \"contracts/Staking.sol\":2601:2635  calDaysFromTimestamp(_eventPeriod) */\n      tag_241\n        /* \"contracts/Staking.sol\":2622:2634  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":2601:2621  calDaysFromTimestamp */\n      tag_159\n        /* \"contracts/Staking.sol\":2601:2635  calDaysFromTimestamp(_eventPeriod) */\n      jump\t// in\n    tag_241:\n        /* \"contracts/Staking.sol\":2587:2596  _fixedAPY */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2587:2600  _fixedAPY.mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":2587:2636  _fixedAPY.mul(calDaysFromTimestamp(_eventPeriod)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"contracts/Staking.sol\":2547:2582  staker.stakedAmount.mul(eventCount) */\n      tag_242\n        /* \"contracts/Staking.sol\":2571:2581  eventCount */\n      dup6\n        /* \"contracts/Staking.sol\":2547:2553  staker */\n      dup10\n        /* \"contracts/Staking.sol\":2547:2566  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2547:2570  staker.stakedAmount.mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":2547:2582  staker.stakedAmount.mul(eventCount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"contracts/Staking.sol\":2547:2586  staker.stakedAmount.mul(eventCount).mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":2547:2637  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"contracts/Staking.sol\":2547:2641  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":2547:2646  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/Staking.sol\":2535:2646  newReward = staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4) */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":2458:2658  {\r... */\n      pop\n        /* \"contracts/Staking.sol\":2436:2658  if (staker.mode == 1) {\r... */\n    tag_236:\n        /* \"contracts/Staking.sol\":2697:2738  staker.stakerCurrentReward.add(newReward) */\n      tag_243\n        /* \"contracts/Staking.sol\":2728:2737  newReward */\n      dup2\n        /* \"contracts/Staking.sol\":2697:2703  staker */\n      dup5\n        /* \"contracts/Staking.sol\":2697:2723  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":2697:2727  staker.stakerCurrentReward.add */\n      tag_194\n      swap1\n        /* \"contracts/Staking.sol\":2697:2738  staker.stakerCurrentReward.add(newReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"contracts/Staking.sol\":2668:2674  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2668:2694  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":2668:2738  staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2774:2789  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2749:2755  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2749:2771  staker.lastUpdatedTime */\n      0x04\n      add\n        /* \"contracts/Staking.sol\":2749:2789  staker.lastUpdatedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2086:2797  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":2055:2797  function updateReward() private{\r... */\n    tag_229:\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_245\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_247\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n    tag_113:\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_253\n        /* \"contracts/SafeBEP20.sol\":393:398  token */\n      dup4\n        /* \"contracts/SafeBEP20.sol\":423:446  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SafeBEP20.sol\":448:450  to */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":452:457  value */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":400:458  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_254\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":373:392  _callOptionalReturn */\n      tag_255\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_253:\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n    tag_137:\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_257\n        /* \"contracts/SafeBEP20.sol\":596:601  token */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":626:653  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SafeBEP20.sol\":655:659  from */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":661:663  to */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":665:670  value */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":603:671  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_258\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":576:595  _callOptionalReturn */\n      tag_255\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1846:1980  function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r... */\n    tag_159:\n        /* \"contracts/Staking.sol\":1916:1923  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":1953:1972  timedur.div(1 days) */\n      tag_262\n        /* \"contracts/Staking.sol\":1965:1971  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":1953:1960  timedur */\n      dup4\n        /* \"contracts/Staking.sol\":1953:1964  timedur.div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":1953:1972  timedur.div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"contracts/Staking.sol\":1946:1972  return timedur.div(1 days) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":1846:1980  function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_265\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n    tag_255:\n        /* \"contracts/SafeBEP20.sol\":3031:3054  bytes memory returndata */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_268\n        /* \"contracts/SafeBEP20.sol\":3085:3089  data */\n      dup3\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeBEP20.sol\":3065:3070  token */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":3057:3084  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_269\n      swap1\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/SafeBEP20.sol\":3031:3126  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/SafeBEP20.sol\":3161:3162  0 */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3141:3151  returndata */\n      dup2\n        /* \"contracts/SafeBEP20.sol\":3141:3158  returndata.length */\n      mload\n        /* \"contracts/SafeBEP20.sol\":3141:3162  returndata.length > 0 */\n      gt\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_270\n      jumpi\n        /* \"contracts/SafeBEP20.sol\":3283:3293  returndata */\n      dup1\n        /* \"contracts/SafeBEP20.sol\":3272:3302  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"contracts/SafeBEP20.sol\":3264:3349  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_273:\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_270:\n        /* \"contracts/SafeBEP20.sol\":2669:3368  {\r... */\n      pop\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_277\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_278\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_283\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_292\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_291)\n    tag_292:\n      0x60\n      swap2\n      pop\n    tag_291:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_293\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_294\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_296)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_296:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_304:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_306\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_307\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_308:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_310\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_312:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_314\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_316:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_318\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_315\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_55:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_321\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":665:784   */\n    tag_320:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_323\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_304\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_272:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_326\n      tag_322\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":1008:1127   */\n    tag_325:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_327\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_308\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_24:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_330\n      tag_322\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1351:1470   */\n    tag_329:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_331\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_312\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_88:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_334\n      tag_322\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1697:1816   */\n    tag_333:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_335\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_316\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2441   */\n    tag_48:\n        /* \"#utility.yul\":2035:2041   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup1\n        /* \"#utility.yul\":2092:2094   */\n      0x40\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2071:2078   */\n      dup6\n        /* \"#utility.yul\":2067:2090   */\n      sub\n        /* \"#utility.yul\":2063:2095   */\n      slt\n        /* \"#utility.yul\":2060:2179   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":2098:2177   */\n      tag_338\n      tag_322\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":2060:2179   */\n    tag_337:\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2243:2296   */\n      tag_339\n        /* \"#utility.yul\":2288:2295   */\n      dup6\n        /* \"#utility.yul\":2279:2285   */\n      dup3\n        /* \"#utility.yul\":2268:2277   */\n      dup7\n        /* \"#utility.yul\":2264:2286   */\n      add\n        /* \"#utility.yul\":2243:2296   */\n      tag_312\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2233:2296   */\n      swap3\n      pop\n        /* \"#utility.yul\":2189:2306   */\n      pop\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"#utility.yul\":2371:2424   */\n      tag_340\n        /* \"#utility.yul\":2416:2423   */\n      dup6\n        /* \"#utility.yul\":2407:2413   */\n      dup3\n        /* \"#utility.yul\":2396:2405   */\n      dup7\n        /* \"#utility.yul\":2392:2414   */\n      add\n        /* \"#utility.yul\":2371:2424   */\n      tag_312\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2361:2424   */\n      swap2\n      pop\n        /* \"#utility.yul\":2316:2434   */\n      pop\n        /* \"#utility.yul\":1967:2441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2447:2565   */\n    tag_341:\n        /* \"#utility.yul\":2534:2558   */\n      tag_343\n        /* \"#utility.yul\":2552:2557   */\n      dup2\n        /* \"#utility.yul\":2534:2558   */\n      tag_344\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2529:2532   */\n      dup3\n        /* \"#utility.yul\":2522:2559   */\n      mstore\n        /* \"#utility.yul\":2447:2565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2944   */\n    tag_345:\n        /* \"#utility.yul\":2675:2678   */\n      0x00\n        /* \"#utility.yul\":2703:2741   */\n      tag_347\n        /* \"#utility.yul\":2735:2740   */\n      dup3\n        /* \"#utility.yul\":2703:2741   */\n      tag_348\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2757:2845   */\n      tag_349\n        /* \"#utility.yul\":2838:2844   */\n      dup2\n        /* \"#utility.yul\":2833:2836   */\n      dup6\n        /* \"#utility.yul\":2757:2845   */\n      tag_350\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2750:2845   */\n      swap4\n      pop\n        /* \"#utility.yul\":2854:2906   */\n      tag_351\n        /* \"#utility.yul\":2899:2905   */\n      dup2\n        /* \"#utility.yul\":2894:2897   */\n      dup6\n        /* \"#utility.yul\":2887:2891   */\n      0x20\n        /* \"#utility.yul\":2880:2885   */\n      dup7\n        /* \"#utility.yul\":2876:2892   */\n      add\n        /* \"#utility.yul\":2854:2906   */\n      tag_352\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2931:2937   */\n      dup1\n        /* \"#utility.yul\":2926:2929   */\n      dup5\n        /* \"#utility.yul\":2922:2938   */\n      add\n        /* \"#utility.yul\":2915:2938   */\n      swap2\n      pop\n        /* \"#utility.yul\":2679:2944   */\n      pop\n        /* \"#utility.yul\":2571:2944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2950:3109   */\n    tag_353:\n        /* \"#utility.yul\":3051:3102   */\n      tag_355\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3051:3102   */\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3046:3049   */\n      dup3\n        /* \"#utility.yul\":3039:3103   */\n      mstore\n        /* \"#utility.yul\":2950:3109   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3479   */\n    tag_357:\n        /* \"#utility.yul\":3203:3206   */\n      0x00\n        /* \"#utility.yul\":3231:3270   */\n      tag_359\n        /* \"#utility.yul\":3264:3269   */\n      dup3\n        /* \"#utility.yul\":3231:3270   */\n      tag_360\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3286:3357   */\n      tag_361\n        /* \"#utility.yul\":3350:3356   */\n      dup2\n        /* \"#utility.yul\":3345:3348   */\n      dup6\n        /* \"#utility.yul\":3286:3357   */\n      tag_362\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3279:3357   */\n      swap4\n      pop\n        /* \"#utility.yul\":3366:3418   */\n      tag_363\n        /* \"#utility.yul\":3411:3417   */\n      dup2\n        /* \"#utility.yul\":3406:3409   */\n      dup6\n        /* \"#utility.yul\":3399:3403   */\n      0x20\n        /* \"#utility.yul\":3392:3397   */\n      dup7\n        /* \"#utility.yul\":3388:3404   */\n      add\n        /* \"#utility.yul\":3366:3418   */\n      tag_352\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3443:3472   */\n      tag_364\n        /* \"#utility.yul\":3465:3471   */\n      dup2\n        /* \"#utility.yul\":3443:3472   */\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3438:3441   */\n      dup5\n        /* \"#utility.yul\":3434:3473   */\n      add\n        /* \"#utility.yul\":3427:3473   */\n      swap2\n      pop\n        /* \"#utility.yul\":3207:3479   */\n      pop\n        /* \"#utility.yul\":3115:3479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3485:3851   */\n    tag_366:\n        /* \"#utility.yul\":3627:3630   */\n      0x00\n        /* \"#utility.yul\":3648:3715   */\n      tag_368\n        /* \"#utility.yul\":3712:3714   */\n      0x10\n        /* \"#utility.yul\":3707:3710   */\n      dup4\n        /* \"#utility.yul\":3648:3715   */\n      tag_362\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3641:3715   */\n      swap2\n      pop\n        /* \"#utility.yul\":3724:3817   */\n      tag_369\n        /* \"#utility.yul\":3813:3816   */\n      dup3\n        /* \"#utility.yul\":3724:3817   */\n      tag_370\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":3842:3844   */\n      0x20\n        /* \"#utility.yul\":3837:3840   */\n      dup3\n        /* \"#utility.yul\":3833:3845   */\n      add\n        /* \"#utility.yul\":3826:3845   */\n      swap1\n      pop\n        /* \"#utility.yul\":3485:3851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3857:4223   */\n    tag_371:\n        /* \"#utility.yul\":3999:4002   */\n      0x00\n        /* \"#utility.yul\":4020:4087   */\n      tag_373\n        /* \"#utility.yul\":4084:4086   */\n      0x2a\n        /* \"#utility.yul\":4079:4082   */\n      dup4\n        /* \"#utility.yul\":4020:4087   */\n      tag_362\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4013:4087   */\n      swap2\n      pop\n        /* \"#utility.yul\":4096:4189   */\n      tag_374\n        /* \"#utility.yul\":4185:4188   */\n      dup3\n        /* \"#utility.yul\":4096:4189   */\n      tag_375\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4209:4212   */\n      dup3\n        /* \"#utility.yul\":4205:4217   */\n      add\n        /* \"#utility.yul\":4198:4217   */\n      swap1\n      pop\n        /* \"#utility.yul\":3857:4223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4229:4595   */\n    tag_376:\n        /* \"#utility.yul\":4371:4374   */\n      0x00\n        /* \"#utility.yul\":4392:4459   */\n      tag_378\n        /* \"#utility.yul\":4456:4458   */\n      0x26\n        /* \"#utility.yul\":4451:4454   */\n      dup4\n        /* \"#utility.yul\":4392:4459   */\n      tag_362\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4385:4459   */\n      swap2\n      pop\n        /* \"#utility.yul\":4468:4561   */\n      tag_379\n        /* \"#utility.yul\":4557:4560   */\n      dup3\n        /* \"#utility.yul\":4468:4561   */\n      tag_380\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4586:4588   */\n      0x40\n        /* \"#utility.yul\":4581:4584   */\n      dup3\n        /* \"#utility.yul\":4577:4589   */\n      add\n        /* \"#utility.yul\":4570:4589   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4601:4967   */\n    tag_381:\n        /* \"#utility.yul\":4743:4746   */\n      0x00\n        /* \"#utility.yul\":4764:4831   */\n      tag_383\n        /* \"#utility.yul\":4828:4830   */\n      0x0e\n        /* \"#utility.yul\":4823:4826   */\n      dup4\n        /* \"#utility.yul\":4764:4831   */\n      tag_362\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4757:4831   */\n      swap2\n      pop\n        /* \"#utility.yul\":4840:4933   */\n      tag_384\n        /* \"#utility.yul\":4929:4932   */\n      dup3\n        /* \"#utility.yul\":4840:4933   */\n      tag_385\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4958:4960   */\n      0x20\n        /* \"#utility.yul\":4953:4956   */\n      dup3\n        /* \"#utility.yul\":4949:4961   */\n      add\n        /* \"#utility.yul\":4942:4961   */\n      swap1\n      pop\n        /* \"#utility.yul\":4601:4967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4973:5339   */\n    tag_386:\n        /* \"#utility.yul\":5115:5118   */\n      0x00\n        /* \"#utility.yul\":5136:5203   */\n      tag_388\n        /* \"#utility.yul\":5200:5202   */\n      0x26\n        /* \"#utility.yul\":5195:5198   */\n      dup4\n        /* \"#utility.yul\":5136:5203   */\n      tag_362\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5129:5203   */\n      swap2\n      pop\n        /* \"#utility.yul\":5212:5305   */\n      tag_389\n        /* \"#utility.yul\":5301:5304   */\n      dup3\n        /* \"#utility.yul\":5212:5305   */\n      tag_390\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":5330:5332   */\n      0x40\n        /* \"#utility.yul\":5325:5328   */\n      dup3\n        /* \"#utility.yul\":5321:5333   */\n      add\n        /* \"#utility.yul\":5314:5333   */\n      swap1\n      pop\n        /* \"#utility.yul\":4973:5339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5345:5711   */\n    tag_391:\n        /* \"#utility.yul\":5487:5490   */\n      0x00\n        /* \"#utility.yul\":5508:5575   */\n      tag_393\n        /* \"#utility.yul\":5572:5574   */\n      0x26\n        /* \"#utility.yul\":5567:5570   */\n      dup4\n        /* \"#utility.yul\":5508:5575   */\n      tag_362\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5501:5575   */\n      swap2\n      pop\n        /* \"#utility.yul\":5584:5677   */\n      tag_394\n        /* \"#utility.yul\":5673:5676   */\n      dup3\n        /* \"#utility.yul\":5584:5677   */\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5702:5704   */\n      0x40\n        /* \"#utility.yul\":5697:5700   */\n      dup3\n        /* \"#utility.yul\":5693:5705   */\n      add\n        /* \"#utility.yul\":5686:5705   */\n      swap1\n      pop\n        /* \"#utility.yul\":5345:5711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5717:6083   */\n    tag_396:\n        /* \"#utility.yul\":5859:5862   */\n      0x00\n        /* \"#utility.yul\":5880:5947   */\n      tag_398\n        /* \"#utility.yul\":5944:5946   */\n      0x1f\n        /* \"#utility.yul\":5939:5942   */\n      dup4\n        /* \"#utility.yul\":5880:5947   */\n      tag_362\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":5873:5947   */\n      swap2\n      pop\n        /* \"#utility.yul\":5956:6049   */\n      tag_399\n        /* \"#utility.yul\":6045:6048   */\n      dup3\n        /* \"#utility.yul\":5956:6049   */\n      tag_400\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6074:6076   */\n      0x20\n        /* \"#utility.yul\":6069:6072   */\n      dup3\n        /* \"#utility.yul\":6065:6077   */\n      add\n        /* \"#utility.yul\":6058:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5717:6083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6089:6455   */\n    tag_401:\n        /* \"#utility.yul\":6231:6234   */\n      0x00\n        /* \"#utility.yul\":6252:6319   */\n      tag_403\n        /* \"#utility.yul\":6316:6318   */\n      0x20\n        /* \"#utility.yul\":6311:6314   */\n      dup4\n        /* \"#utility.yul\":6252:6319   */\n      tag_362\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6245:6319   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6421   */\n      tag_404\n        /* \"#utility.yul\":6417:6420   */\n      dup3\n        /* \"#utility.yul\":6328:6421   */\n      tag_405\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":6446:6448   */\n      0x20\n        /* \"#utility.yul\":6441:6444   */\n      dup3\n        /* \"#utility.yul\":6437:6449   */\n      add\n        /* \"#utility.yul\":6430:6449   */\n      swap1\n      pop\n        /* \"#utility.yul\":6089:6455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6461:6827   */\n    tag_406:\n        /* \"#utility.yul\":6603:6606   */\n      0x00\n        /* \"#utility.yul\":6624:6691   */\n      tag_408\n        /* \"#utility.yul\":6688:6690   */\n      0x0b\n        /* \"#utility.yul\":6683:6686   */\n      dup4\n        /* \"#utility.yul\":6624:6691   */\n      tag_362\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":6617:6691   */\n      swap2\n      pop\n        /* \"#utility.yul\":6700:6793   */\n      tag_409\n        /* \"#utility.yul\":6789:6792   */\n      dup3\n        /* \"#utility.yul\":6700:6793   */\n      tag_410\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":6818:6820   */\n      0x20\n        /* \"#utility.yul\":6813:6816   */\n      dup3\n        /* \"#utility.yul\":6809:6821   */\n      add\n        /* \"#utility.yul\":6802:6821   */\n      swap1\n      pop\n        /* \"#utility.yul\":6461:6827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6833:7199   */\n    tag_411:\n        /* \"#utility.yul\":6975:6978   */\n      0x00\n        /* \"#utility.yul\":6996:7063   */\n      tag_413\n        /* \"#utility.yul\":7060:7062   */\n      0x1d\n        /* \"#utility.yul\":7055:7058   */\n      dup4\n        /* \"#utility.yul\":6996:7063   */\n      tag_362\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":6989:7063   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7165   */\n      tag_414\n        /* \"#utility.yul\":7161:7164   */\n      dup3\n        /* \"#utility.yul\":7072:7165   */\n      tag_415\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7190:7192   */\n      0x20\n        /* \"#utility.yul\":7185:7188   */\n      dup3\n        /* \"#utility.yul\":7181:7193   */\n      add\n        /* \"#utility.yul\":7174:7193   */\n      swap1\n      pop\n        /* \"#utility.yul\":6833:7199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7205:7571   */\n    tag_416:\n        /* \"#utility.yul\":7347:7350   */\n      0x00\n        /* \"#utility.yul\":7368:7435   */\n      tag_418\n        /* \"#utility.yul\":7432:7434   */\n      0x1a\n        /* \"#utility.yul\":7427:7430   */\n      dup4\n        /* \"#utility.yul\":7368:7435   */\n      tag_362\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":7361:7435   */\n      swap2\n      pop\n        /* \"#utility.yul\":7444:7537   */\n      tag_419\n        /* \"#utility.yul\":7533:7536   */\n      dup3\n        /* \"#utility.yul\":7444:7537   */\n      tag_420\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7557:7560   */\n      dup3\n        /* \"#utility.yul\":7553:7565   */\n      add\n        /* \"#utility.yul\":7546:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7205:7571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7577:7943   */\n    tag_421:\n        /* \"#utility.yul\":7719:7722   */\n      0x00\n        /* \"#utility.yul\":7740:7807   */\n      tag_423\n        /* \"#utility.yul\":7804:7806   */\n      0x17\n        /* \"#utility.yul\":7799:7802   */\n      dup4\n        /* \"#utility.yul\":7740:7807   */\n      tag_362\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":7733:7807   */\n      swap2\n      pop\n        /* \"#utility.yul\":7816:7909   */\n      tag_424\n        /* \"#utility.yul\":7905:7908   */\n      dup3\n        /* \"#utility.yul\":7816:7909   */\n      tag_425\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":7934:7936   */\n      0x20\n        /* \"#utility.yul\":7929:7932   */\n      dup3\n        /* \"#utility.yul\":7925:7937   */\n      add\n        /* \"#utility.yul\":7918:7937   */\n      swap1\n      pop\n        /* \"#utility.yul\":7577:7943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7949:8315   */\n    tag_426:\n        /* \"#utility.yul\":8091:8094   */\n      0x00\n        /* \"#utility.yul\":8112:8179   */\n      tag_428\n        /* \"#utility.yul\":8176:8178   */\n      0x0d\n        /* \"#utility.yul\":8171:8174   */\n      dup4\n        /* \"#utility.yul\":8112:8179   */\n      tag_362\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":8105:8179   */\n      swap2\n      pop\n        /* \"#utility.yul\":8188:8281   */\n      tag_429\n        /* \"#utility.yul\":8277:8280   */\n      dup3\n        /* \"#utility.yul\":8188:8281   */\n      tag_430\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":8306:8308   */\n      0x20\n        /* \"#utility.yul\":8301:8304   */\n      dup3\n        /* \"#utility.yul\":8297:8309   */\n      add\n        /* \"#utility.yul\":8290:8309   */\n      swap1\n      pop\n        /* \"#utility.yul\":7949:8315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8321:8439   */\n    tag_431:\n        /* \"#utility.yul\":8408:8432   */\n      tag_433\n        /* \"#utility.yul\":8426:8431   */\n      dup2\n        /* \"#utility.yul\":8408:8432   */\n      tag_434\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":8403:8406   */\n      dup3\n        /* \"#utility.yul\":8396:8433   */\n      mstore\n        /* \"#utility.yul\":8321:8439   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8445:8716   */\n    tag_289:\n        /* \"#utility.yul\":8575:8578   */\n      0x00\n        /* \"#utility.yul\":8597:8690   */\n      tag_436\n        /* \"#utility.yul\":8686:8689   */\n      dup3\n        /* \"#utility.yul\":8677:8683   */\n      dup5\n        /* \"#utility.yul\":8597:8690   */\n      tag_345\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8590:8690   */\n      swap2\n      pop\n        /* \"#utility.yul\":8707:8710   */\n      dup2\n        /* \"#utility.yul\":8700:8710   */\n      swap1\n      pop\n        /* \"#utility.yul\":8445:8716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8722:8944   */\n    tag_60:\n        /* \"#utility.yul\":8815:8819   */\n      0x00\n        /* \"#utility.yul\":8853:8855   */\n      0x20\n        /* \"#utility.yul\":8842:8851   */\n      dup3\n        /* \"#utility.yul\":8838:8856   */\n      add\n        /* \"#utility.yul\":8830:8856   */\n      swap1\n      pop\n        /* \"#utility.yul\":8866:8937   */\n      tag_438\n        /* \"#utility.yul\":8934:8935   */\n      0x00\n        /* \"#utility.yul\":8923:8932   */\n      dup4\n        /* \"#utility.yul\":8919:8936   */\n      add\n        /* \"#utility.yul\":8910:8916   */\n      dup5\n        /* \"#utility.yul\":8866:8937   */\n      tag_341\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8722:8944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8950:9392   */\n    tag_259:\n        /* \"#utility.yul\":9099:9103   */\n      0x00\n        /* \"#utility.yul\":9137:9139   */\n      0x60\n        /* \"#utility.yul\":9126:9135   */\n      dup3\n        /* \"#utility.yul\":9122:9140   */\n      add\n        /* \"#utility.yul\":9114:9140   */\n      swap1\n      pop\n        /* \"#utility.yul\":9150:9221   */\n      tag_440\n        /* \"#utility.yul\":9218:9219   */\n      0x00\n        /* \"#utility.yul\":9207:9216   */\n      dup4\n        /* \"#utility.yul\":9203:9220   */\n      add\n        /* \"#utility.yul\":9194:9200   */\n      dup7\n        /* \"#utility.yul\":9150:9221   */\n      tag_341\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":9231:9303   */\n      tag_441\n        /* \"#utility.yul\":9299:9301   */\n      0x20\n        /* \"#utility.yul\":9288:9297   */\n      dup4\n        /* \"#utility.yul\":9284:9302   */\n      add\n        /* \"#utility.yul\":9275:9281   */\n      dup6\n        /* \"#utility.yul\":9231:9303   */\n      tag_341\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9313:9385   */\n      tag_442\n        /* \"#utility.yul\":9381:9383   */\n      0x40\n        /* \"#utility.yul\":9370:9379   */\n      dup4\n        /* \"#utility.yul\":9366:9384   */\n      add\n        /* \"#utility.yul\":9357:9363   */\n      dup5\n        /* \"#utility.yul\":9313:9385   */\n      tag_431\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":8950:9392   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9398:9730   */\n    tag_115:\n        /* \"#utility.yul\":9519:9523   */\n      0x00\n        /* \"#utility.yul\":9557:9559   */\n      0x40\n        /* \"#utility.yul\":9546:9555   */\n      dup3\n        /* \"#utility.yul\":9542:9560   */\n      add\n        /* \"#utility.yul\":9534:9560   */\n      swap1\n      pop\n        /* \"#utility.yul\":9570:9641   */\n      tag_444\n        /* \"#utility.yul\":9638:9639   */\n      0x00\n        /* \"#utility.yul\":9627:9636   */\n      dup4\n        /* \"#utility.yul\":9623:9640   */\n      add\n        /* \"#utility.yul\":9614:9620   */\n      dup6\n        /* \"#utility.yul\":9570:9641   */\n      tag_341\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9651:9723   */\n      tag_445\n        /* \"#utility.yul\":9719:9721   */\n      0x20\n        /* \"#utility.yul\":9708:9717   */\n      dup4\n        /* \"#utility.yul\":9704:9722   */\n      add\n        /* \"#utility.yul\":9695:9701   */\n      dup5\n        /* \"#utility.yul\":9651:9723   */\n      tag_431\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":9398:9730   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9736:9986   */\n    tag_73:\n        /* \"#utility.yul\":9843:9847   */\n      0x00\n        /* \"#utility.yul\":9881:9883   */\n      0x20\n        /* \"#utility.yul\":9870:9879   */\n      dup3\n        /* \"#utility.yul\":9866:9884   */\n      add\n        /* \"#utility.yul\":9858:9884   */\n      swap1\n      pop\n        /* \"#utility.yul\":9894:9979   */\n      tag_447\n        /* \"#utility.yul\":9976:9977   */\n      0x00\n        /* \"#utility.yul\":9965:9974   */\n      dup4\n        /* \"#utility.yul\":9961:9978   */\n      add\n        /* \"#utility.yul\":9952:9958   */\n      dup5\n        /* \"#utility.yul\":9894:9979   */\n      tag_353\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9736:9986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9992:10305   */\n    tag_302:\n        /* \"#utility.yul\":10105:10109   */\n      0x00\n        /* \"#utility.yul\":10143:10145   */\n      0x20\n        /* \"#utility.yul\":10132:10141   */\n      dup3\n        /* \"#utility.yul\":10128:10146   */\n      add\n        /* \"#utility.yul\":10120:10146   */\n      swap1\n      pop\n        /* \"#utility.yul\":10192:10201   */\n      dup2\n        /* \"#utility.yul\":10186:10190   */\n      dup2\n        /* \"#utility.yul\":10182:10202   */\n      sub\n        /* \"#utility.yul\":10178:10179   */\n      0x00\n        /* \"#utility.yul\":10167:10176   */\n      dup4\n        /* \"#utility.yul\":10163:10180   */\n      add\n        /* \"#utility.yul\":10156:10203   */\n      mstore\n        /* \"#utility.yul\":10220:10298   */\n      tag_449\n        /* \"#utility.yul\":10293:10297   */\n      dup2\n        /* \"#utility.yul\":10284:10290   */\n      dup5\n        /* \"#utility.yul\":10220:10298   */\n      tag_357\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10212:10298   */\n      swap1\n      pop\n        /* \"#utility.yul\":9992:10305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10311:10730   */\n    tag_124:\n        /* \"#utility.yul\":10477:10481   */\n      0x00\n        /* \"#utility.yul\":10515:10517   */\n      0x20\n        /* \"#utility.yul\":10504:10513   */\n      dup3\n        /* \"#utility.yul\":10500:10518   */\n      add\n        /* \"#utility.yul\":10492:10518   */\n      swap1\n      pop\n        /* \"#utility.yul\":10564:10573   */\n      dup2\n        /* \"#utility.yul\":10558:10562   */\n      dup2\n        /* \"#utility.yul\":10554:10574   */\n      sub\n        /* \"#utility.yul\":10550:10551   */\n      0x00\n        /* \"#utility.yul\":10539:10548   */\n      dup4\n        /* \"#utility.yul\":10535:10552   */\n      add\n        /* \"#utility.yul\":10528:10575   */\n      mstore\n        /* \"#utility.yul\":10592:10723   */\n      tag_451\n        /* \"#utility.yul\":10718:10722   */\n      dup2\n        /* \"#utility.yul\":10592:10723   */\n      tag_366\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":10584:10723   */\n      swap1\n      pop\n        /* \"#utility.yul\":10311:10730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10736:11155   */\n    tag_275:\n        /* \"#utility.yul\":10902:10906   */\n      0x00\n        /* \"#utility.yul\":10940:10942   */\n      0x20\n        /* \"#utility.yul\":10929:10938   */\n      dup3\n        /* \"#utility.yul\":10925:10943   */\n      add\n        /* \"#utility.yul\":10917:10943   */\n      swap1\n      pop\n        /* \"#utility.yul\":10989:10998   */\n      dup2\n        /* \"#utility.yul\":10983:10987   */\n      dup2\n        /* \"#utility.yul\":10979:10999   */\n      sub\n        /* \"#utility.yul\":10975:10976   */\n      0x00\n        /* \"#utility.yul\":10964:10973   */\n      dup4\n        /* \"#utility.yul\":10960:10977   */\n      add\n        /* \"#utility.yul\":10953:11000   */\n      mstore\n        /* \"#utility.yul\":11017:11148   */\n      tag_453\n        /* \"#utility.yul\":11143:11147   */\n      dup2\n        /* \"#utility.yul\":11017:11148   */\n      tag_371\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11009:11148   */\n      swap1\n      pop\n        /* \"#utility.yul\":10736:11155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11161:11580   */\n    tag_226:\n        /* \"#utility.yul\":11327:11331   */\n      0x00\n        /* \"#utility.yul\":11365:11367   */\n      0x20\n        /* \"#utility.yul\":11354:11363   */\n      dup3\n        /* \"#utility.yul\":11350:11368   */\n      add\n        /* \"#utility.yul\":11342:11368   */\n      swap1\n      pop\n        /* \"#utility.yul\":11414:11423   */\n      dup2\n        /* \"#utility.yul\":11408:11412   */\n      dup2\n        /* \"#utility.yul\":11404:11424   */\n      sub\n        /* \"#utility.yul\":11400:11401   */\n      0x00\n        /* \"#utility.yul\":11389:11398   */\n      dup4\n        /* \"#utility.yul\":11385:11402   */\n      add\n        /* \"#utility.yul\":11378:11425   */\n      mstore\n        /* \"#utility.yul\":11442:11573   */\n      tag_455\n        /* \"#utility.yul\":11568:11572   */\n      dup2\n        /* \"#utility.yul\":11442:11573   */\n      tag_376\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11434:11573   */\n      swap1\n      pop\n        /* \"#utility.yul\":11161:11580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11586:12005   */\n    tag_80:\n        /* \"#utility.yul\":11752:11756   */\n      0x00\n        /* \"#utility.yul\":11790:11792   */\n      0x20\n        /* \"#utility.yul\":11779:11788   */\n      dup3\n        /* \"#utility.yul\":11775:11793   */\n      add\n        /* \"#utility.yul\":11767:11793   */\n      swap1\n      pop\n        /* \"#utility.yul\":11839:11848   */\n      dup2\n        /* \"#utility.yul\":11833:11837   */\n      dup2\n        /* \"#utility.yul\":11829:11849   */\n      sub\n        /* \"#utility.yul\":11825:11826   */\n      0x00\n        /* \"#utility.yul\":11814:11823   */\n      dup4\n        /* \"#utility.yul\":11810:11827   */\n      add\n        /* \"#utility.yul\":11803:11850   */\n      mstore\n        /* \"#utility.yul\":11867:11998   */\n      tag_457\n        /* \"#utility.yul\":11993:11997   */\n      dup2\n        /* \"#utility.yul\":11867:11998   */\n      tag_381\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":11859:11998   */\n      swap1\n      pop\n        /* \"#utility.yul\":11586:12005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12011:12430   */\n    tag_282:\n        /* \"#utility.yul\":12177:12181   */\n      0x00\n        /* \"#utility.yul\":12215:12217   */\n      0x20\n        /* \"#utility.yul\":12204:12213   */\n      dup3\n        /* \"#utility.yul\":12200:12218   */\n      add\n        /* \"#utility.yul\":12192:12218   */\n      swap1\n      pop\n        /* \"#utility.yul\":12264:12273   */\n      dup2\n        /* \"#utility.yul\":12258:12262   */\n      dup2\n        /* \"#utility.yul\":12254:12274   */\n      sub\n        /* \"#utility.yul\":12250:12251   */\n      0x00\n        /* \"#utility.yul\":12239:12248   */\n      dup4\n        /* \"#utility.yul\":12235:12252   */\n      add\n        /* \"#utility.yul\":12228:12275   */\n      mstore\n        /* \"#utility.yul\":12292:12423   */\n      tag_459\n        /* \"#utility.yul\":12418:12422   */\n      dup2\n        /* \"#utility.yul\":12292:12423   */\n      tag_386\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12284:12423   */\n      swap1\n      pop\n        /* \"#utility.yul\":12011:12430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12436:12855   */\n    tag_205:\n        /* \"#utility.yul\":12602:12606   */\n      0x00\n        /* \"#utility.yul\":12640:12642   */\n      0x20\n        /* \"#utility.yul\":12629:12638   */\n      dup3\n        /* \"#utility.yul\":12625:12643   */\n      add\n        /* \"#utility.yul\":12617:12643   */\n      swap1\n      pop\n        /* \"#utility.yul\":12689:12698   */\n      dup2\n        /* \"#utility.yul\":12683:12687   */\n      dup2\n        /* \"#utility.yul\":12679:12699   */\n      sub\n        /* \"#utility.yul\":12675:12676   */\n      0x00\n        /* \"#utility.yul\":12664:12673   */\n      dup4\n        /* \"#utility.yul\":12660:12677   */\n      add\n        /* \"#utility.yul\":12653:12700   */\n      mstore\n        /* \"#utility.yul\":12717:12848   */\n      tag_461\n        /* \"#utility.yul\":12843:12847   */\n      dup2\n        /* \"#utility.yul\":12717:12848   */\n      tag_391\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12709:12848   */\n      swap1\n      pop\n        /* \"#utility.yul\":12436:12855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12861:13280   */\n    tag_77:\n        /* \"#utility.yul\":13027:13031   */\n      0x00\n        /* \"#utility.yul\":13065:13067   */\n      0x20\n        /* \"#utility.yul\":13054:13063   */\n      dup3\n        /* \"#utility.yul\":13050:13068   */\n      add\n        /* \"#utility.yul\":13042:13068   */\n      swap1\n      pop\n        /* \"#utility.yul\":13114:13123   */\n      dup2\n        /* \"#utility.yul\":13108:13112   */\n      dup2\n        /* \"#utility.yul\":13104:13124   */\n      sub\n        /* \"#utility.yul\":13100:13101   */\n      0x00\n        /* \"#utility.yul\":13089:13098   */\n      dup4\n        /* \"#utility.yul\":13085:13102   */\n      add\n        /* \"#utility.yul\":13078:13125   */\n      mstore\n        /* \"#utility.yul\":13142:13273   */\n      tag_463\n        /* \"#utility.yul\":13268:13272   */\n      dup2\n        /* \"#utility.yul\":13142:13273   */\n      tag_396\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":13134:13273   */\n      swap1\n      pop\n        /* \"#utility.yul\":12861:13280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13286:13705   */\n    tag_145:\n        /* \"#utility.yul\":13452:13456   */\n      0x00\n        /* \"#utility.yul\":13490:13492   */\n      0x20\n        /* \"#utility.yul\":13479:13488   */\n      dup3\n        /* \"#utility.yul\":13475:13493   */\n      add\n        /* \"#utility.yul\":13467:13493   */\n      swap1\n      pop\n        /* \"#utility.yul\":13539:13548   */\n      dup2\n        /* \"#utility.yul\":13533:13537   */\n      dup2\n        /* \"#utility.yul\":13529:13549   */\n      sub\n        /* \"#utility.yul\":13525:13526   */\n      0x00\n        /* \"#utility.yul\":13514:13523   */\n      dup4\n        /* \"#utility.yul\":13510:13527   */\n      add\n        /* \"#utility.yul\":13503:13550   */\n      mstore\n        /* \"#utility.yul\":13567:13698   */\n      tag_465\n        /* \"#utility.yul\":13693:13697   */\n      dup2\n        /* \"#utility.yul\":13567:13698   */\n      tag_401\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":13559:13698   */\n      swap1\n      pop\n        /* \"#utility.yul\":13286:13705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13711:14130   */\n    tag_149:\n        /* \"#utility.yul\":13877:13881   */\n      0x00\n        /* \"#utility.yul\":13915:13917   */\n      0x20\n        /* \"#utility.yul\":13904:13913   */\n      dup3\n        /* \"#utility.yul\":13900:13918   */\n      add\n        /* \"#utility.yul\":13892:13918   */\n      swap1\n      pop\n        /* \"#utility.yul\":13964:13973   */\n      dup2\n        /* \"#utility.yul\":13958:13962   */\n      dup2\n        /* \"#utility.yul\":13954:13974   */\n      sub\n        /* \"#utility.yul\":13950:13951   */\n      0x00\n        /* \"#utility.yul\":13939:13948   */\n      dup4\n        /* \"#utility.yul\":13935:13952   */\n      add\n        /* \"#utility.yul\":13928:13975   */\n      mstore\n        /* \"#utility.yul\":13992:14123   */\n      tag_467\n        /* \"#utility.yul\":14118:14122   */\n      dup2\n        /* \"#utility.yul\":13992:14123   */\n      tag_406\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":13984:14123   */\n      swap1\n      pop\n        /* \"#utility.yul\":13711:14130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14136:14555   */\n    tag_287:\n        /* \"#utility.yul\":14302:14306   */\n      0x00\n        /* \"#utility.yul\":14340:14342   */\n      0x20\n        /* \"#utility.yul\":14329:14338   */\n      dup3\n        /* \"#utility.yul\":14325:14343   */\n      add\n        /* \"#utility.yul\":14317:14343   */\n      swap1\n      pop\n        /* \"#utility.yul\":14389:14398   */\n      dup2\n        /* \"#utility.yul\":14383:14387   */\n      dup2\n        /* \"#utility.yul\":14379:14399   */\n      sub\n        /* \"#utility.yul\":14375:14376   */\n      0x00\n        /* \"#utility.yul\":14364:14373   */\n      dup4\n        /* \"#utility.yul\":14360:14377   */\n      add\n        /* \"#utility.yul\":14353:14400   */\n      mstore\n        /* \"#utility.yul\":14417:14548   */\n      tag_469\n        /* \"#utility.yul\":14543:14547   */\n      dup2\n        /* \"#utility.yul\":14417:14548   */\n      tag_411\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":14409:14548   */\n      swap1\n      pop\n        /* \"#utility.yul\":14136:14555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14561:14980   */\n    tag_216:\n        /* \"#utility.yul\":14727:14731   */\n      0x00\n        /* \"#utility.yul\":14765:14767   */\n      0x20\n        /* \"#utility.yul\":14754:14763   */\n      dup3\n        /* \"#utility.yul\":14750:14768   */\n      add\n        /* \"#utility.yul\":14742:14768   */\n      swap1\n      pop\n        /* \"#utility.yul\":14814:14823   */\n      dup2\n        /* \"#utility.yul\":14808:14812   */\n      dup2\n        /* \"#utility.yul\":14804:14824   */\n      sub\n        /* \"#utility.yul\":14800:14801   */\n      0x00\n        /* \"#utility.yul\":14789:14798   */\n      dup4\n        /* \"#utility.yul\":14785:14802   */\n      add\n        /* \"#utility.yul\":14778:14825   */\n      mstore\n        /* \"#utility.yul\":14842:14973   */\n      tag_471\n        /* \"#utility.yul\":14968:14972   */\n      dup2\n        /* \"#utility.yul\":14842:14973   */\n      tag_416\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":14834:14973   */\n      swap1\n      pop\n        /* \"#utility.yul\":14561:14980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14986:15405   */\n    tag_170:\n        /* \"#utility.yul\":15152:15156   */\n      0x00\n        /* \"#utility.yul\":15190:15192   */\n      0x20\n        /* \"#utility.yul\":15179:15188   */\n      dup3\n        /* \"#utility.yul\":15175:15193   */\n      add\n        /* \"#utility.yul\":15167:15193   */\n      swap1\n      pop\n        /* \"#utility.yul\":15239:15248   */\n      dup2\n        /* \"#utility.yul\":15233:15237   */\n      dup2\n        /* \"#utility.yul\":15229:15249   */\n      sub\n        /* \"#utility.yul\":15225:15226   */\n      0x00\n        /* \"#utility.yul\":15214:15223   */\n      dup4\n        /* \"#utility.yul\":15210:15227   */\n      add\n        /* \"#utility.yul\":15203:15250   */\n      mstore\n        /* \"#utility.yul\":15267:15398   */\n      tag_473\n        /* \"#utility.yul\":15393:15397   */\n      dup2\n        /* \"#utility.yul\":15267:15398   */\n      tag_421\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":15259:15398   */\n      swap1\n      pop\n        /* \"#utility.yul\":14986:15405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15411:15830   */\n    tag_190:\n        /* \"#utility.yul\":15577:15581   */\n      0x00\n        /* \"#utility.yul\":15615:15617   */\n      0x20\n        /* \"#utility.yul\":15604:15613   */\n      dup3\n        /* \"#utility.yul\":15600:15618   */\n      add\n        /* \"#utility.yul\":15592:15618   */\n      swap1\n      pop\n        /* \"#utility.yul\":15664:15673   */\n      dup2\n        /* \"#utility.yul\":15658:15662   */\n      dup2\n        /* \"#utility.yul\":15654:15674   */\n      sub\n        /* \"#utility.yul\":15650:15651   */\n      0x00\n        /* \"#utility.yul\":15639:15648   */\n      dup4\n        /* \"#utility.yul\":15635:15652   */\n      add\n        /* \"#utility.yul\":15628:15675   */\n      mstore\n        /* \"#utility.yul\":15692:15823   */\n      tag_475\n        /* \"#utility.yul\":15818:15822   */\n      dup2\n        /* \"#utility.yul\":15692:15823   */\n      tag_426\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":15684:15823   */\n      swap1\n      pop\n        /* \"#utility.yul\":15411:15830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15836:16058   */\n    tag_29:\n        /* \"#utility.yul\":15929:15933   */\n      0x00\n        /* \"#utility.yul\":15967:15969   */\n      0x20\n        /* \"#utility.yul\":15956:15965   */\n      dup3\n        /* \"#utility.yul\":15952:15970   */\n      add\n        /* \"#utility.yul\":15944:15970   */\n      swap1\n      pop\n        /* \"#utility.yul\":15980:16051   */\n      tag_477\n        /* \"#utility.yul\":16048:16049   */\n      0x00\n        /* \"#utility.yul\":16037:16046   */\n      dup4\n        /* \"#utility.yul\":16033:16050   */\n      add\n        /* \"#utility.yul\":16024:16030   */\n      dup5\n        /* \"#utility.yul\":15980:16051   */\n      tag_431\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":15836:16058   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16145:16243   */\n    tag_348:\n        /* \"#utility.yul\":16196:16202   */\n      0x00\n        /* \"#utility.yul\":16230:16235   */\n      dup2\n        /* \"#utility.yul\":16224:16236   */\n      mload\n        /* \"#utility.yul\":16214:16236   */\n      swap1\n      pop\n        /* \"#utility.yul\":16145:16243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16249:16348   */\n    tag_360:\n        /* \"#utility.yul\":16301:16307   */\n      0x00\n        /* \"#utility.yul\":16335:16340   */\n      dup2\n        /* \"#utility.yul\":16329:16341   */\n      mload\n        /* \"#utility.yul\":16319:16341   */\n      swap1\n      pop\n        /* \"#utility.yul\":16249:16348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16354:16501   */\n    tag_350:\n        /* \"#utility.yul\":16455:16466   */\n      0x00\n        /* \"#utility.yul\":16492:16495   */\n      dup2\n        /* \"#utility.yul\":16477:16495   */\n      swap1\n      pop\n        /* \"#utility.yul\":16354:16501   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16507:16676   */\n    tag_362:\n        /* \"#utility.yul\":16591:16602   */\n      0x00\n        /* \"#utility.yul\":16625:16631   */\n      dup3\n        /* \"#utility.yul\":16620:16623   */\n      dup3\n        /* \"#utility.yul\":16613:16632   */\n      mstore\n        /* \"#utility.yul\":16665:16669   */\n      0x20\n        /* \"#utility.yul\":16660:16663   */\n      dup3\n        /* \"#utility.yul\":16656:16670   */\n      add\n        /* \"#utility.yul\":16641:16670   */\n      swap1\n      pop\n        /* \"#utility.yul\":16507:16676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16682:16987   */\n    tag_266:\n        /* \"#utility.yul\":16722:16725   */\n      0x00\n        /* \"#utility.yul\":16741:16761   */\n      tag_485\n        /* \"#utility.yul\":16759:16760   */\n      dup3\n        /* \"#utility.yul\":16741:16761   */\n      tag_434\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":16736:16761   */\n      swap2\n      pop\n        /* \"#utility.yul\":16775:16795   */\n      tag_486\n        /* \"#utility.yul\":16793:16794   */\n      dup4\n        /* \"#utility.yul\":16775:16795   */\n      tag_434\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":16770:16795   */\n      swap3\n      pop\n        /* \"#utility.yul\":16929:16930   */\n      dup3\n        /* \"#utility.yul\":16861:16927   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16857:16931   */\n      sub\n        /* \"#utility.yul\":16854:16855   */\n      dup3\n        /* \"#utility.yul\":16851:16932   */\n      gt\n        /* \"#utility.yul\":16848:16955   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":16935:16953   */\n      tag_488\n      tag_489\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":16848:16955   */\n    tag_487:\n        /* \"#utility.yul\":16979:16980   */\n      dup3\n        /* \"#utility.yul\":16976:16977   */\n      dup3\n        /* \"#utility.yul\":16972:16981   */\n      add\n        /* \"#utility.yul\":16965:16981   */\n      swap1\n      pop\n        /* \"#utility.yul\":16682:16987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16993:17178   */\n    tag_248:\n        /* \"#utility.yul\":17033:17034   */\n      0x00\n        /* \"#utility.yul\":17050:17070   */\n      tag_491\n        /* \"#utility.yul\":17068:17069   */\n      dup3\n        /* \"#utility.yul\":17050:17070   */\n      tag_434\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":17045:17070   */\n      swap2\n      pop\n        /* \"#utility.yul\":17084:17104   */\n      tag_492\n        /* \"#utility.yul\":17102:17103   */\n      dup4\n        /* \"#utility.yul\":17084:17104   */\n      tag_434\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":17079:17104   */\n      swap3\n      pop\n        /* \"#utility.yul\":17123:17124   */\n      dup3\n        /* \"#utility.yul\":17113:17148   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":17128:17146   */\n      tag_494\n      tag_495\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":17113:17148   */\n    tag_493:\n        /* \"#utility.yul\":17170:17171   */\n      dup3\n        /* \"#utility.yul\":17167:17168   */\n      dup3\n        /* \"#utility.yul\":17163:17172   */\n      div\n        /* \"#utility.yul\":17158:17172   */\n      swap1\n      pop\n        /* \"#utility.yul\":16993:17178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17184:17532   */\n    tag_251:\n        /* \"#utility.yul\":17224:17231   */\n      0x00\n        /* \"#utility.yul\":17247:17267   */\n      tag_497\n        /* \"#utility.yul\":17265:17266   */\n      dup3\n        /* \"#utility.yul\":17247:17267   */\n      tag_434\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":17242:17267   */\n      swap2\n      pop\n        /* \"#utility.yul\":17281:17301   */\n      tag_498\n        /* \"#utility.yul\":17299:17300   */\n      dup4\n        /* \"#utility.yul\":17281:17301   */\n      tag_434\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":17276:17301   */\n      swap3\n      pop\n        /* \"#utility.yul\":17469:17470   */\n      dup2\n        /* \"#utility.yul\":17401:17467   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17397:17471   */\n      div\n        /* \"#utility.yul\":17394:17395   */\n      dup4\n        /* \"#utility.yul\":17391:17472   */\n      gt\n        /* \"#utility.yul\":17386:17387   */\n      dup3\n        /* \"#utility.yul\":17379:17388   */\n      iszero\n        /* \"#utility.yul\":17372:17389   */\n      iszero\n        /* \"#utility.yul\":17368:17473   */\n      and\n        /* \"#utility.yul\":17365:17496   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":17476:17494   */\n      tag_500\n      tag_489\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":17365:17496   */\n    tag_499:\n        /* \"#utility.yul\":17524:17525   */\n      dup3\n        /* \"#utility.yul\":17521:17522   */\n      dup3\n        /* \"#utility.yul\":17517:17526   */\n      mul\n        /* \"#utility.yul\":17506:17526   */\n      swap1\n      pop\n        /* \"#utility.yul\":17184:17532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17538:17729   */\n    tag_158:\n        /* \"#utility.yul\":17578:17582   */\n      0x00\n        /* \"#utility.yul\":17598:17618   */\n      tag_502\n        /* \"#utility.yul\":17616:17617   */\n      dup3\n        /* \"#utility.yul\":17598:17618   */\n      tag_434\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":17593:17618   */\n      swap2\n      pop\n        /* \"#utility.yul\":17632:17652   */\n      tag_503\n        /* \"#utility.yul\":17650:17651   */\n      dup4\n        /* \"#utility.yul\":17632:17652   */\n      tag_434\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":17627:17652   */\n      swap3\n      pop\n        /* \"#utility.yul\":17671:17672   */\n      dup3\n        /* \"#utility.yul\":17668:17669   */\n      dup3\n        /* \"#utility.yul\":17665:17673   */\n      lt\n        /* \"#utility.yul\":17662:17696   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":17676:17694   */\n      tag_505\n      tag_489\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":17662:17696   */\n    tag_504:\n        /* \"#utility.yul\":17721:17722   */\n      dup3\n        /* \"#utility.yul\":17718:17719   */\n      dup3\n        /* \"#utility.yul\":17714:17723   */\n      sub\n        /* \"#utility.yul\":17706:17723   */\n      swap1\n      pop\n        /* \"#utility.yul\":17538:17729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17735:17831   */\n    tag_344:\n        /* \"#utility.yul\":17772:17779   */\n      0x00\n        /* \"#utility.yul\":17801:17825   */\n      tag_507\n        /* \"#utility.yul\":17819:17824   */\n      dup3\n        /* \"#utility.yul\":17801:17825   */\n      tag_508\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":17790:17825   */\n      swap1\n      pop\n        /* \"#utility.yul\":17735:17831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17837:17927   */\n    tag_509:\n        /* \"#utility.yul\":17871:17878   */\n      0x00\n        /* \"#utility.yul\":17914:17919   */\n      dup2\n        /* \"#utility.yul\":17907:17920   */\n      iszero\n        /* \"#utility.yul\":17900:17921   */\n      iszero\n        /* \"#utility.yul\":17889:17921   */\n      swap1\n      pop\n        /* \"#utility.yul\":17837:17927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17933:18059   */\n    tag_508:\n        /* \"#utility.yul\":17970:17977   */\n      0x00\n        /* \"#utility.yul\":18010:18052   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18003:18008   */\n      dup3\n        /* \"#utility.yul\":17999:18053   */\n      and\n        /* \"#utility.yul\":17988:18053   */\n      swap1\n      pop\n        /* \"#utility.yul\":17933:18059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18065:18142   */\n    tag_434:\n        /* \"#utility.yul\":18102:18109   */\n      0x00\n        /* \"#utility.yul\":18131:18136   */\n      dup2\n        /* \"#utility.yul\":18120:18136   */\n      swap1\n      pop\n        /* \"#utility.yul\":18065:18142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18148:18288   */\n    tag_356:\n        /* \"#utility.yul\":18212:18221   */\n      0x00\n        /* \"#utility.yul\":18245:18282   */\n      tag_514\n        /* \"#utility.yul\":18276:18281   */\n      dup3\n        /* \"#utility.yul\":18245:18282   */\n      tag_515\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":18232:18282   */\n      swap1\n      pop\n        /* \"#utility.yul\":18148:18288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18294:18420   */\n    tag_515:\n        /* \"#utility.yul\":18344:18353   */\n      0x00\n        /* \"#utility.yul\":18377:18414   */\n      tag_517\n        /* \"#utility.yul\":18408:18413   */\n      dup3\n        /* \"#utility.yul\":18377:18414   */\n      tag_518\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":18364:18414   */\n      swap1\n      pop\n        /* \"#utility.yul\":18294:18420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18426:18539   */\n    tag_518:\n        /* \"#utility.yul\":18476:18485   */\n      0x00\n        /* \"#utility.yul\":18509:18533   */\n      tag_520\n        /* \"#utility.yul\":18527:18532   */\n      dup3\n        /* \"#utility.yul\":18509:18533   */\n      tag_508\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":18496:18533   */\n      swap1\n      pop\n        /* \"#utility.yul\":18426:18539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18545:18852   */\n    tag_352:\n        /* \"#utility.yul\":18613:18614   */\n      0x00\n        /* \"#utility.yul\":18623:18736   */\n    tag_522:\n        /* \"#utility.yul\":18637:18643   */\n      dup4\n        /* \"#utility.yul\":18634:18635   */\n      dup2\n        /* \"#utility.yul\":18631:18644   */\n      lt\n        /* \"#utility.yul\":18623:18736   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":18722:18723   */\n      dup1\n        /* \"#utility.yul\":18717:18720   */\n      dup3\n        /* \"#utility.yul\":18713:18724   */\n      add\n        /* \"#utility.yul\":18707:18725   */\n      mload\n        /* \"#utility.yul\":18703:18704   */\n      dup2\n        /* \"#utility.yul\":18698:18701   */\n      dup5\n        /* \"#utility.yul\":18694:18705   */\n      add\n        /* \"#utility.yul\":18687:18726   */\n      mstore\n        /* \"#utility.yul\":18659:18661   */\n      0x20\n        /* \"#utility.yul\":18656:18657   */\n      dup2\n        /* \"#utility.yul\":18652:18662   */\n      add\n        /* \"#utility.yul\":18647:18662   */\n      swap1\n      pop\n        /* \"#utility.yul\":18623:18736   */\n      jump(tag_522)\n    tag_524:\n        /* \"#utility.yul\":18754:18760   */\n      dup4\n        /* \"#utility.yul\":18751:18752   */\n      dup2\n        /* \"#utility.yul\":18748:18761   */\n      gt\n        /* \"#utility.yul\":18745:18846   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":18834:18835   */\n      0x00\n        /* \"#utility.yul\":18825:18831   */\n      dup5\n        /* \"#utility.yul\":18820:18823   */\n      dup5\n        /* \"#utility.yul\":18816:18832   */\n      add\n        /* \"#utility.yul\":18809:18836   */\n      mstore\n        /* \"#utility.yul\":18745:18846   */\n    tag_525:\n        /* \"#utility.yul\":18594:18852   */\n      pop\n        /* \"#utility.yul\":18545:18852   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18858:19034   */\n    tag_101:\n        /* \"#utility.yul\":18890:18891   */\n      0x00\n        /* \"#utility.yul\":18907:18927   */\n      tag_527\n        /* \"#utility.yul\":18925:18926   */\n      dup3\n        /* \"#utility.yul\":18907:18927   */\n      tag_434\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":18902:18927   */\n      swap2\n      pop\n        /* \"#utility.yul\":18941:18961   */\n      tag_528\n        /* \"#utility.yul\":18959:18960   */\n      dup4\n        /* \"#utility.yul\":18941:18961   */\n      tag_434\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":18936:18961   */\n      swap3\n      pop\n        /* \"#utility.yul\":18980:18981   */\n      dup3\n        /* \"#utility.yul\":18970:19005   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":18985:19003   */\n      tag_530\n      tag_495\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18970:19005   */\n    tag_529:\n        /* \"#utility.yul\":19026:19027   */\n      dup3\n        /* \"#utility.yul\":19023:19024   */\n      dup3\n        /* \"#utility.yul\":19019:19028   */\n      mod\n        /* \"#utility.yul\":19014:19028   */\n      swap1\n      pop\n        /* \"#utility.yul\":18858:19034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19040:19220   */\n    tag_489:\n        /* \"#utility.yul\":19088:19165   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19085:19086   */\n      0x00\n        /* \"#utility.yul\":19078:19166   */\n      mstore\n        /* \"#utility.yul\":19185:19189   */\n      0x11\n        /* \"#utility.yul\":19182:19183   */\n      0x04\n        /* \"#utility.yul\":19175:19190   */\n      mstore\n        /* \"#utility.yul\":19209:19213   */\n      0x24\n        /* \"#utility.yul\":19206:19207   */\n      0x00\n        /* \"#utility.yul\":19199:19214   */\n      revert\n        /* \"#utility.yul\":19226:19406   */\n    tag_495:\n        /* \"#utility.yul\":19274:19351   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19271:19272   */\n      0x00\n        /* \"#utility.yul\":19264:19352   */\n      mstore\n        /* \"#utility.yul\":19371:19375   */\n      0x12\n        /* \"#utility.yul\":19368:19369   */\n      0x04\n        /* \"#utility.yul\":19361:19376   */\n      mstore\n        /* \"#utility.yul\":19395:19399   */\n      0x24\n        /* \"#utility.yul\":19392:19393   */\n      0x00\n        /* \"#utility.yul\":19385:19400   */\n      revert\n        /* \"#utility.yul\":19535:19652   */\n    tag_322:\n        /* \"#utility.yul\":19644:19645   */\n      0x00\n        /* \"#utility.yul\":19641:19642   */\n      dup1\n        /* \"#utility.yul\":19634:19646   */\n      revert\n        /* \"#utility.yul\":19658:19760   */\n    tag_365:\n        /* \"#utility.yul\":19699:19705   */\n      0x00\n        /* \"#utility.yul\":19750:19752   */\n      0x1f\n        /* \"#utility.yul\":19746:19753   */\n      not\n        /* \"#utility.yul\":19741:19743   */\n      0x1f\n        /* \"#utility.yul\":19734:19739   */\n      dup4\n        /* \"#utility.yul\":19730:19744   */\n      add\n        /* \"#utility.yul\":19726:19754   */\n      and\n        /* \"#utility.yul\":19716:19754   */\n      swap1\n      pop\n        /* \"#utility.yul\":19658:19760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19766:19932   */\n    tag_370:\n        /* \"#utility.yul\":19906:19924   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":19902:19903   */\n      0x00\n        /* \"#utility.yul\":19894:19900   */\n      dup3\n        /* \"#utility.yul\":19890:19904   */\n      add\n        /* \"#utility.yul\":19883:19925   */\n      mstore\n        /* \"#utility.yul\":19766:19932   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19938:20167   */\n    tag_375:\n        /* \"#utility.yul\":20078:20112   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":20074:20075   */\n      0x00\n        /* \"#utility.yul\":20066:20072   */\n      dup3\n        /* \"#utility.yul\":20062:20076   */\n      add\n        /* \"#utility.yul\":20055:20113   */\n      mstore\n        /* \"#utility.yul\":20147:20159   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20142:20144   */\n      0x20\n        /* \"#utility.yul\":20134:20140   */\n      dup3\n        /* \"#utility.yul\":20130:20145   */\n      add\n        /* \"#utility.yul\":20123:20160   */\n      mstore\n        /* \"#utility.yul\":19938:20167   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20173:20398   */\n    tag_380:\n        /* \"#utility.yul\":20313:20347   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":20309:20310   */\n      0x00\n        /* \"#utility.yul\":20301:20307   */\n      dup3\n        /* \"#utility.yul\":20297:20311   */\n      add\n        /* \"#utility.yul\":20290:20348   */\n      mstore\n        /* \"#utility.yul\":20382:20390   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20377:20379   */\n      0x20\n        /* \"#utility.yul\":20369:20375   */\n      dup3\n        /* \"#utility.yul\":20365:20380   */\n      add\n        /* \"#utility.yul\":20358:20391   */\n      mstore\n        /* \"#utility.yul\":20173:20398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20404:20568   */\n    tag_385:\n        /* \"#utility.yul\":20544:20560   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":20540:20541   */\n      0x00\n        /* \"#utility.yul\":20532:20538   */\n      dup3\n        /* \"#utility.yul\":20528:20542   */\n      add\n        /* \"#utility.yul\":20521:20561   */\n      mstore\n        /* \"#utility.yul\":20404:20568   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20574:20799   */\n    tag_390:\n        /* \"#utility.yul\":20714:20748   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":20710:20711   */\n      0x00\n        /* \"#utility.yul\":20702:20708   */\n      dup3\n        /* \"#utility.yul\":20698:20712   */\n      add\n        /* \"#utility.yul\":20691:20749   */\n      mstore\n        /* \"#utility.yul\":20783:20791   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20778:20780   */\n      0x20\n        /* \"#utility.yul\":20770:20776   */\n      dup3\n        /* \"#utility.yul\":20766:20781   */\n      add\n        /* \"#utility.yul\":20759:20792   */\n      mstore\n        /* \"#utility.yul\":20574:20799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20805:21030   */\n    tag_395:\n        /* \"#utility.yul\":20945:20979   */\n      0x496e76616c696420416464726573732e20416464726573732063616e27742062\n        /* \"#utility.yul\":20941:20942   */\n      0x00\n        /* \"#utility.yul\":20933:20939   */\n      dup3\n        /* \"#utility.yul\":20929:20943   */\n      add\n        /* \"#utility.yul\":20922:20980   */\n      mstore\n        /* \"#utility.yul\":21014:21022   */\n      0x65207a65726f0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21009:21011   */\n      0x20\n        /* \"#utility.yul\":21001:21007   */\n      dup3\n        /* \"#utility.yul\":20997:21012   */\n      add\n        /* \"#utility.yul\":20990:21023   */\n      mstore\n        /* \"#utility.yul\":20805:21030   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21036:21217   */\n    tag_400:\n        /* \"#utility.yul\":21176:21209   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":21172:21173   */\n      0x00\n        /* \"#utility.yul\":21164:21170   */\n      dup3\n        /* \"#utility.yul\":21160:21174   */\n      add\n        /* \"#utility.yul\":21153:21210   */\n      mstore\n        /* \"#utility.yul\":21036:21217   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21223:21405   */\n    tag_405:\n        /* \"#utility.yul\":21363:21397   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":21359:21360   */\n      0x00\n        /* \"#utility.yul\":21351:21357   */\n      dup3\n        /* \"#utility.yul\":21347:21361   */\n      add\n        /* \"#utility.yul\":21340:21398   */\n      mstore\n        /* \"#utility.yul\":21223:21405   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21411:21572   */\n    tag_410:\n        /* \"#utility.yul\":21551:21564   */\n      0x496e76616c696420415059000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21547:21548   */\n      0x00\n        /* \"#utility.yul\":21539:21545   */\n      dup3\n        /* \"#utility.yul\":21535:21549   */\n      add\n        /* \"#utility.yul\":21528:21565   */\n      mstore\n        /* \"#utility.yul\":21411:21572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21578:21757   */\n    tag_415:\n        /* \"#utility.yul\":21718:21749   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":21714:21715   */\n      0x00\n        /* \"#utility.yul\":21706:21712   */\n      dup3\n        /* \"#utility.yul\":21702:21716   */\n      add\n        /* \"#utility.yul\":21695:21750   */\n      mstore\n        /* \"#utility.yul\":21578:21757   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21763:21939   */\n    tag_420:\n        /* \"#utility.yul\":21903:21931   */\n      0x496e76616c696420556e7374616b696e67204665652052617465000000000000\n        /* \"#utility.yul\":21899:21900   */\n      0x00\n        /* \"#utility.yul\":21891:21897   */\n      dup3\n        /* \"#utility.yul\":21887:21901   */\n      add\n        /* \"#utility.yul\":21880:21932   */\n      mstore\n        /* \"#utility.yul\":21763:21939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21945:22118   */\n    tag_425:\n        /* \"#utility.yul\":22085:22110   */\n      0x496e76616c6964204c6f636b7570204475726174696f6e000000000000000000\n        /* \"#utility.yul\":22081:22082   */\n      0x00\n        /* \"#utility.yul\":22073:22079   */\n      dup3\n        /* \"#utility.yul\":22069:22083   */\n      add\n        /* \"#utility.yul\":22062:22111   */\n      mstore\n        /* \"#utility.yul\":21945:22118   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22124:22287   */\n    tag_430:\n        /* \"#utility.yul\":22264:22279   */\n      0x496e73756666696369656e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":22260:22261   */\n      0x00\n        /* \"#utility.yul\":22252:22258   */\n      dup3\n        /* \"#utility.yul\":22248:22262   */\n      add\n        /* \"#utility.yul\":22241:22280   */\n      mstore\n        /* \"#utility.yul\":22124:22287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22293:22415   */\n    tag_307:\n        /* \"#utility.yul\":22366:22390   */\n      tag_551\n        /* \"#utility.yul\":22384:22389   */\n      dup2\n        /* \"#utility.yul\":22366:22390   */\n      tag_344\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":22359:22364   */\n      dup2\n        /* \"#utility.yul\":22356:22391   */\n      eq\n        /* \"#utility.yul\":22346:22409   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":22405:22406   */\n      0x00\n        /* \"#utility.yul\":22402:22403   */\n      dup1\n        /* \"#utility.yul\":22395:22407   */\n      revert\n        /* \"#utility.yul\":22346:22409   */\n    tag_552:\n        /* \"#utility.yul\":22293:22415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22421:22537   */\n    tag_311:\n        /* \"#utility.yul\":22491:22512   */\n      tag_554\n        /* \"#utility.yul\":22506:22511   */\n      dup2\n        /* \"#utility.yul\":22491:22512   */\n      tag_509\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":22484:22489   */\n      dup2\n        /* \"#utility.yul\":22481:22513   */\n      eq\n        /* \"#utility.yul\":22471:22531   */\n      tag_555\n      jumpi\n        /* \"#utility.yul\":22527:22528   */\n      0x00\n        /* \"#utility.yul\":22524:22525   */\n      dup1\n        /* \"#utility.yul\":22517:22529   */\n      revert\n        /* \"#utility.yul\":22471:22531   */\n    tag_555:\n        /* \"#utility.yul\":22421:22537   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22543:22665   */\n    tag_315:\n        /* \"#utility.yul\":22616:22640   */\n      tag_557\n        /* \"#utility.yul\":22634:22639   */\n      dup2\n        /* \"#utility.yul\":22616:22640   */\n      tag_434\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":22609:22614   */\n      dup2\n        /* \"#utility.yul\":22606:22641   */\n      eq\n        /* \"#utility.yul\":22596:22659   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":22655:22656   */\n      0x00\n        /* \"#utility.yul\":22652:22653   */\n      dup1\n        /* \"#utility.yul\":22645:22657   */\n      revert\n        /* \"#utility.yul\":22596:22659   */\n    tag_558:\n        /* \"#utility.yul\":22543:22665   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e6efc59e49dc7e980978f294c922af4c8d26fb936a7cecb155c3fa1d54af0bf964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@Init_1254": {
									"entryPoint": 445,
									"id": 1254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1234": {
									"entryPoint": null,
									"id": 1234,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 241,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 249,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "7:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:8"
															},
															"nodeType": "YulIf",
															"src": "260:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:8",
														"type": ""
													}
												],
												"src": "156:507:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:8",
														"type": ""
													}
												],
												"src": "669:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:8",
														"type": ""
													}
												],
												"src": "750:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:8",
														"type": ""
													}
												],
												"src": "852:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:8"
															},
															"nodeType": "YulIf",
															"src": "1283:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:8",
														"type": ""
													}
												],
												"src": "1230:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002881380380620028818339818101604052810190620000379190620001f9565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b62000067620001bd60201b60201c565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000293565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b607d6003819055506105dc60018190555060c860048190555062093a80600281905550565b600081519050620001f38162000279565b92915050565b6000806040838503121562000213576200021262000274565b5b60006200022385828601620001e2565b92505060206200023685828601620001e2565b9150509250929050565b60006200024d8262000254565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620002848162000240565b81146200029057600080fd5b50565b6125de80620002a36000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637b0472f01161009757806391e07e7a1161006657806391e07e7a1461023b578063f2fde38b14610257578063f7b2a7be14610273578063fc0c546a1461029157610100565b80637b0472f0146101c7578063817b1cd2146101e35780638a9d3839146102015780638da5cb5b1461021d57610100565b80635d2ec65d116100d35780635d2ec65d146101655780636413996c14610183578063692642e7146101a1578063715018a6146101bd57610100565b80632e1a7d4d14610105578063373d6132146101215780634641257d1461013f57806350f19c8714610149575b600080fd5b61011f600480360381019061011a9190611a97565b6102af565b005b610129610666565b6040516101369190611ffe565b60405180910390f35b6101476106b0565b005b610163600480360381019061015e9190611a97565b6109e1565b005b61016d610ae1565b60405161017a9190611ffe565b60405180910390f35b61018b610b33565b6040516101989190611ffe565b60405180910390f35b6101bb60048036038101906101b69190611a97565b610bdb565b005b6101c5610cdb565b005b6101e160048036038101906101dc9190611af1565b610d63565b005b6101eb610fb6565b6040516101f89190611ffe565b60405180910390f35b61021b60048036038101906102169190611a3d565b610fbc565b005b610225611122565b6040516102329190611da6565b60405180910390f35b61025560048036038101906102509190611a97565b61114b565b005b610271600480360381019061026c9190611a3d565b61124b565b005b61027b611343565b6040516102889190611ffe565b60405180910390f35b61029961138d565b6040516102a69190611e21565b60405180910390f35b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008211610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032c90611f1e565b60405180910390fd5b806001015482111561037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037390611ebe565b60405180910390fd5b6103846113b3565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103e19190611da6565b60206040518083038186803b1580156103f957600080fd5b505afa15801561040d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104319190611ac4565b83106104e757600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104929190611da6565b60206040518083038186803b1580156104aa57600080fd5b505afa1580156104be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e29190611ac4565b6104e9565b825b905060008060025461051d6201518061050f87600301544261151a90919063ffffffff16565b61153090919063ffffffff16565b6105279190612211565b14610533576001610536565b60005b60ff16905061059e61058f61271061058160015461057387610565888b6002015461154690919063ffffffff16565b61154690919063ffffffff16565b61154690919063ffffffff16565b61153090919063ffffffff16565b8361151a90919063ffffffff16565b91506105b58260075461151a90919063ffffffff16565b6007819055506105d282846001015461151a90919063ffffffff16565b83600101819055506106273383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661155c9092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643383604051610658929190611df8565b60405180910390a150505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6106b86113b3565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061074061072d61271061071f600454866000015461154690919063ffffffff16565b61153090919063ffffffff16565b836000015461151a90919063ffffffff16565b905060008111610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c90611e5e565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108029190611da6565b60206040518083038186803b15801561081a57600080fd5b505afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190611ac4565b81111561092957600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108d69190611da6565b60206040518083038186803b1580156108ee57600080fd5b505afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109269190611ac4565b90505b61099a600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166115e2909392919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba33826040516109d5929190611df8565b60405180910390a15050565b6109e961166b565b73ffffffffffffffffffffffffffffffffffffffff16610a07611122565b73ffffffffffffffffffffffffffffffffffffffff1614610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490611f3e565b60405180910390fd5b60008111610aa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9790611f5e565b60405180910390fd5b806003819055507fb8f51888a0746f534a064d0d08f74852a939d6cd181760e1cedc7a8396d9e22f81604051610ad69190611ffe565b60405180910390a150565b6000610aeb6113b3565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000610bd6610b506201518060025461151a90919063ffffffff16565b610ba6600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442610ba1919061212c565b611673565b610bb09190612211565b610bc86201518060025461151a90919063ffffffff16565b61151a90919063ffffffff16565b905090565b610be361166b565b73ffffffffffffffffffffffffffffffffffffffff16610c01611122565b73ffffffffffffffffffffffffffffffffffffffff1614610c57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4e90611f3e565b60405180910390fd5b60008111610c9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9190611fbe565b60405180910390fd5b806002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610cd09190611ffe565b60405180910390a150565b610ce361166b565b73ffffffffffffffffffffffffffffffffffffffff16610d01611122565b73ffffffffffffffffffffffffffffffffffffffff1614610d57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4e90611f3e565b60405180910390fd5b610d616000611692565b565b60008211610da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9d90611f1e565b60405180910390fd5b81600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610e029190611da6565b60206040518083038186803b158015610e1a57600080fd5b505afa158015610e2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e529190611ac4565b11610e92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8990611fde565b60405180910390fd5b610e9a6113b3565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050610f2c333085600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166115e2909392919063ffffffff16565b610f4383826001015461175690919063ffffffff16565b8160010181905550428160030181905550818160020181905550610f728360075461175690919063ffffffff16565b6007819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3384604051610fa9929190611df8565b60405180910390a1505050565b60075481565b610fc461166b565b73ffffffffffffffffffffffffffffffffffffffff16610fe2611122565b73ffffffffffffffffffffffffffffffffffffffff1614611038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102f90611f3e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16116110a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109e90611efe565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a87816040516111179190611da6565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61115361166b565b73ffffffffffffffffffffffffffffffffffffffff16611171611122565b73ffffffffffffffffffffffffffffffffffffffff16146111c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111be90611f3e565b60405180910390fd5b6000811161120a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120190611f9e565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516112409190611ffe565b60405180910390a150565b61125361166b565b73ffffffffffffffffffffffffffffffffffffffff16611271611122565b73ffffffffffffffffffffffffffffffffffffffff16146112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112be90611f3e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132e90611e9e565b60405180910390fd5b61134081611692565b50565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600401544210156114085750611518565b600061142282600301544261141d919061212c565b611673565b9050600061146561271061145760035461144986886001015461154690919063ffffffff16565b61154690919063ffffffff16565b61153090919063ffffffff16565b90506001836002015414156114ec57600061148b6002548461153090919063ffffffff16565b90506114e86127106114da6114b56114a4600254611673565b60035461154690919063ffffffff16565b6114cc85896001015461154690919063ffffffff16565b61154690919063ffffffff16565b61153090919063ffffffff16565b9150505b61150381846000015461175690919063ffffffff16565b83600001819055504283600401819055505050505b565b60008183611528919061212c565b905092915050565b6000818361153e91906120a1565b905092915050565b6000818361155491906120d2565b905092915050565b6115dd8363a9059cbb60e01b848460405160240161157b929190611df8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061176c565b505050565b611665846323b872dd60e01b85858560405160240161160393929190611dc1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061176c565b50505050565b600033905090565b600061168b620151808361153090919063ffffffff16565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183611764919061204b565b905092915050565b60006117ce826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166118339092919063ffffffff16565b905060008151111561182e57808060200190518101906117ee9190611a6a565b61182d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182490611e7e565b60405180910390fd5b5b505050565b6060611842848460008561184b565b90509392505050565b606082471015611890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188790611ede565b60405180910390fd5b6118998561195f565b6118d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cf90611f7e565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516119019190611d8f565b60006040518083038185875af1925050503d806000811461193e576040519150601f19603f3d011682016040523d82523d6000602084013e611943565b606091505b5091509150611953828286611982565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611992578290506119e2565b6000835111156119a55782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d99190611e3c565b60405180910390fd5b9392505050565b6000813590506119f881612563565b92915050565b600081519050611a0d8161257a565b92915050565b600081359050611a2281612591565b92915050565b600081519050611a3781612591565b92915050565b600060208284031215611a5357611a526122a0565b5b6000611a61848285016119e9565b91505092915050565b600060208284031215611a8057611a7f6122a0565b5b6000611a8e848285016119fe565b91505092915050565b600060208284031215611aad57611aac6122a0565b5b6000611abb84828501611a13565b91505092915050565b600060208284031215611ada57611ad96122a0565b5b6000611ae884828501611a28565b91505092915050565b60008060408385031215611b0857611b076122a0565b5b6000611b1685828601611a13565b9250506020611b2785828601611a13565b9150509250929050565b611b3a81612160565b82525050565b6000611b4b82612019565b611b55818561202f565b9350611b658185602086016121de565b80840191505092915050565b611b7a816121a8565b82525050565b6000611b8b82612024565b611b95818561203a565b9350611ba58185602086016121de565b611bae816122a5565b840191505092915050565b6000611bc660108361203a565b9150611bd1826122b6565b602082019050919050565b6000611be9602a8361203a565b9150611bf4826122df565b604082019050919050565b6000611c0c60268361203a565b9150611c178261232e565b604082019050919050565b6000611c2f600e8361203a565b9150611c3a8261237d565b602082019050919050565b6000611c5260268361203a565b9150611c5d826123a6565b604082019050919050565b6000611c7560268361203a565b9150611c80826123f5565b604082019050919050565b6000611c98601f8361203a565b9150611ca382612444565b602082019050919050565b6000611cbb60208361203a565b9150611cc68261246d565b602082019050919050565b6000611cde600b8361203a565b9150611ce982612496565b602082019050919050565b6000611d01601d8361203a565b9150611d0c826124bf565b602082019050919050565b6000611d24601a8361203a565b9150611d2f826124e8565b602082019050919050565b6000611d4760178361203a565b9150611d5282612511565b602082019050919050565b6000611d6a600d8361203a565b9150611d758261253a565b602082019050919050565b611d898161219e565b82525050565b6000611d9b8284611b40565b915081905092915050565b6000602082019050611dbb6000830184611b31565b92915050565b6000606082019050611dd66000830186611b31565b611de36020830185611b31565b611df06040830184611d80565b949350505050565b6000604082019050611e0d6000830185611b31565b611e1a6020830184611d80565b9392505050565b6000602082019050611e366000830184611b71565b92915050565b60006020820190508181036000830152611e568184611b80565b905092915050565b60006020820190508181036000830152611e7781611bb9565b9050919050565b60006020820190508181036000830152611e9781611bdc565b9050919050565b60006020820190508181036000830152611eb781611bff565b9050919050565b60006020820190508181036000830152611ed781611c22565b9050919050565b60006020820190508181036000830152611ef781611c45565b9050919050565b60006020820190508181036000830152611f1781611c68565b9050919050565b60006020820190508181036000830152611f3781611c8b565b9050919050565b60006020820190508181036000830152611f5781611cae565b9050919050565b60006020820190508181036000830152611f7781611cd1565b9050919050565b60006020820190508181036000830152611f9781611cf4565b9050919050565b60006020820190508181036000830152611fb781611d17565b9050919050565b60006020820190508181036000830152611fd781611d3a565b9050919050565b60006020820190508181036000830152611ff781611d5d565b9050919050565b60006020820190506120136000830184611d80565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006120568261219e565b91506120618361219e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561209657612095612242565b5b828201905092915050565b60006120ac8261219e565b91506120b78361219e565b9250826120c7576120c6612271565b5b828204905092915050565b60006120dd8261219e565b91506120e88361219e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561212157612120612242565b5b828202905092915050565b60006121378261219e565b91506121428361219e565b92508282101561215557612154612242565b5b828203905092915050565b600061216b8261217e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006121b3826121ba565b9050919050565b60006121c5826121cc565b9050919050565b60006121d78261217e565b9050919050565b60005b838110156121fc5780820151818401526020810190506121e1565b8381111561220b576000848401525b50505050565b600061221c8261219e565b91506122278361219e565b92508261223757612236612271565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420416464726573732e20416464726573732063616e2774206260008201527f65207a65726f0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c696420415059000000000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b61256c81612160565b811461257757600080fd5b50565b61258381612172565b811461258e57600080fd5b50565b61259a8161219e565b81146125a557600080fd5b5056fea2646970667358221220e6efc59e49dc7e980978f294c922af4c8d26fb936a7cecb155c3fa1d54af0bf964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2881 CODESIZE SUB DUP1 PUSH3 0x2881 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F9 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xF1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH3 0x1BD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x293 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7D PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5DC PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0xC8 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F3 DUP2 PUSH3 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x213 JUMPI PUSH3 0x212 PUSH3 0x274 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x223 DUP6 DUP3 DUP7 ADD PUSH3 0x1E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x236 DUP6 DUP3 DUP7 ADD PUSH3 0x1E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24D DUP3 PUSH3 0x254 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x284 DUP2 PUSH3 0x240 JUMP JUMPDEST DUP2 EQ PUSH3 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x25DE DUP1 PUSH3 0x2A3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0472F0 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x91E07E7A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8A9D3839 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x5D2EC65D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x6413996C EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BD JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x50F19C87 EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0xCDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0xD63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0xFBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x114B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x124B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27B PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x335 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32C SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x373 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x384 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST DUP4 LT PUSH2 0x4E7 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD PUSH2 0x51D PUSH3 0x15180 PUSH2 0x50F DUP8 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x2211 JUMP JUMPDEST EQ PUSH2 0x533 JUMPI PUSH1 0x1 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x59E PUSH2 0x58F PUSH2 0x2710 PUSH2 0x581 PUSH1 0x1 SLOAD PUSH2 0x573 DUP8 PUSH2 0x565 DUP9 DUP12 PUSH1 0x2 ADD SLOAD PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x5B5 DUP3 PUSH1 0x7 SLOAD PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x5D2 DUP3 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x627 CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x658 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B8 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x740 PUSH2 0x72D PUSH2 0x2710 PUSH2 0x71F PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x785 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77C SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x929 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x902 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x99A PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15E2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x9D5 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x9E9 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA07 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA97 SWAP1 PUSH2 0x1F5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xB8F51888A0746F534A064D0D08F74852A939D6CD181760E1CEDC7A8396D9E22F DUP2 PUSH1 0x40 MLOAD PUSH2 0xAD6 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD6 PUSH2 0xB50 PUSH3 0x15180 PUSH1 0x2 SLOAD PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBA6 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x1673 JUMP JUMPDEST PUSH2 0xBB0 SWAP2 SWAP1 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0xBC8 PUSH3 0x15180 PUSH1 0x2 SLOAD PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBE3 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC01 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4E SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC91 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xCD0 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xCE3 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD01 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4E SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD61 PUSH1 0x0 PUSH2 0x1692 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xDA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9D SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE52 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST GT PUSH2 0xE92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9A PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0xF2C CALLER ADDRESS DUP6 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15E2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF43 DUP4 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1756 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF72 DUP4 PUSH1 0x7 SLOAD PUSH2 0x1756 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP5 PUSH1 0x40 MLOAD PUSH2 0xFA9 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC4 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE2 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x10A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109E SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xEDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1153 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1171 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BE SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x120A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1201 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1240 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1253 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1271 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BE SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1337 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132E SWAP1 PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1340 DUP2 PUSH2 0x1692 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1408 JUMPI POP PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1422 DUP3 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x141D SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x1673 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1465 PUSH2 0x2710 PUSH2 0x1457 PUSH1 0x3 SLOAD PUSH2 0x1449 DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x14EC JUMPI PUSH1 0x0 PUSH2 0x148B PUSH1 0x2 SLOAD DUP5 PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x14E8 PUSH2 0x2710 PUSH2 0x14DA PUSH2 0x14B5 PUSH2 0x14A4 PUSH1 0x2 SLOAD PUSH2 0x1673 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14CC DUP6 DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH2 0x1503 DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1756 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP4 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1528 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x153E SWAP2 SWAP1 PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1554 SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x157B SWAP3 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x176C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1665 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1603 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x176C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168B PUSH3 0x15180 DUP4 PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1764 SWAP2 SWAP1 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1833 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x182E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x17EE SWAP2 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1824 SWAP1 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1842 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x184B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1890 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1887 SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1899 DUP6 PUSH2 0x195F JUMP JUMPDEST PUSH2 0x18D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CF SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1901 SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x193E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1953 DUP3 DUP3 DUP7 PUSH2 0x1982 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1992 JUMPI DUP3 SWAP1 POP PUSH2 0x19E2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x19A5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D9 SWAP2 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F8 DUP2 PUSH2 0x2563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A0D DUP2 PUSH2 0x257A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A22 DUP2 PUSH2 0x2591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A37 DUP2 PUSH2 0x2591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A53 JUMPI PUSH2 0x1A52 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A61 DUP5 DUP3 DUP6 ADD PUSH2 0x19E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A80 JUMPI PUSH2 0x1A7F PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A8E DUP5 DUP3 DUP6 ADD PUSH2 0x19FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AAD JUMPI PUSH2 0x1AAC PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ABB DUP5 DUP3 DUP6 ADD PUSH2 0x1A13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1AD9 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1A28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B08 JUMPI PUSH2 0x1B07 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B16 DUP6 DUP3 DUP7 ADD PUSH2 0x1A13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B27 DUP6 DUP3 DUP7 ADD PUSH2 0x1A13 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B3A DUP2 PUSH2 0x2160 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4B DUP3 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x1B55 DUP2 DUP6 PUSH2 0x202F JUMP JUMPDEST SWAP4 POP PUSH2 0x1B65 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21DE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7A DUP2 PUSH2 0x21A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B8B DUP3 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x1B95 DUP2 DUP6 PUSH2 0x203A JUMP JUMPDEST SWAP4 POP PUSH2 0x1BA5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21DE JUMP JUMPDEST PUSH2 0x1BAE DUP2 PUSH2 0x22A5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC6 PUSH1 0x10 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD1 DUP3 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE9 PUSH1 0x2A DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF4 DUP3 PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0C PUSH1 0x26 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C17 DUP3 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2F PUSH1 0xE DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3A DUP3 PUSH2 0x237D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C52 PUSH1 0x26 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5D DUP3 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C75 PUSH1 0x26 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C80 DUP3 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C98 PUSH1 0x1F DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA3 DUP3 PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CBB PUSH1 0x20 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC6 DUP3 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDE PUSH1 0xB DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE9 DUP3 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D01 PUSH1 0x1D DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D0C DUP3 PUSH2 0x24BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D24 PUSH1 0x1A DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2F DUP3 PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D47 PUSH1 0x17 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D52 DUP3 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6A PUSH1 0xD DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D75 DUP3 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D89 DUP2 PUSH2 0x219E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9B DUP3 DUP5 PUSH2 0x1B40 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DD6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x1DE3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x1DF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D80 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E0D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x1E1A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E56 DUP2 DUP5 PUSH2 0x1B80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E77 DUP2 PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E97 DUP2 PUSH2 0x1BDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB7 DUP2 PUSH2 0x1BFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED7 DUP2 PUSH2 0x1C22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF7 DUP2 PUSH2 0x1C45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F17 DUP2 PUSH2 0x1C68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F37 DUP2 PUSH2 0x1C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F57 DUP2 PUSH2 0x1CAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F77 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F97 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB7 DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD7 DUP2 PUSH2 0x1D3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF7 DUP2 PUSH2 0x1D5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2013 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2056 DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x2061 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2096 JUMPI PUSH2 0x2095 PUSH2 0x2242 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AC DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x20B7 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20C7 JUMPI PUSH2 0x20C6 PUSH2 0x2271 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DD DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x20E8 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2121 JUMPI PUSH2 0x2120 PUSH2 0x2242 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x2142 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x2242 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x216B DUP3 PUSH2 0x217E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B3 DUP3 PUSH2 0x21BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C5 DUP3 PUSH2 0x21CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D7 DUP3 PUSH2 0x217E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21FC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21E1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x220B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221C DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x2227 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2237 JUMPI PUSH2 0x2236 PUSH2 0x2271 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420416464726573732E20416464726573732063616E27742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420415059000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x256C DUP2 PUSH2 0x2160 JUMP JUMPDEST DUP2 EQ PUSH2 0x2577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2583 DUP2 PUSH2 0x2172 JUMP JUMPDEST DUP2 EQ PUSH2 0x258E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x259A DUP2 PUSH2 0x219E JUMP JUMPDEST DUP2 EQ PUSH2 0x25A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xEF 0xC5 SWAP15 0x49 0xDC PUSH31 0x980978F294C922AF4C8D26FB936A7CECB155C3FA1D54AF0BF964736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "260:6576:7:-:0;;;1520:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1585:6:7;:4;;;:6;;:::i;:::-;1618:14;1602:13;;:30;;;;;;;;;;;;;;;;;;1658:6;1643:5;;:22;;;;;;;;;;;;;;;;;;1520:153;;260:6576;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1681:157:7:-;1729:3;1717:9;:15;;;;1763:4;1743:17;:24;;;;1795:3;1778:14;:20;;;;1824:6;1809:12;:21;;;;1681:157::o;7:143:8:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;260:6576:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1129": {
									"entryPoint": 5996,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 5739,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 5778,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_675": {
									"entryPoint": 5974,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calDaysFromTimestamp_1267": {
									"entryPoint": 5747,
									"id": 1267,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_720": {
									"entryPoint": 5424,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_341": {
									"entryPoint": 6219,
									"id": 341,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_271": {
									"entryPoint": 6195,
									"id": 271,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@harvest_1752": {
									"entryPoint": 1712,
									"id": 1752,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_200": {
									"entryPoint": 6495,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_705": {
									"entryPoint": 5446,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 4386,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainedToNextEvent_1805": {
									"entryPoint": 2867,
									"id": 1805,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 3291,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_1776": {
									"entryPoint": 4931,
									"id": 1776,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardToHarvest_1678": {
									"entryPoint": 2785,
									"id": 1678,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_972": {
									"entryPoint": 5602,
									"id": 972,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_946": {
									"entryPoint": 5468,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setBountyWallet_1663": {
									"entryPoint": 4028,
									"id": 1663,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setEventPeriod_1614": {
									"entryPoint": 3035,
									"id": 1614,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFixedAPY_1591": {
									"entryPoint": 2529,
									"id": 1591,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnstakingFeeRate_1637": {
									"entryPoint": 4427,
									"id": 1637,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1445": {
									"entryPoint": 3427,
									"id": 1445,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakedAmount_1764": {
									"entryPoint": 1638,
									"id": 1764,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_690": {
									"entryPoint": 5402,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1179": {
									"entryPoint": 5005,
									"id": 1179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1176": {
									"entryPoint": 4022,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 4683,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateReward_1360": {
									"entryPoint": 5043,
									"id": 1360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_476": {
									"entryPoint": 6530,
									"id": 476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1568": {
									"entryPoint": 687,
									"id": 1568,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack": {
									"entryPoint": 7025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7617,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7672,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed": {
									"entryPoint": 7713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$912_to_t_address": {
									"entryPoint": 8616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 8670,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"mod_t_uint256": {
									"entryPoint": 8721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8770,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8817,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 8886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 8927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 9085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 9126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975": {
									"entryPoint": 9205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 9284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 9325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1": {
									"entryPoint": 9366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 9407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3": {
									"entryPoint": 9448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561": {
									"entryPoint": 9489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811": {
									"entryPoint": 9530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22668:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "7:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:8",
														"type": ""
													}
												],
												"src": "152:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:8",
														"type": ""
													}
												],
												"src": "295:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:8",
														"type": ""
													}
												],
												"src": "440:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:8"
															},
															"nodeType": "YulIf",
															"src": "665:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:8",
														"type": ""
													}
												],
												"src": "589:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:8"
															},
															"nodeType": "YulIf",
															"src": "1008:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:8",
														"type": ""
													}
												],
												"src": "924:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:8"
															},
															"nodeType": "YulIf",
															"src": "1351:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:8",
														"type": ""
													}
												],
												"src": "1275:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:8"
															},
															"nodeType": "YulIf",
															"src": "1697:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:8",
														"type": ""
													}
												],
												"src": "1610:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2050:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2096:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2098:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2098:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2098:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2071:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2067:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2067:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2063:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:32:8"
															},
															"nodeType": "YulIf",
															"src": "2060:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2189:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2204:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2208:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2233:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2268:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2279:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2264:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2264:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2288:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2243:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2233:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2316:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2331:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2335:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2361:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2396:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2407:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2371:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2361:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2012:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2023:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2035:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2043:6:8",
														"type": ""
													}
												],
												"src": "1967:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2512:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2529:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2552:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2534:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2522:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2500:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2507:3:8",
														"type": ""
													}
												],
												"src": "2447:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2679:265:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2689:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2735:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2703:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2693:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2750:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2838:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2757:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2750:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2880:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2887:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2894:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2854:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2854:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2915:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2926:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2931:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2915:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2660:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2667:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2675:3:8",
														"type": ""
													}
												],
												"src": "2571:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3046:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$912_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3051:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3051:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3017:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3024:3:8",
														"type": ""
													}
												],
												"src": "2950:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3207:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3217:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3264:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3231:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3221:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3279:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3345:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3350:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3286:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3279:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3392:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3388:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3388:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3406:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3411:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3366:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3366:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3427:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3438:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3465:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3443:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3434:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3427:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3188:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3195:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3203:3:8",
														"type": ""
													}
												],
												"src": "3115:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3631:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3641:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3707:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3712:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3648:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3641:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3813:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nodeType": "YulIdentifier",
																	"src": "3724:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3724:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3837:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3842:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3826:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3619:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3627:3:8",
														"type": ""
													}
												],
												"src": "3485:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4079:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4084:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4020:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4013:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4185:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "4096:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4096:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4198:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4209:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4205:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3991:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3999:3:8",
														"type": ""
													}
												],
												"src": "3857:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4375:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4385:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4451:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4456:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4392:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4385:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4557:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4468:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4468:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4468:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4570:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4586:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4577:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4363:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4371:3:8",
														"type": ""
													}
												],
												"src": "4229:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4747:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4757:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4823:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4828:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4764:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4757:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4929:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "4840:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4840:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4942:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4953:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4949:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4735:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4743:3:8",
														"type": ""
													}
												],
												"src": "4601:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5119:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5129:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5195:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5136:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5129:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5301:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "5212:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5314:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5330:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5314:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5107:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5115:3:8",
														"type": ""
													}
												],
												"src": "4973:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5501:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5567:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5508:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5501:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5673:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																	"nodeType": "YulIdentifier",
																	"src": "5584:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5584:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5686:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5697:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5702:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5693:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5686:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5479:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5487:3:8",
														"type": ""
													}
												],
												"src": "5345:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5863:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5873:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5939:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5880:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5873:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6045:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nodeType": "YulIdentifier",
																	"src": "5956:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5956:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6069:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6065:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6058:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5851:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5859:3:8",
														"type": ""
													}
												],
												"src": "5717:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6235:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6245:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6252:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6245:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6417:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6328:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6328:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6430:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6441:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6446:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6437:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6223:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6231:3:8",
														"type": ""
													}
												],
												"src": "6089:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6607:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6617:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6683:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6688:2:8",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6624:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																	"nodeType": "YulIdentifier",
																	"src": "6700:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6700:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6802:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6813:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6818:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6809:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6809:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6595:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6603:3:8",
														"type": ""
													}
												],
												"src": "6461:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6979:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6989:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7055:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6996:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6996:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6989:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7161:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "7072:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7072:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7174:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7185:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7181:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6967:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6975:3:8",
														"type": ""
													}
												],
												"src": "6833:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7351:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7361:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7427:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7432:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7368:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7368:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7533:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																	"nodeType": "YulIdentifier",
																	"src": "7444:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7444:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7546:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7557:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7553:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7546:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7339:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7347:3:8",
														"type": ""
													}
												],
												"src": "7205:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7723:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7733:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7799:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7740:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7740:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7905:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																	"nodeType": "YulIdentifier",
																	"src": "7816:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7816:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7816:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7918:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7925:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7918:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7711:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7719:3:8",
														"type": ""
													}
												],
												"src": "7577:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8095:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8105:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8112:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8112:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8105:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8277:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																	"nodeType": "YulIdentifier",
																	"src": "8188:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8188:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8301:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8306:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8297:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8290:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8083:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8091:3:8",
														"type": ""
													}
												],
												"src": "7949:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8386:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8403:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8426:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8408:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8408:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8396:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8396:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8396:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8374:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8381:3:8",
														"type": ""
													}
												],
												"src": "8321:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8579:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8590:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8677:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8686:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8597:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8597:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8590:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8700:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8707:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8700:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8558:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8564:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8575:3:8",
														"type": ""
													}
												],
												"src": "8445:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8820:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8830:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8842:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8853:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8838:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8838:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8830:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8910:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8923:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8934:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8919:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8919:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8866:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8866:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8792:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8804:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8815:4:8",
														"type": ""
													}
												],
												"src": "8722:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9104:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9114:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9126:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9137:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9122:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9122:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9114:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9194:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9207:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9218:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9203:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9203:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9150:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9150:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9150:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9275:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9288:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9299:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9284:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9284:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9231:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9231:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9231:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9357:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9370:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9381:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9366:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9366:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9313:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9313:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9060:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9072:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9080:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9088:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9099:4:8",
														"type": ""
													}
												],
												"src": "8950:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9524:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9534:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9546:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9542:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9542:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9534:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9614:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9627:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9638:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9623:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9623:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9570:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9570:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9570:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9695:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9708:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9719:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9704:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9651:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9651:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9651:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9488:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9500:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9508:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9519:4:8",
														"type": ""
													}
												],
												"src": "9398:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9848:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9858:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9870:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9881:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9866:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9866:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9858:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9952:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9965:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9976:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9961:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9961:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9894:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9894:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9894:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9820:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9832:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9843:4:8",
														"type": ""
													}
												],
												"src": "9736:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10110:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10120:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10132:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10143:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10128:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10128:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10120:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10167:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10178:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10163:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10163:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10186:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10192:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10182:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10182:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10156:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10156:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10156:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10212:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10284:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10293:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10220:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10220:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10212:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10082:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10094:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10105:4:8",
														"type": ""
													}
												],
												"src": "9992:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10482:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10492:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10504:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10515:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10500:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10500:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10492:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10539:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10550:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10535:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10535:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10558:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10564:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10554:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10554:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10528:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10528:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10528:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10584:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10718:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10592:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10592:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10584:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10462:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10477:4:8",
														"type": ""
													}
												],
												"src": "10311:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10907:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10917:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10929:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10940:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10925:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10925:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10917:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10964:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10975:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10960:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10960:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10983:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10989:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10979:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10979:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10953:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10953:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10953:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11009:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11143:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11017:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11017:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11009:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10887:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10902:4:8",
														"type": ""
													}
												],
												"src": "10736:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11332:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11342:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11354:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11365:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11350:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11350:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11342:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11389:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11400:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11385:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11385:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11408:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11414:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11404:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11404:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11378:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11378:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11378:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11434:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11568:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11442:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11442:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11434:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11312:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11327:4:8",
														"type": ""
													}
												],
												"src": "11161:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11757:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11767:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11779:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11790:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11775:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11775:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11767:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11814:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11825:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11810:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11810:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11833:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11839:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11829:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11829:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11803:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11803:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11803:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11859:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11993:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11867:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11867:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11859:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11737:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11752:4:8",
														"type": ""
													}
												],
												"src": "11586:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12182:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12192:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12204:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12215:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12200:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12200:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12192:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12239:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12250:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12235:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12235:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12258:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12264:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12254:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12254:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12228:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12228:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12228:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12284:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12418:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12292:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12292:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12284:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12162:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12177:4:8",
														"type": ""
													}
												],
												"src": "12011:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12607:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12617:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12629:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12640:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12625:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12625:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12617:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12664:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12660:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12660:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12683:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12689:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12679:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12653:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12653:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12653:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12709:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12843:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12717:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12717:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12709:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12587:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12602:4:8",
														"type": ""
													}
												],
												"src": "12436:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13032:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13042:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13054:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13065:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13050:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13050:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13042:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13089:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13100:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13085:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13085:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13108:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13114:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13104:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13104:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13078:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13078:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13078:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13134:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13268:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13142:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13142:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13134:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13012:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13027:4:8",
														"type": ""
													}
												],
												"src": "12861:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13457:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13467:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13479:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13490:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13475:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13475:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13467:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13514:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13525:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13510:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13510:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13533:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13539:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13529:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13529:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13503:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13503:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13503:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13559:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13693:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13567:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13567:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13559:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13437:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13452:4:8",
														"type": ""
													}
												],
												"src": "13286:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13882:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13892:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13904:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13915:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13900:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13900:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13892:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13939:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13950:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13935:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13935:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13958:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13964:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13954:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13954:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13928:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13928:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13928:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13984:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14118:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13992:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13992:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13984:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13862:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13877:4:8",
														"type": ""
													}
												],
												"src": "13711:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14307:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14317:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14329:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14340:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14325:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14325:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14317:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14364:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14375:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14360:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14360:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14383:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14389:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14379:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14379:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14353:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14353:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14353:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14409:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14543:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14417:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14417:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14409:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14287:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14302:4:8",
														"type": ""
													}
												],
												"src": "14136:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14732:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14742:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14754:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14765:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14750:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14750:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14742:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14789:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14800:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14785:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14785:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14808:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14814:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14804:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14804:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14778:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14778:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14778:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14834:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14968:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14842:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14842:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14834:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14712:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14727:4:8",
														"type": ""
													}
												],
												"src": "14561:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15157:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15167:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15179:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15190:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15175:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15175:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15167:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15214:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15225:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15210:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15210:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15233:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15239:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15229:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15229:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15203:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15203:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15203:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15259:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15393:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15267:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15267:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15259:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15137:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15152:4:8",
														"type": ""
													}
												],
												"src": "14986:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15582:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15592:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15604:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15615:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15600:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15600:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15592:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15639:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15650:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15635:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15635:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15658:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15664:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15654:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15654:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15628:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15628:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15628:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15684:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15818:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15692:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15692:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15684:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15562:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15577:4:8",
														"type": ""
													}
												],
												"src": "15411:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15934:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15944:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15956:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15967:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15952:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15952:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15944:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16024:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16037:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16048:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16033:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16033:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15980:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15980:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15980:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15906:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15918:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15929:4:8",
														"type": ""
													}
												],
												"src": "15836:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16104:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16114:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16130:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16124:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16124:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "16114:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16097:6:8",
														"type": ""
													}
												],
												"src": "16064:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16203:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16214:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16230:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16224:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16224:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16214:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16186:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16196:6:8",
														"type": ""
													}
												],
												"src": "16145:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16308:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16319:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16335:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16329:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16329:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16319:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16291:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16301:6:8",
														"type": ""
													}
												],
												"src": "16249:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16467:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16477:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16492:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16477:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16439:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16444:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16455:11:8",
														"type": ""
													}
												],
												"src": "16354:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16603:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16620:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16625:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16613:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16613:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16613:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16641:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16660:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16665:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16656:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16656:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16641:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16575:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16580:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16591:11:8",
														"type": ""
													}
												],
												"src": "16507:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16726:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16736:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16759:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16741:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16741:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16736:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16770:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16793:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16775:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16775:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16770:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16933:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16935:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16935:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16935:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16854:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16861:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16929:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16857:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16857:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16851:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16851:81:8"
															},
															"nodeType": "YulIf",
															"src": "16848:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16965:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16976:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16979:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16972:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16972:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "16965:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16713:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16716:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16722:3:8",
														"type": ""
													}
												],
												"src": "16682:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17035:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17045:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17068:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17050:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17050:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17045:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17079:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17102:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17084:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17084:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17079:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17126:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17128:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17128:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17128:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17123:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17116:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17116:9:8"
															},
															"nodeType": "YulIf",
															"src": "17113:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17158:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17167:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17170:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17163:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17163:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17158:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17024:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17027:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17033:1:8",
														"type": ""
													}
												],
												"src": "16993:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17232:300:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17242:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17265:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17247:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17247:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17242:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17276:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17299:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17281:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17281:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17276:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17474:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17476:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17476:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17476:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17386:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17379:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17379:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17372:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17372:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17394:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17401:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17469:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "17397:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17397:74:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17391:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17391:81:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17368:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17368:105:8"
															},
															"nodeType": "YulIf",
															"src": "17365:131:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17506:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17521:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17524:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17517:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17517:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17506:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17215:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17218:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "17224:7:8",
														"type": ""
													}
												],
												"src": "17184:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17583:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17593:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17616:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17598:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17598:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17593:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17627:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17650:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17632:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17632:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17627:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17674:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17676:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17676:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17676:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17668:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17671:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17665:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17665:8:8"
															},
															"nodeType": "YulIf",
															"src": "17662:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17706:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17718:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17721:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17714:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17714:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "17706:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17569:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17572:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "17578:4:8",
														"type": ""
													}
												],
												"src": "17538:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17780:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17790:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17819:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "17801:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17801:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17790:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17762:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17772:7:8",
														"type": ""
													}
												],
												"src": "17735:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17879:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17889:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17914:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17907:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17907:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17900:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17900:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17889:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17861:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17871:7:8",
														"type": ""
													}
												],
												"src": "17837:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17978:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17988:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18003:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18010:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17999:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17999:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17988:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17960:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17970:7:8",
														"type": ""
													}
												],
												"src": "17933:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18110:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18120:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18131:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18120:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18092:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18102:7:8",
														"type": ""
													}
												],
												"src": "18065:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18222:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18232:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18276:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "18245:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18245:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "18232:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$912_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18202:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "18212:9:8",
														"type": ""
													}
												],
												"src": "18148:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18354:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18364:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18408:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "18377:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18377:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "18364:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18334:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "18344:9:8",
														"type": ""
													}
												],
												"src": "18294:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18486:53:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18496:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18527:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "18509:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18509:24:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "18496:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18466:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "18476:9:8",
														"type": ""
													}
												],
												"src": "18426:113:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18594:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18604:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18613:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "18608:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18673:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "18698:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "18703:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "18694:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18694:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "18717:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "18722:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "18713:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18713:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "18707:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18707:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18687:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18687:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18687:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "18634:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18637:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18631:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18631:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "18645:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18647:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "18656:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18659:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "18652:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18652:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "18647:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "18627:3:8",
																"statements": []
															},
															"src": "18623:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18770:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "18820:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "18825:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "18816:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18816:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18834:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18809:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18809:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18809:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "18751:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18754:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18748:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18748:13:8"
															},
															"nodeType": "YulIf",
															"src": "18745:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "18576:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "18581:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18586:6:8",
														"type": ""
													}
												],
												"src": "18545:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18892:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18902:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18925:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18907:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18907:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18902:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18936:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18959:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18941:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18941:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18936:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18983:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "18985:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18985:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18985:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18980:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18973:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18973:9:8"
															},
															"nodeType": "YulIf",
															"src": "18970:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19014:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19023:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19026:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "19019:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19019:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19014:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18881:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18884:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "18890:1:8",
														"type": ""
													}
												],
												"src": "18858:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19068:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19085:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19088:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19078:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19078:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19078:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19182:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19185:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19175:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19175:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19175:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19206:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19209:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19199:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19199:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19199:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19040:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19254:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19271:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19274:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19264:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19264:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19264:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19368:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19371:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19361:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19361:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19361:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19392:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19395:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19385:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19385:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19385:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "19226:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19501:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19518:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19521:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19511:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19511:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19511:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "19412:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19624:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19641:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19644:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19634:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19634:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19634:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "19535:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19706:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19716:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19734:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19741:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19730:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19730:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19750:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "19746:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19746:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19726:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19726:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "19716:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19689:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "19699:6:8",
														"type": ""
													}
												],
												"src": "19658:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19872:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19894:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19902:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19890:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19890:14:8"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19906:18:8",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19883:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19883:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19883:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19864:6:8",
														"type": ""
													}
												],
												"src": "19766:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20044:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20066:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20074:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20062:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20062:14:8"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20078:34:8",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20055:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20055:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20055:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20134:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20142:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20130:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20130:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20147:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20123:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20123:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20123:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20036:6:8",
														"type": ""
													}
												],
												"src": "19938:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20279:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20301:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20309:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20297:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20297:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20313:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20290:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20290:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20290:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20369:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20377:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20365:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20365:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20382:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20358:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20358:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20358:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20271:6:8",
														"type": ""
													}
												],
												"src": "20173:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20510:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20532:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20540:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20528:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20528:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20544:16:8",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20521:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20521:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20521:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20502:6:8",
														"type": ""
													}
												],
												"src": "20404:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20680:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20702:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20710:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20698:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20698:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20714:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20691:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20691:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20691:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20770:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20778:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20766:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20766:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20783:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20759:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20759:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20759:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20672:6:8",
														"type": ""
													}
												],
												"src": "20574:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20911:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20933:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20941:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20929:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20929:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420416464726573732e20416464726573732063616e27742062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20945:34:8",
																		"type": "",
																		"value": "Invalid Address. Address can't b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20922:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20922:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20922:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21001:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21009:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20997:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20997:15:8"
																	},
																	{
																		"hexValue": "65207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21014:8:8",
																		"type": "",
																		"value": "e zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20990:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20990:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20990:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20903:6:8",
														"type": ""
													}
												],
												"src": "20805:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21142:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21164:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21172:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21160:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21160:14:8"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21176:33:8",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21153:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21153:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21153:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21134:6:8",
														"type": ""
													}
												],
												"src": "21036:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21329:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21351:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21359:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21347:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21347:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21363:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21340:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21340:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21340:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21321:6:8",
														"type": ""
													}
												],
												"src": "21223:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21517:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21539:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21547:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21535:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21535:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420415059",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21551:13:8",
																		"type": "",
																		"value": "Invalid APY"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21528:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21528:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21528:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21509:6:8",
														"type": ""
													}
												],
												"src": "21411:161:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21684:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21706:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21714:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21702:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21702:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21718:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21695:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21695:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21695:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21676:6:8",
														"type": ""
													}
												],
												"src": "21578:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21869:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21891:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21899:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21887:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21887:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21903:28:8",
																		"type": "",
																		"value": "Invalid Unstaking Fee Rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21880:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21880:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21880:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21861:6:8",
														"type": ""
													}
												],
												"src": "21763:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22051:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22073:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22081:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22069:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22069:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22085:25:8",
																		"type": "",
																		"value": "Invalid Lockup Duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22062:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22062:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22062:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22043:6:8",
														"type": ""
													}
												],
												"src": "21945:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22230:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22252:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22260:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22248:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22248:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22264:15:8",
																		"type": "",
																		"value": "Insufficient!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22241:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22241:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22241:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22222:6:8",
														"type": ""
													}
												],
												"src": "22124:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22336:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22393:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22402:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22405:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22395:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22395:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22395:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22359:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22384:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "22366:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22366:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22356:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22356:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22349:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22349:43:8"
															},
															"nodeType": "YulIf",
															"src": "22346:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22329:5:8",
														"type": ""
													}
												],
												"src": "22293:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22461:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22515:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22524:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22527:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22517:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22517:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22517:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22484:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22506:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "22491:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22491:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22481:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22481:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22474:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22474:40:8"
															},
															"nodeType": "YulIf",
															"src": "22471:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22454:5:8",
														"type": ""
													}
												],
												"src": "22421:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22586:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22643:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22652:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22655:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22645:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22645:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22645:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22609:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22634:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "22616:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22616:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22606:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22606:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22599:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22599:43:8"
															},
															"nodeType": "YulIf",
															"src": "22596:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22579:5:8",
														"type": ""
													}
												],
												"src": "22543:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$912_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IBEP20_$912_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Address. Address can't b\")\n\n        mstore(add(memPtr, 32), \"e zero\")\n\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid APY\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Unstaking Fee Rate\")\n\n    }\n\n    function store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Lockup Duration\")\n\n    }\n\n    function store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c80637b0472f01161009757806391e07e7a1161006657806391e07e7a1461023b578063f2fde38b14610257578063f7b2a7be14610273578063fc0c546a1461029157610100565b80637b0472f0146101c7578063817b1cd2146101e35780638a9d3839146102015780638da5cb5b1461021d57610100565b80635d2ec65d116100d35780635d2ec65d146101655780636413996c14610183578063692642e7146101a1578063715018a6146101bd57610100565b80632e1a7d4d14610105578063373d6132146101215780634641257d1461013f57806350f19c8714610149575b600080fd5b61011f600480360381019061011a9190611a97565b6102af565b005b610129610666565b6040516101369190611ffe565b60405180910390f35b6101476106b0565b005b610163600480360381019061015e9190611a97565b6109e1565b005b61016d610ae1565b60405161017a9190611ffe565b60405180910390f35b61018b610b33565b6040516101989190611ffe565b60405180910390f35b6101bb60048036038101906101b69190611a97565b610bdb565b005b6101c5610cdb565b005b6101e160048036038101906101dc9190611af1565b610d63565b005b6101eb610fb6565b6040516101f89190611ffe565b60405180910390f35b61021b60048036038101906102169190611a3d565b610fbc565b005b610225611122565b6040516102329190611da6565b60405180910390f35b61025560048036038101906102509190611a97565b61114b565b005b610271600480360381019061026c9190611a3d565b61124b565b005b61027b611343565b6040516102889190611ffe565b60405180910390f35b61029961138d565b6040516102a69190611e21565b60405180910390f35b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008211610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032c90611f1e565b60405180910390fd5b806001015482111561037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037390611ebe565b60405180910390fd5b6103846113b3565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103e19190611da6565b60206040518083038186803b1580156103f957600080fd5b505afa15801561040d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104319190611ac4565b83106104e757600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104929190611da6565b60206040518083038186803b1580156104aa57600080fd5b505afa1580156104be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e29190611ac4565b6104e9565b825b905060008060025461051d6201518061050f87600301544261151a90919063ffffffff16565b61153090919063ffffffff16565b6105279190612211565b14610533576001610536565b60005b60ff16905061059e61058f61271061058160015461057387610565888b6002015461154690919063ffffffff16565b61154690919063ffffffff16565b61154690919063ffffffff16565b61153090919063ffffffff16565b8361151a90919063ffffffff16565b91506105b58260075461151a90919063ffffffff16565b6007819055506105d282846001015461151a90919063ffffffff16565b83600101819055506106273383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661155c9092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643383604051610658929190611df8565b60405180910390a150505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6106b86113b3565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061074061072d61271061071f600454866000015461154690919063ffffffff16565b61153090919063ffffffff16565b836000015461151a90919063ffffffff16565b905060008111610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c90611e5e565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108029190611da6565b60206040518083038186803b15801561081a57600080fd5b505afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190611ac4565b81111561092957600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108d69190611da6565b60206040518083038186803b1580156108ee57600080fd5b505afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109269190611ac4565b90505b61099a600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166115e2909392919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba33826040516109d5929190611df8565b60405180910390a15050565b6109e961166b565b73ffffffffffffffffffffffffffffffffffffffff16610a07611122565b73ffffffffffffffffffffffffffffffffffffffff1614610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490611f3e565b60405180910390fd5b60008111610aa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9790611f5e565b60405180910390fd5b806003819055507fb8f51888a0746f534a064d0d08f74852a939d6cd181760e1cedc7a8396d9e22f81604051610ad69190611ffe565b60405180910390a150565b6000610aeb6113b3565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000610bd6610b506201518060025461151a90919063ffffffff16565b610ba6600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442610ba1919061212c565b611673565b610bb09190612211565b610bc86201518060025461151a90919063ffffffff16565b61151a90919063ffffffff16565b905090565b610be361166b565b73ffffffffffffffffffffffffffffffffffffffff16610c01611122565b73ffffffffffffffffffffffffffffffffffffffff1614610c57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4e90611f3e565b60405180910390fd5b60008111610c9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9190611fbe565b60405180910390fd5b806002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610cd09190611ffe565b60405180910390a150565b610ce361166b565b73ffffffffffffffffffffffffffffffffffffffff16610d01611122565b73ffffffffffffffffffffffffffffffffffffffff1614610d57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4e90611f3e565b60405180910390fd5b610d616000611692565b565b60008211610da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9d90611f1e565b60405180910390fd5b81600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610e029190611da6565b60206040518083038186803b158015610e1a57600080fd5b505afa158015610e2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e529190611ac4565b11610e92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8990611fde565b60405180910390fd5b610e9a6113b3565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050610f2c333085600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166115e2909392919063ffffffff16565b610f4383826001015461175690919063ffffffff16565b8160010181905550428160030181905550818160020181905550610f728360075461175690919063ffffffff16565b6007819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3384604051610fa9929190611df8565b60405180910390a1505050565b60075481565b610fc461166b565b73ffffffffffffffffffffffffffffffffffffffff16610fe2611122565b73ffffffffffffffffffffffffffffffffffffffff1614611038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102f90611f3e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16116110a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109e90611efe565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a87816040516111179190611da6565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61115361166b565b73ffffffffffffffffffffffffffffffffffffffff16611171611122565b73ffffffffffffffffffffffffffffffffffffffff16146111c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111be90611f3e565b60405180910390fd5b6000811161120a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120190611f9e565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516112409190611ffe565b60405180910390a150565b61125361166b565b73ffffffffffffffffffffffffffffffffffffffff16611271611122565b73ffffffffffffffffffffffffffffffffffffffff16146112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112be90611f3e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132e90611e9e565b60405180910390fd5b61134081611692565b50565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600401544210156114085750611518565b600061142282600301544261141d919061212c565b611673565b9050600061146561271061145760035461144986886001015461154690919063ffffffff16565b61154690919063ffffffff16565b61153090919063ffffffff16565b90506001836002015414156114ec57600061148b6002548461153090919063ffffffff16565b90506114e86127106114da6114b56114a4600254611673565b60035461154690919063ffffffff16565b6114cc85896001015461154690919063ffffffff16565b61154690919063ffffffff16565b61153090919063ffffffff16565b9150505b61150381846000015461175690919063ffffffff16565b83600001819055504283600401819055505050505b565b60008183611528919061212c565b905092915050565b6000818361153e91906120a1565b905092915050565b6000818361155491906120d2565b905092915050565b6115dd8363a9059cbb60e01b848460405160240161157b929190611df8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061176c565b505050565b611665846323b872dd60e01b85858560405160240161160393929190611dc1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061176c565b50505050565b600033905090565b600061168b620151808361153090919063ffffffff16565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183611764919061204b565b905092915050565b60006117ce826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166118339092919063ffffffff16565b905060008151111561182e57808060200190518101906117ee9190611a6a565b61182d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182490611e7e565b60405180910390fd5b5b505050565b6060611842848460008561184b565b90509392505050565b606082471015611890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188790611ede565b60405180910390fd5b6118998561195f565b6118d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cf90611f7e565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516119019190611d8f565b60006040518083038185875af1925050503d806000811461193e576040519150601f19603f3d011682016040523d82523d6000602084013e611943565b606091505b5091509150611953828286611982565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611992578290506119e2565b6000835111156119a55782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d99190611e3c565b60405180910390fd5b9392505050565b6000813590506119f881612563565b92915050565b600081519050611a0d8161257a565b92915050565b600081359050611a2281612591565b92915050565b600081519050611a3781612591565b92915050565b600060208284031215611a5357611a526122a0565b5b6000611a61848285016119e9565b91505092915050565b600060208284031215611a8057611a7f6122a0565b5b6000611a8e848285016119fe565b91505092915050565b600060208284031215611aad57611aac6122a0565b5b6000611abb84828501611a13565b91505092915050565b600060208284031215611ada57611ad96122a0565b5b6000611ae884828501611a28565b91505092915050565b60008060408385031215611b0857611b076122a0565b5b6000611b1685828601611a13565b9250506020611b2785828601611a13565b9150509250929050565b611b3a81612160565b82525050565b6000611b4b82612019565b611b55818561202f565b9350611b658185602086016121de565b80840191505092915050565b611b7a816121a8565b82525050565b6000611b8b82612024565b611b95818561203a565b9350611ba58185602086016121de565b611bae816122a5565b840191505092915050565b6000611bc660108361203a565b9150611bd1826122b6565b602082019050919050565b6000611be9602a8361203a565b9150611bf4826122df565b604082019050919050565b6000611c0c60268361203a565b9150611c178261232e565b604082019050919050565b6000611c2f600e8361203a565b9150611c3a8261237d565b602082019050919050565b6000611c5260268361203a565b9150611c5d826123a6565b604082019050919050565b6000611c7560268361203a565b9150611c80826123f5565b604082019050919050565b6000611c98601f8361203a565b9150611ca382612444565b602082019050919050565b6000611cbb60208361203a565b9150611cc68261246d565b602082019050919050565b6000611cde600b8361203a565b9150611ce982612496565b602082019050919050565b6000611d01601d8361203a565b9150611d0c826124bf565b602082019050919050565b6000611d24601a8361203a565b9150611d2f826124e8565b602082019050919050565b6000611d4760178361203a565b9150611d5282612511565b602082019050919050565b6000611d6a600d8361203a565b9150611d758261253a565b602082019050919050565b611d898161219e565b82525050565b6000611d9b8284611b40565b915081905092915050565b6000602082019050611dbb6000830184611b31565b92915050565b6000606082019050611dd66000830186611b31565b611de36020830185611b31565b611df06040830184611d80565b949350505050565b6000604082019050611e0d6000830185611b31565b611e1a6020830184611d80565b9392505050565b6000602082019050611e366000830184611b71565b92915050565b60006020820190508181036000830152611e568184611b80565b905092915050565b60006020820190508181036000830152611e7781611bb9565b9050919050565b60006020820190508181036000830152611e9781611bdc565b9050919050565b60006020820190508181036000830152611eb781611bff565b9050919050565b60006020820190508181036000830152611ed781611c22565b9050919050565b60006020820190508181036000830152611ef781611c45565b9050919050565b60006020820190508181036000830152611f1781611c68565b9050919050565b60006020820190508181036000830152611f3781611c8b565b9050919050565b60006020820190508181036000830152611f5781611cae565b9050919050565b60006020820190508181036000830152611f7781611cd1565b9050919050565b60006020820190508181036000830152611f9781611cf4565b9050919050565b60006020820190508181036000830152611fb781611d17565b9050919050565b60006020820190508181036000830152611fd781611d3a565b9050919050565b60006020820190508181036000830152611ff781611d5d565b9050919050565b60006020820190506120136000830184611d80565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006120568261219e565b91506120618361219e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561209657612095612242565b5b828201905092915050565b60006120ac8261219e565b91506120b78361219e565b9250826120c7576120c6612271565b5b828204905092915050565b60006120dd8261219e565b91506120e88361219e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561212157612120612242565b5b828202905092915050565b60006121378261219e565b91506121428361219e565b92508282101561215557612154612242565b5b828203905092915050565b600061216b8261217e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006121b3826121ba565b9050919050565b60006121c5826121cc565b9050919050565b60006121d78261217e565b9050919050565b60005b838110156121fc5780820151818401526020810190506121e1565b8381111561220b576000848401525b50505050565b600061221c8261219e565b91506122278361219e565b92508261223757612236612271565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420416464726573732e20416464726573732063616e2774206260008201527f65207a65726f0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c696420415059000000000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b61256c81612160565b811461257757600080fd5b50565b61258381612172565b811461258e57600080fd5b50565b61259a8161219e565b81146125a557600080fd5b5056fea2646970667358221220e6efc59e49dc7e980978f294c922af4c8d26fb936a7cecb155c3fa1d54af0bf964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0472F0 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x91E07E7A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8A9D3839 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x5D2EC65D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x6413996C EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BD JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x50F19C87 EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0xCDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0xD63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0xFBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x114B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x124B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27B PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x335 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32C SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x373 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x384 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST DUP4 LT PUSH2 0x4E7 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD PUSH2 0x51D PUSH3 0x15180 PUSH2 0x50F DUP8 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x2211 JUMP JUMPDEST EQ PUSH2 0x533 JUMPI PUSH1 0x1 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x59E PUSH2 0x58F PUSH2 0x2710 PUSH2 0x581 PUSH1 0x1 SLOAD PUSH2 0x573 DUP8 PUSH2 0x565 DUP9 DUP12 PUSH1 0x2 ADD SLOAD PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x5B5 DUP3 PUSH1 0x7 SLOAD PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x5D2 DUP3 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x627 CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x658 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B8 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x740 PUSH2 0x72D PUSH2 0x2710 PUSH2 0x71F PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x785 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77C SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x929 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x902 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x99A PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15E2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x9D5 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x9E9 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA07 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA97 SWAP1 PUSH2 0x1F5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xB8F51888A0746F534A064D0D08F74852A939D6CD181760E1CEDC7A8396D9E22F DUP2 PUSH1 0x40 MLOAD PUSH2 0xAD6 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD6 PUSH2 0xB50 PUSH3 0x15180 PUSH1 0x2 SLOAD PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBA6 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x1673 JUMP JUMPDEST PUSH2 0xBB0 SWAP2 SWAP1 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0xBC8 PUSH3 0x15180 PUSH1 0x2 SLOAD PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x151A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBE3 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC01 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4E SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC91 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xCD0 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xCE3 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD01 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4E SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD61 PUSH1 0x0 PUSH2 0x1692 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xDA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9D SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE52 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST GT PUSH2 0xE92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9A PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0xF2C CALLER ADDRESS DUP6 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15E2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF43 DUP4 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1756 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF72 DUP4 PUSH1 0x7 SLOAD PUSH2 0x1756 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP5 PUSH1 0x40 MLOAD PUSH2 0xFA9 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC4 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE2 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x10A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109E SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xEDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1153 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1171 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BE SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x120A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1201 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1240 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1253 PUSH2 0x166B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1271 PUSH2 0x1122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BE SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1337 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132E SWAP1 PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1340 DUP2 PUSH2 0x1692 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1408 JUMPI POP PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1422 DUP3 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x141D SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x1673 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1465 PUSH2 0x2710 PUSH2 0x1457 PUSH1 0x3 SLOAD PUSH2 0x1449 DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x14EC JUMPI PUSH1 0x0 PUSH2 0x148B PUSH1 0x2 SLOAD DUP5 PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x14E8 PUSH2 0x2710 PUSH2 0x14DA PUSH2 0x14B5 PUSH2 0x14A4 PUSH1 0x2 SLOAD PUSH2 0x1673 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14CC DUP6 DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1546 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH2 0x1503 DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1756 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP4 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1528 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x153E SWAP2 SWAP1 PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1554 SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x157B SWAP3 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x176C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1665 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1603 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x176C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168B PUSH3 0x15180 DUP4 PUSH2 0x1530 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1764 SWAP2 SWAP1 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1833 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x182E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x17EE SWAP2 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1824 SWAP1 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1842 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x184B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1890 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1887 SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1899 DUP6 PUSH2 0x195F JUMP JUMPDEST PUSH2 0x18D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CF SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1901 SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x193E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1953 DUP3 DUP3 DUP7 PUSH2 0x1982 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1992 JUMPI DUP3 SWAP1 POP PUSH2 0x19E2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x19A5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D9 SWAP2 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F8 DUP2 PUSH2 0x2563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A0D DUP2 PUSH2 0x257A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A22 DUP2 PUSH2 0x2591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A37 DUP2 PUSH2 0x2591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A53 JUMPI PUSH2 0x1A52 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A61 DUP5 DUP3 DUP6 ADD PUSH2 0x19E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A80 JUMPI PUSH2 0x1A7F PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A8E DUP5 DUP3 DUP6 ADD PUSH2 0x19FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AAD JUMPI PUSH2 0x1AAC PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ABB DUP5 DUP3 DUP6 ADD PUSH2 0x1A13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1AD9 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1A28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B08 JUMPI PUSH2 0x1B07 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B16 DUP6 DUP3 DUP7 ADD PUSH2 0x1A13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B27 DUP6 DUP3 DUP7 ADD PUSH2 0x1A13 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B3A DUP2 PUSH2 0x2160 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4B DUP3 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x1B55 DUP2 DUP6 PUSH2 0x202F JUMP JUMPDEST SWAP4 POP PUSH2 0x1B65 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21DE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7A DUP2 PUSH2 0x21A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B8B DUP3 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x1B95 DUP2 DUP6 PUSH2 0x203A JUMP JUMPDEST SWAP4 POP PUSH2 0x1BA5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21DE JUMP JUMPDEST PUSH2 0x1BAE DUP2 PUSH2 0x22A5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC6 PUSH1 0x10 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD1 DUP3 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE9 PUSH1 0x2A DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF4 DUP3 PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0C PUSH1 0x26 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C17 DUP3 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2F PUSH1 0xE DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3A DUP3 PUSH2 0x237D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C52 PUSH1 0x26 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5D DUP3 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C75 PUSH1 0x26 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C80 DUP3 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C98 PUSH1 0x1F DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA3 DUP3 PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CBB PUSH1 0x20 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC6 DUP3 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDE PUSH1 0xB DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE9 DUP3 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D01 PUSH1 0x1D DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D0C DUP3 PUSH2 0x24BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D24 PUSH1 0x1A DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2F DUP3 PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D47 PUSH1 0x17 DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D52 DUP3 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6A PUSH1 0xD DUP4 PUSH2 0x203A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D75 DUP3 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D89 DUP2 PUSH2 0x219E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9B DUP3 DUP5 PUSH2 0x1B40 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DD6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x1DE3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x1DF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D80 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E0D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x1E1A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E56 DUP2 DUP5 PUSH2 0x1B80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E77 DUP2 PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E97 DUP2 PUSH2 0x1BDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB7 DUP2 PUSH2 0x1BFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED7 DUP2 PUSH2 0x1C22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF7 DUP2 PUSH2 0x1C45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F17 DUP2 PUSH2 0x1C68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F37 DUP2 PUSH2 0x1C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F57 DUP2 PUSH2 0x1CAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F77 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F97 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB7 DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD7 DUP2 PUSH2 0x1D3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF7 DUP2 PUSH2 0x1D5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2013 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2056 DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x2061 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2096 JUMPI PUSH2 0x2095 PUSH2 0x2242 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AC DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x20B7 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20C7 JUMPI PUSH2 0x20C6 PUSH2 0x2271 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DD DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x20E8 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2121 JUMPI PUSH2 0x2120 PUSH2 0x2242 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x2142 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x2242 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x216B DUP3 PUSH2 0x217E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B3 DUP3 PUSH2 0x21BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C5 DUP3 PUSH2 0x21CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D7 DUP3 PUSH2 0x217E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21FC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21E1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x220B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221C DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP PUSH2 0x2227 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2237 JUMPI PUSH2 0x2236 PUSH2 0x2271 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420416464726573732E20416464726573732063616E27742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420415059000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x256C DUP2 PUSH2 0x2160 JUMP JUMPDEST DUP2 EQ PUSH2 0x2577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2583 DUP2 PUSH2 0x2172 JUMP JUMPDEST DUP2 EQ PUSH2 0x258E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x259A DUP2 PUSH2 0x219E JUMP JUMPDEST DUP2 EQ PUSH2 0x25A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xEF 0xC5 SWAP15 0x49 0xDC PUSH31 0x980978F294C922AF4C8D26FB936A7CECB155C3FA1D54AF0BF964736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "260:6576:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3526:916;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6356:122;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5697:603;;;:::i;:::-;;4450:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5505:151;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6613:220;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4661:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;2861:618:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1014:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5179:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4905:266:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6486:119:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1047:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3526:916;3581:21;3605:7;:19;3613:10;3605:19;;;;;;;;;;;;;;;3581:43;;3654:1;3645:6;:10;3637:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3720:6;:19;;;3710:6;:29;;3702:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3771:14;:12;:14::i;:::-;3796:27;3835:5;;;;;;;;;;;:15;;;3859:4;3835:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3826:6;:39;:81;;3877:5;;;;;;;;;;;:15;;;3901:4;3877:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3826:81;;;3868:6;3826:81;3796:111;;3918:24;4018:1;4002:12;;3945:54;3992:6;3945:42;3965:6;:21;;;3945:15;:19;;:42;;;;:::i;:::-;:46;;:54;;;;:::i;:::-;:69;;;;:::i;:::-;:74;:82;;4026:1;3945:82;;;4022:1;3945:82;3918:109;;;;4060:115;4084:90;4170:3;4084:81;4147:17;;4084:58;4122:19;4084:33;4100:16;4084:6;:11;;;:15;;:33;;;;:::i;:::-;:37;;:58;;;;:::i;:::-;:62;;:81;;;;:::i;:::-;:85;;:90;;;;:::i;:::-;4060:19;:23;;:115;;;;:::i;:::-;4038:137;;4200:36;4216:19;4200:11;;:15;;:36;;;;:::i;:::-;4186:11;:50;;;;4269:44;4293:19;4269:6;:19;;;:23;;:44;;;;:::i;:::-;4247:6;:19;;:66;;;;4324:51;4343:10;4355:19;4324:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;4393:41;4402:10;4414:19;4393:41;;;;;;;:::i;:::-;;;;;;;;3568:874;;;3526:916;:::o;6356:122::-;6401:7;6438;:19;6446:10;6438:19;;;;;;;;;;;;;;;:32;;;6431:39;;6356:122;:::o;5697:603::-;5743:14;:12;:14::i;:::-;5768:21;5792:7;:19;5800:10;5792:19;;;;;;;;;;;;;;;5768:43;;5822:21;5846:89;5877:57;5928:5;5877:46;5908:14;;5877:6;:26;;;:30;;:46;;;;:::i;:::-;:50;;:57;;;;:::i;:::-;5846:6;:26;;;:30;;:89;;;;:::i;:::-;5822:113;;5980:1;5964:13;:17;5956:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;6033:5;;;;;;;;;;;:15;;;6049:13;;;;;;;;;;;6033:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6017:13;:46;6013:111;;;6094:5;;;;;;;;;;;:15;;;6110:13;;;;;;;;;;;6094:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6078:46;;6013:111;6135:64;6158:13;;;;;;;;;;;6173:10;6185:13;6135:5;;;;;;;;;;;:22;;;;:64;;;;;;:::i;:::-;6239:1;6210:6;:26;;:30;;;;6258:34;6266:10;6278:13;6258:34;;;;;;;:::i;:::-;;;;;;;;5722:578;;5697:603::o;4450:203::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4544:1:7::1;4531:10;:14;4523:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;4594:10;4582:9;:22;;;;4622:23;4634:10;4622:23;;;;;;:::i;:::-;;;;;;;;4450:203:::0;:::o;5505:151::-;5548:7;5577:14;:12;:14::i;:::-;5609:7;:19;5617:10;5609:19;;;;;;;;;;;;;;;:39;;;5602:46;;5505:151;:::o;6613:220::-;6665:7;6692:133;6799:24;6816:6;6799:12;;:16;;:24;;;;:::i;:::-;6721:74;6760:7;:19;6768:10;6760:19;;;;;;;;;;;;;;;:34;;;6742:15;:52;;;;:::i;:::-;6721:20;:74::i;:::-;:103;;;;:::i;:::-;6692:24;6709:6;6692:12;;:16;;:24;;;;:::i;:::-;:28;;:133;;;;:::i;:::-;6685:140;;6613:220;:::o;4661:236::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4772:1:7::1;4756:13;:17;4748:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4829:13;4814:12;:28;;;;4860:29;4875:13;4860:29;;;;;;:::i;:::-;;;;;;;;4661:236:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2861:618:7:-;2955:1;2945:7;:11;2937:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3041:7;3011:5;;;;;;;;;;;:15;;;3027:10;3011:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3003:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3087:14;:12;:14::i;:::-;3112:21;3136:7;:19;3144:10;3136:19;;;;;;;;;;;;;;;3112:43;;3166:58;3189:10;3209:4;3216:7;3166:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;3257:32;3281:7;3257:6;:19;;;:23;;:32;;;;:::i;:::-;3235:6;:19;;:54;;;;3324:15;3300:6;:21;;:39;;;;3364:5;3350:6;:11;;:19;;;;3394:24;3410:7;3394:11;;:15;;:24;;;;:::i;:::-;3380:11;:38;;;;3444:27;3451:10;3463:7;3444:27;;;;;;;:::i;:::-;;;;;;;;2916:563;2861:618;;:::o;1014:26::-;;;;:::o;5179:267::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5301:1:7::1;5276:27;;:14;:27;;;5268:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;5375:14;5359:13;;:30;;;;;;;;;;;;;;;;;;5407:31;5423:14;5407:31;;;;;;:::i;:::-;;;;;;;;5179:267:::0;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;4905:266:7:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5023:1:7::1;5002:18;:22;4994:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5088:18;5068:17;:38;;;;5124:39;5144:18;5124:39;;;;;;:::i;:::-;;;;;;;;4905:266:::0;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6486:119:7:-;6531:7;6558;:19;6566:10;6558:19;;;;;;;;;;;;;;;:39;;;6551:46;;6486:119;:::o;1047:19::-;;;;;;;;;;;;;:::o;2055:742::-;2107:21;2131:7;:19;2139:10;2131:19;;;;;;;;;;;;;;;2107:43;;2182:6;:22;;;2164:15;:40;2161:78;;;2221:7;;;2161:78;2257:16;2276:61;2315:6;:21;;;2297:15;:39;;;;:::i;:::-;2276:20;:61::i;:::-;2257:80;;2348:17;2368:57;2421:3;2368:48;2406:9;;2368:33;2392:8;2368:6;:19;;;:23;;:33;;;;:::i;:::-;:37;;:48;;;;:::i;:::-;:52;;:57;;;;:::i;:::-;2348:77;;2455:1;2440:6;:11;;;:16;2436:222;;;2473:18;2494:26;2507:12;;2494:8;:12;;:26;;;;:::i;:::-;2473:47;;2547:99;2642:3;2547:90;2587:49;2601:34;2622:12;;2601:20;:34::i;:::-;2587:9;;:13;;:49;;;;:::i;:::-;2547:35;2571:10;2547:6;:19;;;:23;;:35;;;;:::i;:::-;:39;;:90;;;;:::i;:::-;:94;;:99;;;;:::i;:::-;2535:111;;2458:200;2436:222;2697:41;2728:9;2697:6;:26;;;:30;;:41;;;;:::i;:::-;2668:6;:26;;:70;;;;2774:15;2749:6;:22;;:40;;;;2086:711;;;2055:742;:::o;3108:96:4:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;290:177:6:-;373:86;393:5;423:23;;;448:2;452:5;400:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:19;:86::i;:::-;290:177;;;:::o;475:205::-;576:96;596:5;626:27;;;655:4;661:2;665:5;603:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:19;:96::i;:::-;475:205;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;1846:134:7:-;1916:7;1953:19;1965:6;1953:7;:11;;:19;;;;:::i;:::-;1946:26;;1846:134;;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;2741:96:4:-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;2599:769:6:-;3031:23;3057:69;3085:4;3057:69;;;;;;;;;;;;;;;;;3065:5;3057:27;;;;:69;;;;;:::i;:::-;3031:95;;3161:1;3141:10;:17;:21;3137:224;;;3283:10;3272:30;;;;;;;;;;;;:::i;:::-;3264:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:224;2669:699;2599:769;;:::o;3861:223:2:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:474::-;2035:6;2043;2092:2;2080:9;2071:7;2067:23;2063:32;2060:119;;;2098:79;;:::i;:::-;2060:119;2218:1;2243:53;2288:7;2279:6;2268:9;2264:22;2243:53;:::i;:::-;2233:63;;2189:117;2345:2;2371:53;2416:7;2407:6;2396:9;2392:22;2371:53;:::i;:::-;2361:63;;2316:118;1967:474;;;;;:::o;2447:118::-;2534:24;2552:5;2534:24;:::i;:::-;2529:3;2522:37;2447:118;;:::o;2571:373::-;2675:3;2703:38;2735:5;2703:38;:::i;:::-;2757:88;2838:6;2833:3;2757:88;:::i;:::-;2750:95;;2854:52;2899:6;2894:3;2887:4;2880:5;2876:16;2854:52;:::i;:::-;2931:6;2926:3;2922:16;2915:23;;2679:265;2571:373;;;;:::o;2950:159::-;3051:51;3096:5;3051:51;:::i;:::-;3046:3;3039:64;2950:159;;:::o;3115:364::-;3203:3;3231:39;3264:5;3231:39;:::i;:::-;3286:71;3350:6;3345:3;3286:71;:::i;:::-;3279:78;;3366:52;3411:6;3406:3;3399:4;3392:5;3388:16;3366:52;:::i;:::-;3443:29;3465:6;3443:29;:::i;:::-;3438:3;3434:39;3427:46;;3207:272;3115:364;;;;:::o;3485:366::-;3627:3;3648:67;3712:2;3707:3;3648:67;:::i;:::-;3641:74;;3724:93;3813:3;3724:93;:::i;:::-;3842:2;3837:3;3833:12;3826:19;;3485:366;;;:::o;3857:::-;3999:3;4020:67;4084:2;4079:3;4020:67;:::i;:::-;4013:74;;4096:93;4185:3;4096:93;:::i;:::-;4214:2;4209:3;4205:12;4198:19;;3857:366;;;:::o;4229:::-;4371:3;4392:67;4456:2;4451:3;4392:67;:::i;:::-;4385:74;;4468:93;4557:3;4468:93;:::i;:::-;4586:2;4581:3;4577:12;4570:19;;4229:366;;;:::o;4601:::-;4743:3;4764:67;4828:2;4823:3;4764:67;:::i;:::-;4757:74;;4840:93;4929:3;4840:93;:::i;:::-;4958:2;4953:3;4949:12;4942:19;;4601:366;;;:::o;4973:::-;5115:3;5136:67;5200:2;5195:3;5136:67;:::i;:::-;5129:74;;5212:93;5301:3;5212:93;:::i;:::-;5330:2;5325:3;5321:12;5314:19;;4973:366;;;:::o;5345:::-;5487:3;5508:67;5572:2;5567:3;5508:67;:::i;:::-;5501:74;;5584:93;5673:3;5584:93;:::i;:::-;5702:2;5697:3;5693:12;5686:19;;5345:366;;;:::o;5717:::-;5859:3;5880:67;5944:2;5939:3;5880:67;:::i;:::-;5873:74;;5956:93;6045:3;5956:93;:::i;:::-;6074:2;6069:3;6065:12;6058:19;;5717:366;;;:::o;6089:::-;6231:3;6252:67;6316:2;6311:3;6252:67;:::i;:::-;6245:74;;6328:93;6417:3;6328:93;:::i;:::-;6446:2;6441:3;6437:12;6430:19;;6089:366;;;:::o;6461:::-;6603:3;6624:67;6688:2;6683:3;6624:67;:::i;:::-;6617:74;;6700:93;6789:3;6700:93;:::i;:::-;6818:2;6813:3;6809:12;6802:19;;6461:366;;;:::o;6833:::-;6975:3;6996:67;7060:2;7055:3;6996:67;:::i;:::-;6989:74;;7072:93;7161:3;7072:93;:::i;:::-;7190:2;7185:3;7181:12;7174:19;;6833:366;;;:::o;7205:::-;7347:3;7368:67;7432:2;7427:3;7368:67;:::i;:::-;7361:74;;7444:93;7533:3;7444:93;:::i;:::-;7562:2;7557:3;7553:12;7546:19;;7205:366;;;:::o;7577:::-;7719:3;7740:67;7804:2;7799:3;7740:67;:::i;:::-;7733:74;;7816:93;7905:3;7816:93;:::i;:::-;7934:2;7929:3;7925:12;7918:19;;7577:366;;;:::o;7949:::-;8091:3;8112:67;8176:2;8171:3;8112:67;:::i;:::-;8105:74;;8188:93;8277:3;8188:93;:::i;:::-;8306:2;8301:3;8297:12;8290:19;;7949:366;;;:::o;8321:118::-;8408:24;8426:5;8408:24;:::i;:::-;8403:3;8396:37;8321:118;;:::o;8445:271::-;8575:3;8597:93;8686:3;8677:6;8597:93;:::i;:::-;8590:100;;8707:3;8700:10;;8445:271;;;;:::o;8722:222::-;8815:4;8853:2;8842:9;8838:18;8830:26;;8866:71;8934:1;8923:9;8919:17;8910:6;8866:71;:::i;:::-;8722:222;;;;:::o;8950:442::-;9099:4;9137:2;9126:9;9122:18;9114:26;;9150:71;9218:1;9207:9;9203:17;9194:6;9150:71;:::i;:::-;9231:72;9299:2;9288:9;9284:18;9275:6;9231:72;:::i;:::-;9313;9381:2;9370:9;9366:18;9357:6;9313:72;:::i;:::-;8950:442;;;;;;:::o;9398:332::-;9519:4;9557:2;9546:9;9542:18;9534:26;;9570:71;9638:1;9627:9;9623:17;9614:6;9570:71;:::i;:::-;9651:72;9719:2;9708:9;9704:18;9695:6;9651:72;:::i;:::-;9398:332;;;;;:::o;9736:250::-;9843:4;9881:2;9870:9;9866:18;9858:26;;9894:85;9976:1;9965:9;9961:17;9952:6;9894:85;:::i;:::-;9736:250;;;;:::o;9992:313::-;10105:4;10143:2;10132:9;10128:18;10120:26;;10192:9;10186:4;10182:20;10178:1;10167:9;10163:17;10156:47;10220:78;10293:4;10284:6;10220:78;:::i;:::-;10212:86;;9992:313;;;;:::o;10311:419::-;10477:4;10515:2;10504:9;10500:18;10492:26;;10564:9;10558:4;10554:20;10550:1;10539:9;10535:17;10528:47;10592:131;10718:4;10592:131;:::i;:::-;10584:139;;10311:419;;;:::o;10736:::-;10902:4;10940:2;10929:9;10925:18;10917:26;;10989:9;10983:4;10979:20;10975:1;10964:9;10960:17;10953:47;11017:131;11143:4;11017:131;:::i;:::-;11009:139;;10736:419;;;:::o;11161:::-;11327:4;11365:2;11354:9;11350:18;11342:26;;11414:9;11408:4;11404:20;11400:1;11389:9;11385:17;11378:47;11442:131;11568:4;11442:131;:::i;:::-;11434:139;;11161:419;;;:::o;11586:::-;11752:4;11790:2;11779:9;11775:18;11767:26;;11839:9;11833:4;11829:20;11825:1;11814:9;11810:17;11803:47;11867:131;11993:4;11867:131;:::i;:::-;11859:139;;11586:419;;;:::o;12011:::-;12177:4;12215:2;12204:9;12200:18;12192:26;;12264:9;12258:4;12254:20;12250:1;12239:9;12235:17;12228:47;12292:131;12418:4;12292:131;:::i;:::-;12284:139;;12011:419;;;:::o;12436:::-;12602:4;12640:2;12629:9;12625:18;12617:26;;12689:9;12683:4;12679:20;12675:1;12664:9;12660:17;12653:47;12717:131;12843:4;12717:131;:::i;:::-;12709:139;;12436:419;;;:::o;12861:::-;13027:4;13065:2;13054:9;13050:18;13042:26;;13114:9;13108:4;13104:20;13100:1;13089:9;13085:17;13078:47;13142:131;13268:4;13142:131;:::i;:::-;13134:139;;12861:419;;;:::o;13286:::-;13452:4;13490:2;13479:9;13475:18;13467:26;;13539:9;13533:4;13529:20;13525:1;13514:9;13510:17;13503:47;13567:131;13693:4;13567:131;:::i;:::-;13559:139;;13286:419;;;:::o;13711:::-;13877:4;13915:2;13904:9;13900:18;13892:26;;13964:9;13958:4;13954:20;13950:1;13939:9;13935:17;13928:47;13992:131;14118:4;13992:131;:::i;:::-;13984:139;;13711:419;;;:::o;14136:::-;14302:4;14340:2;14329:9;14325:18;14317:26;;14389:9;14383:4;14379:20;14375:1;14364:9;14360:17;14353:47;14417:131;14543:4;14417:131;:::i;:::-;14409:139;;14136:419;;;:::o;14561:::-;14727:4;14765:2;14754:9;14750:18;14742:26;;14814:9;14808:4;14804:20;14800:1;14789:9;14785:17;14778:47;14842:131;14968:4;14842:131;:::i;:::-;14834:139;;14561:419;;;:::o;14986:::-;15152:4;15190:2;15179:9;15175:18;15167:26;;15239:9;15233:4;15229:20;15225:1;15214:9;15210:17;15203:47;15267:131;15393:4;15267:131;:::i;:::-;15259:139;;14986:419;;;:::o;15411:::-;15577:4;15615:2;15604:9;15600:18;15592:26;;15664:9;15658:4;15654:20;15650:1;15639:9;15635:17;15628:47;15692:131;15818:4;15692:131;:::i;:::-;15684:139;;15411:419;;;:::o;15836:222::-;15929:4;15967:2;15956:9;15952:18;15944:26;;15980:71;16048:1;16037:9;16033:17;16024:6;15980:71;:::i;:::-;15836:222;;;;:::o;16145:98::-;16196:6;16230:5;16224:12;16214:22;;16145:98;;;:::o;16249:99::-;16301:6;16335:5;16329:12;16319:22;;16249:99;;;:::o;16354:147::-;16455:11;16492:3;16477:18;;16354:147;;;;:::o;16507:169::-;16591:11;16625:6;16620:3;16613:19;16665:4;16660:3;16656:14;16641:29;;16507:169;;;;:::o;16682:305::-;16722:3;16741:20;16759:1;16741:20;:::i;:::-;16736:25;;16775:20;16793:1;16775:20;:::i;:::-;16770:25;;16929:1;16861:66;16857:74;16854:1;16851:81;16848:107;;;16935:18;;:::i;:::-;16848:107;16979:1;16976;16972:9;16965:16;;16682:305;;;;:::o;16993:185::-;17033:1;17050:20;17068:1;17050:20;:::i;:::-;17045:25;;17084:20;17102:1;17084:20;:::i;:::-;17079:25;;17123:1;17113:35;;17128:18;;:::i;:::-;17113:35;17170:1;17167;17163:9;17158:14;;16993:185;;;;:::o;17184:348::-;17224:7;17247:20;17265:1;17247:20;:::i;:::-;17242:25;;17281:20;17299:1;17281:20;:::i;:::-;17276:25;;17469:1;17401:66;17397:74;17394:1;17391:81;17386:1;17379:9;17372:17;17368:105;17365:131;;;17476:18;;:::i;:::-;17365:131;17524:1;17521;17517:9;17506:20;;17184:348;;;;:::o;17538:191::-;17578:4;17598:20;17616:1;17598:20;:::i;:::-;17593:25;;17632:20;17650:1;17632:20;:::i;:::-;17627:25;;17671:1;17668;17665:8;17662:34;;;17676:18;;:::i;:::-;17662:34;17721:1;17718;17714:9;17706:17;;17538:191;;;;:::o;17735:96::-;17772:7;17801:24;17819:5;17801:24;:::i;:::-;17790:35;;17735:96;;;:::o;17837:90::-;17871:7;17914:5;17907:13;17900:21;17889:32;;17837:90;;;:::o;17933:126::-;17970:7;18010:42;18003:5;17999:54;17988:65;;17933:126;;;:::o;18065:77::-;18102:7;18131:5;18120:16;;18065:77;;;:::o;18148:140::-;18212:9;18245:37;18276:5;18245:37;:::i;:::-;18232:50;;18148:140;;;:::o;18294:126::-;18344:9;18377:37;18408:5;18377:37;:::i;:::-;18364:50;;18294:126;;;:::o;18426:113::-;18476:9;18509:24;18527:5;18509:24;:::i;:::-;18496:37;;18426:113;;;:::o;18545:307::-;18613:1;18623:113;18637:6;18634:1;18631:13;18623:113;;;18722:1;18717:3;18713:11;18707:18;18703:1;18698:3;18694:11;18687:39;18659:2;18656:1;18652:10;18647:15;;18623:113;;;18754:6;18751:1;18748:13;18745:101;;;18834:1;18825:6;18820:3;18816:16;18809:27;18745:101;18594:258;18545:307;;;:::o;18858:176::-;18890:1;18907:20;18925:1;18907:20;:::i;:::-;18902:25;;18941:20;18959:1;18941:20;:::i;:::-;18936:25;;18980:1;18970:35;;18985:18;;:::i;:::-;18970:35;19026:1;19023;19019:9;19014:14;;18858:176;;;;:::o;19040:180::-;19088:77;19085:1;19078:88;19185:4;19182:1;19175:15;19209:4;19206:1;19199:15;19226:180;19274:77;19271:1;19264:88;19371:4;19368:1;19361:15;19395:4;19392:1;19385:15;19535:117;19644:1;19641;19634:12;19658:102;19699:6;19750:2;19746:7;19741:2;19734:5;19730:14;19726:28;19716:38;;19658:102;;;:::o;19766:166::-;19906:18;19902:1;19894:6;19890:14;19883:42;19766:166;:::o;19938:229::-;20078:34;20074:1;20066:6;20062:14;20055:58;20147:12;20142:2;20134:6;20130:15;20123:37;19938:229;:::o;20173:225::-;20313:34;20309:1;20301:6;20297:14;20290:58;20382:8;20377:2;20369:6;20365:15;20358:33;20173:225;:::o;20404:164::-;20544:16;20540:1;20532:6;20528:14;20521:40;20404:164;:::o;20574:225::-;20714:34;20710:1;20702:6;20698:14;20691:58;20783:8;20778:2;20770:6;20766:15;20759:33;20574:225;:::o;20805:::-;20945:34;20941:1;20933:6;20929:14;20922:58;21014:8;21009:2;21001:6;20997:15;20990:33;20805:225;:::o;21036:181::-;21176:33;21172:1;21164:6;21160:14;21153:57;21036:181;:::o;21223:182::-;21363:34;21359:1;21351:6;21347:14;21340:58;21223:182;:::o;21411:161::-;21551:13;21547:1;21539:6;21535:14;21528:37;21411:161;:::o;21578:179::-;21718:31;21714:1;21706:6;21702:14;21695:55;21578:179;:::o;21763:176::-;21903:28;21899:1;21891:6;21887:14;21880:52;21763:176;:::o;21945:173::-;22085:25;22081:1;22073:6;22069:14;22062:49;21945:173;:::o;22124:163::-;22264:15;22260:1;22252:6;22248:14;22241:39;22124:163;:::o;22293:122::-;22366:24;22384:5;22366:24;:::i;:::-;22359:5;22356:35;22346:63;;22405:1;22402;22395:12;22346:63;22293:122;:::o;22421:116::-;22491:21;22506:5;22491:21;:::i;:::-;22484:5;22481:32;22471:60;;22527:1;22524;22517:12;22471:60;22421:116;:::o;22543:122::-;22616:24;22634:5;22616:24;:::i;:::-;22609:5;22606:35;22596:63;;22655:1;22652;22645:12;22596:63;22543:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1938800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"harvest()": "infinite",
								"owner()": "2611",
								"remainedToNextEvent()": "infinite",
								"renounceOwnership()": "30463",
								"rewardAmount()": "2598",
								"rewardToHarvest()": "infinite",
								"setBountyWallet(address)": "infinite",
								"setEventPeriod(uint256)": "infinite",
								"setFixedAPY(uint256)": "infinite",
								"setUnstakingFeeRate(uint256)": "infinite",
								"stake(uint256,uint256)": "infinite",
								"stakedAmount()": "2578",
								"token()": "2688",
								"totalStaked()": "2474",
								"transferOwnership(address)": "30767",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Init()": "infinite",
								"calDaysFromTimestamp(uint256)": "infinite",
								"updateReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 6836,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1585,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1585,
									"end": 1589,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1585,
									"end": 1589,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1585,
									"end": 1589,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1585,
									"end": 1591,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1585,
									"end": 1591,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1585,
									"end": 1591,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1585,
									"end": 1591,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1585,
									"end": 1591,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1618,
									"end": 1632,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1615,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1602,
									"end": 1615,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1658,
									"end": 1664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1648,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1643,
									"end": 1648,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1665,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1673,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1681,
									"end": 1838,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1681,
									"end": 1838,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1732,
									"name": "PUSH",
									"source": 7,
									"value": "7D"
								},
								{
									"begin": 1717,
									"end": 1726,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1717,
									"end": 1732,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1732,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1732,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1732,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1763,
									"end": 1767,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1743,
									"end": 1767,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1767,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1767,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1767,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 1778,
									"end": 1792,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1778,
									"end": 1798,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1798,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1798,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1798,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1824,
									"end": 1830,
									"name": "PUSH",
									"source": 7,
									"value": "93A80"
								},
								{
									"begin": 1809,
									"end": 1821,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1809,
									"end": 1830,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1809,
									"end": 1830,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1809,
									"end": 1830,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1809,
									"end": 1830,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1681,
									"end": 1838,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 6836,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6efc59e49dc7e980978f294c922af4c8d26fb936a7cecb155c3fa1d54af0bf964736f6c63430008070033",
									".code": [
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "7B0472F0"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "F7B2A7BE"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "7B0472F0"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "8A9D3839"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "5D2EC65D"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "5D2EC65D"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "6413996C"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "692642E7"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "373D6132"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "4641257D"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "50F19C87"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6836,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5697,
											"end": 6300,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5697,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5697,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5697,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5697,
											"end": 6300,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5697,
											"end": 6300,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5697,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5697,
											"end": 6300,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3581,
											"end": 3602,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3612,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3623,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3581,
											"end": 3624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3581,
											"end": 3624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3655,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3637,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3720,
											"end": 3726,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3720,
											"end": 3739,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3720,
											"end": 3739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3720,
											"end": 3739,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3716,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3739,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3739,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3702,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3771,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3771,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3771,
											"end": 3785,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3771,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3850,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3835,
											"end": 3850,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3850,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3859,
											"end": 3863,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3835,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3865,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3826,
											"end": 3907,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3892,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3877,
											"end": 3892,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3892,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3901,
											"end": 3905,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 3826,
											"end": 3907,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3907,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3826,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3868,
											"end": 3874,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3907,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 3826,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4002,
											"end": 4014,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 3992,
											"end": 3998,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 3945,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3965,
											"end": 3986,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3965,
											"end": 3986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3965,
											"end": 3986,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3960,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 3945,
											"end": 3964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3987,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3987,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3945,
											"end": 3987,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3987,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3945,
											"end": 3987,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 3945,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 3945,
											"end": 3991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3999,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3999,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3945,
											"end": 3999,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3999,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3945,
											"end": 3999,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 3945,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3945,
											"end": 4014,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 4014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 3945,
											"end": 4014,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3945,
											"end": 4014,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3945,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 4019,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4027,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3918,
											"end": 4027,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 4027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4084,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 4084,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4147,
											"end": 4164,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4164,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4122,
											"end": 4141,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4100,
											"end": 4116,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4090,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4084,
											"end": 4121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4142,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4142,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4084,
											"end": 4142,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4142,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4084,
											"end": 4142,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4084,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4165,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4084,
											"end": 4165,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4165,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4084,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4084,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4084,
											"end": 4169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4174,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4174,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4084,
											"end": 4174,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4174,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4084,
											"end": 4174,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4084,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4079,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4060,
											"end": 4083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4175,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4175,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4060,
											"end": 4175,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4175,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4175,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4060,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4175,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4216,
											"end": 4235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4211,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4200,
											"end": 4211,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4200,
											"end": 4215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4236,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4200,
											"end": 4236,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4236,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4200,
											"end": 4236,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4200,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4197,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4186,
											"end": 4236,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4236,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4293,
											"end": 4312,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4275,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4288,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4269,
											"end": 4288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4288,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4269,
											"end": 4292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4313,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4269,
											"end": 4313,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4313,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4269,
											"end": 4313,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4269,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4253,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4266,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4247,
											"end": 4266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4313,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4343,
											"end": 4353,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4374,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4375,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4375,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4324,
											"end": 4375,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4375,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4324,
											"end": 4375,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4324,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "PUSH",
											"source": 7,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 4402,
											"end": 4412,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4433,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 4442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 4442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 4442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 4442,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6438,
											"end": 6445,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6446,
											"end": 6456,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6438,
											"end": 6457,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6470,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6438,
											"end": 6470,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6470,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6478,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5697,
											"end": 6300,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5697,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5743,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5743,
											"end": 5757,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5743,
											"end": 5757,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5743,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5789,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5799,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5810,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5811,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5811,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5846,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5877,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 5877,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5908,
											"end": 5922,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5908,
											"end": 5922,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5883,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5877,
											"end": 5903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5903,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5877,
											"end": 5907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5923,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5923,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5877,
											"end": 5923,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5923,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5877,
											"end": 5923,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5877,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 5877,
											"end": 5927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5934,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5877,
											"end": 5934,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5934,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5877,
											"end": 5934,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5877,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5852,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5872,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5846,
											"end": 5872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5872,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 5846,
											"end": 5876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5935,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5846,
											"end": 5935,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5935,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5846,
											"end": 5935,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5846,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5964,
											"end": 5977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5964,
											"end": 5981,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5956,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6048,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6049,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6049,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6062,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6049,
											"end": 6062,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6062,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6049,
											"end": 6062,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6033,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6030,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6013,
											"end": 6124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6109,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6094,
											"end": 6109,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6109,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6110,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6110,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6110,
											"end": 6123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6110,
											"end": 6123,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6110,
											"end": 6123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6110,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6110,
											"end": 6123,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6110,
											"end": 6123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6110,
											"end": 6123,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6110,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6110,
											"end": 6123,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6124,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6013,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6183,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6198,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6140,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6135,
											"end": 6140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6135,
											"end": 6140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6140,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6140,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6135,
											"end": 6140,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6140,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6140,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6135,
											"end": 6140,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6157,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6135,
											"end": 6157,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6135,
											"end": 6157,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6199,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6199,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6199,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6135,
											"end": 6199,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6199,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6135,
											"end": 6199,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 6135,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6240,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6210,
											"end": 6240,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6210,
											"end": 6240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6210,
											"end": 6240,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6210,
											"end": 6240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "PUSH",
											"source": 7,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 6266,
											"end": 6276,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6278,
											"end": 6291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5722,
											"end": 6300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5722,
											"end": 6300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5697,
											"end": 6300,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4544,
											"end": 4545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4545,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4523,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 4604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4591,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4582,
											"end": 4604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4604,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "PUSH",
											"source": 7,
											"value": "B8F51888A0746F534A064D0D08F74852A939D6CD181760E1CEDC7A8396D9E22F"
										},
										{
											"begin": 4634,
											"end": 4644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4645,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4653,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5577,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5577,
											"end": 5591,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5577,
											"end": 5591,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5577,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5616,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5627,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5648,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5602,
											"end": 5648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5602,
											"end": 5648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5656,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6665,
											"end": 6672,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6799,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 6799,
											"end": 6811,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6799,
											"end": 6811,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6799,
											"end": 6815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6823,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6823,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6799,
											"end": 6823,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6823,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6799,
											"end": 6823,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6799,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6760,
											"end": 6767,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6778,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6757,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6742,
											"end": 6794,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6794,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 6742,
											"end": 6794,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6742,
											"end": 6794,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6742,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6721,
											"end": 6795,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6795,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6721,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6721,
											"end": 6824,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 6721,
											"end": 6824,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6824,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6721,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6692,
											"end": 6704,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6692,
											"end": 6720,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6825,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6692,
											"end": 6825,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6825,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6692,
											"end": 6825,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6692,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6833,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4769,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4756,
											"end": 4773,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4826,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4814,
											"end": 4842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4842,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "PUSH",
											"source": 7,
											"value": "189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C"
										},
										{
											"begin": 4875,
											"end": 4888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4897,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2956,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2937,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3041,
											"end": 3048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3011,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3048,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3087,
											"end": 3101,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3087,
											"end": 3101,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3087,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3143,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3154,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3155,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3189,
											"end": 3199,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3213,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3188,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3166,
											"end": 3188,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3166,
											"end": 3188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3224,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3224,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3224,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3224,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3224,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3166,
											"end": 3224,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3224,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3224,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3166,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3281,
											"end": 3288,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3276,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3257,
											"end": 3276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3276,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3257,
											"end": 3280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3235,
											"end": 3254,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3339,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3321,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3300,
											"end": 3321,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3339,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3364,
											"end": 3369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3361,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3350,
											"end": 3361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3369,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3410,
											"end": 3417,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3405,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3394,
											"end": 3405,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3391,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3380,
											"end": 3418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3418,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "PUSH",
											"source": 7,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3451,
											"end": 3461,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3470,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2916,
											"end": 3479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3479,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1040,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5303,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 5268,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5389,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5359,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "PUSH",
											"source": 7,
											"value": "EDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87"
										},
										{
											"begin": 5423,
											"end": 5437,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5438,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5446,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5024,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5024,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4994,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5085,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5068,
											"end": 5106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5106,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "PUSH",
											"source": 7,
											"value": "150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81"
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5163,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5171,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6565,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6576,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6597,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6597,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6551,
											"end": 6597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6551,
											"end": 6597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1066,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2055,
											"end": 2797,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2055,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2138,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2150,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2204,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2182,
											"end": 2204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2204,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2179,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2204,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2239,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2161,
											"end": 2239,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2221,
											"end": 2228,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2239,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2161,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2315,
											"end": 2321,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2336,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2315,
											"end": 2336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2336,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2312,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2297,
											"end": 2336,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2297,
											"end": 2336,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2297,
											"end": 2336,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2297,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2365,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2421,
											"end": 2424,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2406,
											"end": 2415,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2406,
											"end": 2415,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2374,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2387,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2368,
											"end": 2387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2387,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2368,
											"end": 2391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2401,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2401,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2401,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2401,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2401,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2401,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2368,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2368,
											"end": 2405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2368,
											"end": 2420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2425,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2425,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2425,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2425,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2425,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2368,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2451,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2440,
											"end": 2451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2451,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2456,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2436,
											"end": 2658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2502,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2520,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2520,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2494,
											"end": 2520,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2520,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2494,
											"end": 2520,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2494,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2642,
											"end": 2645,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2547,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2587,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2601,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2622,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2622,
											"end": 2634,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2601,
											"end": 2635,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2601,
											"end": 2635,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2601,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2587,
											"end": 2600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2636,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2636,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2587,
											"end": 2636,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2636,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2587,
											"end": 2636,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2587,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2571,
											"end": 2581,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2553,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2566,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2547,
											"end": 2566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2566,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2547,
											"end": 2570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2582,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2582,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2547,
											"end": 2582,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2582,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2547,
											"end": 2582,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2547,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2547,
											"end": 2586,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2637,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2547,
											"end": 2637,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2637,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2547,
											"end": 2637,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2547,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2547,
											"end": 2641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2646,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2646,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2547,
											"end": 2646,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2646,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2547,
											"end": 2646,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2547,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2646,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2658,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2436,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2728,
											"end": 2737,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2703,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2723,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2697,
											"end": 2727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2738,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2697,
											"end": 2738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2738,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2697,
											"end": 2738,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2697,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2674,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2694,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2738,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2789,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2755,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2789,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2789,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2797,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2055,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2797,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 452,
											"end": 457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 655,
											"end": 659,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 661,
											"end": 663,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1846,
											"end": 1980,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1846,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1965,
											"end": 1971,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1953,
											"end": 1964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1946,
											"end": 1972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1946,
											"end": 1972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1980,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3085,
											"end": 3089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3070,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2094,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2277,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2529,
											"end": 2532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2559,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 2838,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2885,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3203,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 3264,
											"end": 3269,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3345,
											"end": 3348,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3403,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3441,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3712,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3707,
											"end": 3710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4002,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 4079,
											"end": 4082,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 4185,
											"end": 4188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4205,
											"end": 4217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4451,
											"end": 4454,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 4557,
											"end": 4560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4588,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 4828,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 4823,
											"end": 4826,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 4956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5195,
											"end": 5198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5332,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5325,
											"end": 5328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5487,
											"end": 5490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 5572,
											"end": 5574,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5567,
											"end": 5570,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 5673,
											"end": 5676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5702,
											"end": 5704,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5697,
											"end": 5700,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 5944,
											"end": 5946,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5939,
											"end": 5942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6069,
											"end": 6072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 6417,
											"end": 6420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6448,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6441,
											"end": 6444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6603,
											"end": 6606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 6683,
											"end": 6686,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6818,
											"end": 6820,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6813,
											"end": 6816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 6978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 7055,
											"end": 7058,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 7161,
											"end": 7164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7192,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 7432,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7557,
											"end": 7560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7719,
											"end": 7722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 7799,
											"end": 7802,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 7905,
											"end": 7908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 7937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8094,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 8277,
											"end": 8280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8297,
											"end": 8309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8321,
											"end": 8439,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 8321,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8408,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 8426,
											"end": 8431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8408,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 8408,
											"end": 8432,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8408,
											"end": 8432,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 8408,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8433,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8439,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8445,
											"end": 8716,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 8445,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8575,
											"end": 8578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 8686,
											"end": 8689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8677,
											"end": 8683,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8597,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 8597,
											"end": 8690,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8597,
											"end": 8690,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 8597,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8590,
											"end": 8690,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8590,
											"end": 8690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8707,
											"end": 8710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8710,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8445,
											"end": 8716,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8445,
											"end": 8716,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8445,
											"end": 8716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8445,
											"end": 8716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8445,
											"end": 8716,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8722,
											"end": 8944,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8722,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8815,
											"end": 8819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8853,
											"end": 8855,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8842,
											"end": 8851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8838,
											"end": 8856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8830,
											"end": 8856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8830,
											"end": 8856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 8934,
											"end": 8935,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8919,
											"end": 8936,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8910,
											"end": 8916,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 8866,
											"end": 8937,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8866,
											"end": 8937,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 8866,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8722,
											"end": 8944,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8722,
											"end": 8944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8722,
											"end": 8944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8722,
											"end": 8944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8722,
											"end": 8944,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8950,
											"end": 9392,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 8950,
											"end": 9392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9099,
											"end": 9103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9137,
											"end": 9139,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9126,
											"end": 9135,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9122,
											"end": 9140,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9114,
											"end": 9140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9114,
											"end": 9140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9150,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 9218,
											"end": 9219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9207,
											"end": 9216,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9203,
											"end": 9220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9194,
											"end": 9200,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9150,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 9150,
											"end": 9221,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9150,
											"end": 9221,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 9150,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 9299,
											"end": 9301,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9288,
											"end": 9297,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9284,
											"end": 9302,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 9231,
											"end": 9303,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9231,
											"end": 9303,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 9231,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9313,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 9381,
											"end": 9383,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9370,
											"end": 9379,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9366,
											"end": 9384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9357,
											"end": 9363,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9313,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 9313,
											"end": 9385,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9313,
											"end": 9385,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 9313,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 9392,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 9392,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 9392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 9392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 9392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 9392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 9392,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9398,
											"end": 9730,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 9398,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9519,
											"end": 9523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9557,
											"end": 9559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9546,
											"end": 9555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9542,
											"end": 9560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9534,
											"end": 9560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9534,
											"end": 9560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9570,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 9638,
											"end": 9639,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9614,
											"end": 9620,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9570,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 9570,
											"end": 9641,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9570,
											"end": 9641,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 9570,
											"end": 9641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9651,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 9719,
											"end": 9721,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9708,
											"end": 9717,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9701,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9651,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 9651,
											"end": 9723,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9651,
											"end": 9723,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 9651,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9398,
											"end": 9730,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9398,
											"end": 9730,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9398,
											"end": 9730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9398,
											"end": 9730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9398,
											"end": 9730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9398,
											"end": 9730,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9736,
											"end": 9986,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 9736,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9843,
											"end": 9847,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9881,
											"end": 9883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9870,
											"end": 9879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9858,
											"end": 9884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9858,
											"end": 9884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9894,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 9976,
											"end": 9977,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 9974,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9961,
											"end": 9978,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9952,
											"end": 9958,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9894,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 9894,
											"end": 9979,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9894,
											"end": 9979,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 9894,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9736,
											"end": 9986,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9736,
											"end": 9986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9736,
											"end": 9986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9736,
											"end": 9986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9736,
											"end": 9986,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9992,
											"end": 10305,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 9992,
											"end": 10305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10105,
											"end": 10109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10145,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10132,
											"end": 10141,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10146,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10120,
											"end": 10146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10120,
											"end": 10146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10192,
											"end": 10201,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10186,
											"end": 10190,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10182,
											"end": 10202,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10167,
											"end": 10176,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10180,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10156,
											"end": 10203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10220,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 10293,
											"end": 10297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10284,
											"end": 10290,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10220,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 10220,
											"end": 10298,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10220,
											"end": 10298,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 10220,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10212,
											"end": 10298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10212,
											"end": 10298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9992,
											"end": 10305,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9992,
											"end": 10305,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9992,
											"end": 10305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9992,
											"end": 10305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9992,
											"end": 10305,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10311,
											"end": 10730,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 10311,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10515,
											"end": 10517,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10504,
											"end": 10513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10492,
											"end": 10518,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10492,
											"end": 10518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10564,
											"end": 10573,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10558,
											"end": 10562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10554,
											"end": 10574,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10550,
											"end": 10551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10539,
											"end": 10548,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10535,
											"end": 10552,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10575,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 10718,
											"end": 10722,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 10592,
											"end": 10723,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10592,
											"end": 10723,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 10592,
											"end": 10723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10584,
											"end": 10723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10584,
											"end": 10723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10311,
											"end": 10730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10311,
											"end": 10730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10311,
											"end": 10730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10311,
											"end": 10730,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10902,
											"end": 10906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 10942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10929,
											"end": 10938,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10917,
											"end": 10943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10917,
											"end": 10943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10989,
											"end": 10998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10983,
											"end": 10987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10979,
											"end": 10999,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10975,
											"end": 10976,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10964,
											"end": 10973,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 11143,
											"end": 11147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11009,
											"end": 11148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11009,
											"end": 11148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11161,
											"end": 11580,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 11161,
											"end": 11580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11327,
											"end": 11331,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11365,
											"end": 11367,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11354,
											"end": 11363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11350,
											"end": 11368,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11342,
											"end": 11368,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11342,
											"end": 11368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11414,
											"end": 11423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11408,
											"end": 11412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11404,
											"end": 11424,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11400,
											"end": 11401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11389,
											"end": 11398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11385,
											"end": 11402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11425,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11442,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 11568,
											"end": 11572,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11442,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 11442,
											"end": 11573,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11442,
											"end": 11573,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 11442,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11434,
											"end": 11573,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11434,
											"end": 11573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11161,
											"end": 11580,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11161,
											"end": 11580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11161,
											"end": 11580,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11161,
											"end": 11580,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11586,
											"end": 12005,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11586,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11752,
											"end": 11756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11790,
											"end": 11792,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11779,
											"end": 11788,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11775,
											"end": 11793,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11767,
											"end": 11793,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11767,
											"end": 11793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11839,
											"end": 11848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11833,
											"end": 11837,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11829,
											"end": 11849,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11825,
											"end": 11826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11814,
											"end": 11823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11810,
											"end": 11827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11803,
											"end": 11850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11867,
											"end": 11998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 11993,
											"end": 11997,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11867,
											"end": 11998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 11867,
											"end": 11998,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11867,
											"end": 11998,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 11867,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11859,
											"end": 11998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11859,
											"end": 11998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11586,
											"end": 12005,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11586,
											"end": 12005,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11586,
											"end": 12005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11586,
											"end": 12005,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12011,
											"end": 12430,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 12011,
											"end": 12430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12177,
											"end": 12181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12215,
											"end": 12217,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12204,
											"end": 12213,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12200,
											"end": 12218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12192,
											"end": 12218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12192,
											"end": 12218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 12262,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12254,
											"end": 12274,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12250,
											"end": 12251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12248,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12235,
											"end": 12252,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12228,
											"end": 12275,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12292,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 12418,
											"end": 12422,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12292,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 12292,
											"end": 12423,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12292,
											"end": 12423,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 12292,
											"end": 12423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12284,
											"end": 12423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12284,
											"end": 12423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12011,
											"end": 12430,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12011,
											"end": 12430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12011,
											"end": 12430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12011,
											"end": 12430,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12436,
											"end": 12855,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 12436,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12602,
											"end": 12606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12640,
											"end": 12642,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12629,
											"end": 12638,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12625,
											"end": 12643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12617,
											"end": 12643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12617,
											"end": 12643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12689,
											"end": 12698,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12683,
											"end": 12687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12679,
											"end": 12699,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12675,
											"end": 12676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12664,
											"end": 12673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12653,
											"end": 12700,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12717,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 12843,
											"end": 12847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12717,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 12717,
											"end": 12848,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12717,
											"end": 12848,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 12717,
											"end": 12848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12709,
											"end": 12848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12709,
											"end": 12848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12436,
											"end": 12855,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12436,
											"end": 12855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12436,
											"end": 12855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12436,
											"end": 12855,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12861,
											"end": 13280,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 12861,
											"end": 13280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13027,
											"end": 13031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13065,
											"end": 13067,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13054,
											"end": 13063,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13050,
											"end": 13068,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13042,
											"end": 13068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13042,
											"end": 13068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13114,
											"end": 13123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13108,
											"end": 13112,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13104,
											"end": 13124,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13100,
											"end": 13101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13098,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13085,
											"end": 13102,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13078,
											"end": 13125,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13142,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 13268,
											"end": 13272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13142,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 13142,
											"end": 13273,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13142,
											"end": 13273,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 13142,
											"end": 13273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13273,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13273,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12861,
											"end": 13280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12861,
											"end": 13280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12861,
											"end": 13280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12861,
											"end": 13280,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13286,
											"end": 13705,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 13286,
											"end": 13705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13452,
											"end": 13456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13490,
											"end": 13492,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13479,
											"end": 13488,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13475,
											"end": 13493,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13467,
											"end": 13493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13467,
											"end": 13493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13539,
											"end": 13548,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13533,
											"end": 13537,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13529,
											"end": 13549,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13525,
											"end": 13526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13514,
											"end": 13523,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13510,
											"end": 13527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13503,
											"end": 13550,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13567,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 13693,
											"end": 13697,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13567,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 13567,
											"end": 13698,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13567,
											"end": 13698,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 13567,
											"end": 13698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13559,
											"end": 13698,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13559,
											"end": 13698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13286,
											"end": 13705,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13286,
											"end": 13705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13286,
											"end": 13705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13286,
											"end": 13705,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13711,
											"end": 14130,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 13711,
											"end": 14130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13877,
											"end": 13881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13915,
											"end": 13917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13904,
											"end": 13913,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13900,
											"end": 13918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13892,
											"end": 13918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13892,
											"end": 13918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13964,
											"end": 13973,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13958,
											"end": 13962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13954,
											"end": 13974,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13950,
											"end": 13951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13939,
											"end": 13948,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13935,
											"end": 13952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13928,
											"end": 13975,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13992,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 14118,
											"end": 14122,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13992,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 13992,
											"end": 14123,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13992,
											"end": 14123,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 13992,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13984,
											"end": 14123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13984,
											"end": 14123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13711,
											"end": 14130,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13711,
											"end": 14130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13711,
											"end": 14130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13711,
											"end": 14130,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14136,
											"end": 14555,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 14136,
											"end": 14555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14302,
											"end": 14306,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14340,
											"end": 14342,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14329,
											"end": 14338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14325,
											"end": 14343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14317,
											"end": 14343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14317,
											"end": 14343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14389,
											"end": 14398,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14383,
											"end": 14387,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14379,
											"end": 14399,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14375,
											"end": 14376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14364,
											"end": 14373,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14360,
											"end": 14377,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14353,
											"end": 14400,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14417,
											"end": 14548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 14543,
											"end": 14547,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14417,
											"end": 14548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 14417,
											"end": 14548,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14417,
											"end": 14548,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 14417,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14409,
											"end": 14548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14409,
											"end": 14548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14136,
											"end": 14555,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14136,
											"end": 14555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14136,
											"end": 14555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14136,
											"end": 14555,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14561,
											"end": 14980,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 14561,
											"end": 14980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14727,
											"end": 14731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14765,
											"end": 14767,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14754,
											"end": 14763,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14750,
											"end": 14768,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14742,
											"end": 14768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14742,
											"end": 14768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14814,
											"end": 14823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14808,
											"end": 14812,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14804,
											"end": 14824,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14800,
											"end": 14801,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14789,
											"end": 14798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14785,
											"end": 14802,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14778,
											"end": 14825,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14842,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 14968,
											"end": 14972,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14842,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 14842,
											"end": 14973,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14842,
											"end": 14973,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 14842,
											"end": 14973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14834,
											"end": 14973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14834,
											"end": 14973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14561,
											"end": 14980,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14561,
											"end": 14980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14561,
											"end": 14980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14561,
											"end": 14980,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14986,
											"end": 15405,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 14986,
											"end": 15405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15152,
											"end": 15156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15190,
											"end": 15192,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15179,
											"end": 15188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15175,
											"end": 15193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15167,
											"end": 15193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15167,
											"end": 15193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15239,
											"end": 15248,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15233,
											"end": 15237,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15229,
											"end": 15249,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15225,
											"end": 15226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15214,
											"end": 15223,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15210,
											"end": 15227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15203,
											"end": 15250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15267,
											"end": 15398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 15393,
											"end": 15397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15267,
											"end": 15398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 15267,
											"end": 15398,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15267,
											"end": 15398,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 15267,
											"end": 15398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15259,
											"end": 15398,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15259,
											"end": 15398,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14986,
											"end": 15405,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14986,
											"end": 15405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14986,
											"end": 15405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14986,
											"end": 15405,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15411,
											"end": 15830,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 15411,
											"end": 15830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15577,
											"end": 15581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15615,
											"end": 15617,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15604,
											"end": 15613,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15600,
											"end": 15618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15592,
											"end": 15618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15592,
											"end": 15618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15664,
											"end": 15673,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15658,
											"end": 15662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15650,
											"end": 15651,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15639,
											"end": 15648,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15635,
											"end": 15652,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15628,
											"end": 15675,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15692,
											"end": 15823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 15818,
											"end": 15822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15692,
											"end": 15823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 15692,
											"end": 15823,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15692,
											"end": 15823,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 15692,
											"end": 15823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 15823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 15823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15411,
											"end": 15830,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15411,
											"end": 15830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15411,
											"end": 15830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15411,
											"end": 15830,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15836,
											"end": 16058,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 15836,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15929,
											"end": 15933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15967,
											"end": 15969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15956,
											"end": 15965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15952,
											"end": 15970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15944,
											"end": 15970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15944,
											"end": 15970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15980,
											"end": 16051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 16048,
											"end": 16049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16033,
											"end": 16050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16024,
											"end": 16030,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15980,
											"end": 16051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 15980,
											"end": 16051,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15980,
											"end": 16051,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 15980,
											"end": 16051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15836,
											"end": 16058,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15836,
											"end": 16058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15836,
											"end": 16058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15836,
											"end": 16058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15836,
											"end": 16058,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16145,
											"end": 16243,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 16145,
											"end": 16243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16196,
											"end": 16202,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16230,
											"end": 16235,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16224,
											"end": 16236,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16214,
											"end": 16236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16214,
											"end": 16236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16145,
											"end": 16243,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16249,
											"end": 16348,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 16249,
											"end": 16348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16301,
											"end": 16307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16335,
											"end": 16340,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16329,
											"end": 16341,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16319,
											"end": 16341,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16319,
											"end": 16341,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16249,
											"end": 16348,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16249,
											"end": 16348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16249,
											"end": 16348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16249,
											"end": 16348,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16354,
											"end": 16501,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 16354,
											"end": 16501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16455,
											"end": 16466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16492,
											"end": 16495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16477,
											"end": 16495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16477,
											"end": 16495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16354,
											"end": 16501,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16354,
											"end": 16501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16354,
											"end": 16501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16354,
											"end": 16501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16354,
											"end": 16501,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16507,
											"end": 16676,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 16507,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16591,
											"end": 16602,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16625,
											"end": 16631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16620,
											"end": 16623,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16613,
											"end": 16632,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16665,
											"end": 16669,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16660,
											"end": 16663,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16656,
											"end": 16670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16641,
											"end": 16670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16641,
											"end": 16670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16507,
											"end": 16676,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16507,
											"end": 16676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16507,
											"end": 16676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16507,
											"end": 16676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16507,
											"end": 16676,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16682,
											"end": 16987,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 16682,
											"end": 16987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16722,
											"end": 16725,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 16759,
											"end": 16760,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16736,
											"end": 16761,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16736,
											"end": 16761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16775,
											"end": 16795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 16793,
											"end": 16794,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16775,
											"end": 16795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16775,
											"end": 16795,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16775,
											"end": 16795,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 16775,
											"end": 16795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16770,
											"end": 16795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16770,
											"end": 16795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16929,
											"end": 16930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16861,
											"end": 16927,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16857,
											"end": 16931,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16854,
											"end": 16855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16851,
											"end": 16932,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16848,
											"end": 16955,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16848,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 16848,
											"end": 16955,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16935,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 16935,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 16935,
											"end": 16953,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16935,
											"end": 16953,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 16935,
											"end": 16953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16848,
											"end": 16955,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 16848,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16979,
											"end": 16980,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16976,
											"end": 16977,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16972,
											"end": 16981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16965,
											"end": 16981,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16965,
											"end": 16981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16682,
											"end": 16987,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16682,
											"end": 16987,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16682,
											"end": 16987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16682,
											"end": 16987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16682,
											"end": 16987,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16993,
											"end": 17178,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 16993,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17033,
											"end": 17034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17050,
											"end": 17070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 17068,
											"end": 17069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17050,
											"end": 17070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 17050,
											"end": 17070,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17050,
											"end": 17070,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 17050,
											"end": 17070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17045,
											"end": 17070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17045,
											"end": 17070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17084,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 17102,
											"end": 17103,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17084,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 17084,
											"end": 17104,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17084,
											"end": 17104,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 17084,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17079,
											"end": 17104,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17079,
											"end": 17104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17123,
											"end": 17124,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17113,
											"end": 17148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 17113,
											"end": 17148,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17128,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 17128,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 17128,
											"end": 17146,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17128,
											"end": 17146,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 17128,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17113,
											"end": 17148,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 17113,
											"end": 17148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17170,
											"end": 17171,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17167,
											"end": 17168,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17163,
											"end": 17172,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 17158,
											"end": 17172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17158,
											"end": 17172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16993,
											"end": 17178,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16993,
											"end": 17178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16993,
											"end": 17178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16993,
											"end": 17178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16993,
											"end": 17178,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17184,
											"end": 17532,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 17184,
											"end": 17532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17224,
											"end": 17231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17247,
											"end": 17267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 17265,
											"end": 17266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17247,
											"end": 17267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 17247,
											"end": 17267,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17247,
											"end": 17267,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 17247,
											"end": 17267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17242,
											"end": 17267,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17242,
											"end": 17267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17281,
											"end": 17301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 17299,
											"end": 17300,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17281,
											"end": 17301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 17281,
											"end": 17301,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17281,
											"end": 17301,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 17281,
											"end": 17301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17276,
											"end": 17301,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17276,
											"end": 17301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17469,
											"end": 17470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17401,
											"end": 17467,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17397,
											"end": 17471,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 17394,
											"end": 17395,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17391,
											"end": 17472,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17386,
											"end": 17387,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17379,
											"end": 17388,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17372,
											"end": 17389,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17368,
											"end": 17473,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17365,
											"end": 17496,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17365,
											"end": 17496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 17365,
											"end": 17496,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17476,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 17476,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 17476,
											"end": 17494,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17476,
											"end": 17494,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 17476,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17365,
											"end": 17496,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 17365,
											"end": 17496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17524,
											"end": 17525,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17521,
											"end": 17522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17517,
											"end": 17526,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17506,
											"end": 17526,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17506,
											"end": 17526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17532,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17532,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17532,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17532,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17532,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17538,
											"end": 17729,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 17538,
											"end": 17729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17578,
											"end": 17582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17598,
											"end": 17618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 17616,
											"end": 17617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17598,
											"end": 17618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 17598,
											"end": 17618,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17598,
											"end": 17618,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 17598,
											"end": 17618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17593,
											"end": 17618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17593,
											"end": 17618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 17650,
											"end": 17651,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 17632,
											"end": 17652,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17632,
											"end": 17652,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 17632,
											"end": 17652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17627,
											"end": 17652,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17627,
											"end": 17652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17671,
											"end": 17672,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17668,
											"end": 17669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17665,
											"end": 17673,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17662,
											"end": 17696,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17662,
											"end": 17696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 17662,
											"end": 17696,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17676,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 17676,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 17676,
											"end": 17694,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17676,
											"end": 17694,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 17676,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17662,
											"end": 17696,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 17662,
											"end": 17696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17721,
											"end": 17722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17718,
											"end": 17719,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17714,
											"end": 17723,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17706,
											"end": 17723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17706,
											"end": 17723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17538,
											"end": 17729,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17538,
											"end": 17729,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17538,
											"end": 17729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17538,
											"end": 17729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17538,
											"end": 17729,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17735,
											"end": 17831,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 17735,
											"end": 17831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17772,
											"end": 17779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17801,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 17819,
											"end": 17824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17801,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 17801,
											"end": 17825,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17801,
											"end": 17825,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 17801,
											"end": 17825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17790,
											"end": 17825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17790,
											"end": 17825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17735,
											"end": 17831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17735,
											"end": 17831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17735,
											"end": 17831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17735,
											"end": 17831,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17837,
											"end": 17927,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 17837,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17871,
											"end": 17878,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17914,
											"end": 17919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17907,
											"end": 17920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17900,
											"end": 17921,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17889,
											"end": 17921,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17889,
											"end": 17921,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17837,
											"end": 17927,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17837,
											"end": 17927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17837,
											"end": 17927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17837,
											"end": 17927,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17933,
											"end": 18059,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 17933,
											"end": 18059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17970,
											"end": 17977,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18010,
											"end": 18052,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18003,
											"end": 18008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17999,
											"end": 18053,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17988,
											"end": 18053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17988,
											"end": 18053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17933,
											"end": 18059,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17933,
											"end": 18059,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17933,
											"end": 18059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17933,
											"end": 18059,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18065,
											"end": 18142,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 18065,
											"end": 18142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18102,
											"end": 18109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18131,
											"end": 18136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18120,
											"end": 18136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18120,
											"end": 18136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18065,
											"end": 18142,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18065,
											"end": 18142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18065,
											"end": 18142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18065,
											"end": 18142,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18148,
											"end": 18288,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 18148,
											"end": 18288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18212,
											"end": 18221,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18245,
											"end": 18282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 18276,
											"end": 18281,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18245,
											"end": 18282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 18245,
											"end": 18282,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18245,
											"end": 18282,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 18245,
											"end": 18282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18232,
											"end": 18282,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18232,
											"end": 18282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18148,
											"end": 18288,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18148,
											"end": 18288,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18148,
											"end": 18288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18148,
											"end": 18288,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18294,
											"end": 18420,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 18294,
											"end": 18420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18344,
											"end": 18353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18377,
											"end": 18414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 18408,
											"end": 18413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18377,
											"end": 18414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 18377,
											"end": 18414,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18377,
											"end": 18414,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 18377,
											"end": 18414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18364,
											"end": 18414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18364,
											"end": 18414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18294,
											"end": 18420,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18294,
											"end": 18420,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18294,
											"end": 18420,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18294,
											"end": 18420,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18426,
											"end": 18539,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 18426,
											"end": 18539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18476,
											"end": 18485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18509,
											"end": 18533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 18527,
											"end": 18532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18509,
											"end": 18533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 18509,
											"end": 18533,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18509,
											"end": 18533,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 18509,
											"end": 18533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18496,
											"end": 18533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18496,
											"end": 18533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18426,
											"end": 18539,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18426,
											"end": 18539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18426,
											"end": 18539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18426,
											"end": 18539,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18545,
											"end": 18852,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 18545,
											"end": 18852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18613,
											"end": 18614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18623,
											"end": 18736,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 18623,
											"end": 18736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18637,
											"end": 18643,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18634,
											"end": 18635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18631,
											"end": 18644,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18623,
											"end": 18736,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18623,
											"end": 18736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 18623,
											"end": 18736,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18722,
											"end": 18723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18717,
											"end": 18720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18713,
											"end": 18724,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18707,
											"end": 18725,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18703,
											"end": 18704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18698,
											"end": 18701,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18694,
											"end": 18705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18687,
											"end": 18726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18659,
											"end": 18661,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18656,
											"end": 18657,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18652,
											"end": 18662,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18647,
											"end": 18662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18647,
											"end": 18662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18623,
											"end": 18736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 18623,
											"end": 18736,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18623,
											"end": 18736,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 18623,
											"end": 18736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18754,
											"end": 18760,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18751,
											"end": 18752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18748,
											"end": 18761,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 18745,
											"end": 18846,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18834,
											"end": 18835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18825,
											"end": 18831,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18820,
											"end": 18823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18816,
											"end": 18832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18809,
											"end": 18836,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18846,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 18745,
											"end": 18846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18594,
											"end": 18852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18545,
											"end": 18852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18545,
											"end": 18852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18545,
											"end": 18852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18545,
											"end": 18852,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18858,
											"end": 19034,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 18858,
											"end": 19034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18890,
											"end": 18891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18907,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 18925,
											"end": 18926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18907,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 18907,
											"end": 18927,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18907,
											"end": 18927,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 18907,
											"end": 18927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18902,
											"end": 18927,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18902,
											"end": 18927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18941,
											"end": 18961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 18959,
											"end": 18960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18941,
											"end": 18961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 18941,
											"end": 18961,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18941,
											"end": 18961,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 18941,
											"end": 18961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18936,
											"end": 18961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18936,
											"end": 18961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18980,
											"end": 18981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18970,
											"end": 19005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 18970,
											"end": 19005,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18985,
											"end": 19003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 18985,
											"end": 19003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 18985,
											"end": 19003,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18985,
											"end": 19003,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 18985,
											"end": 19003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18970,
											"end": 19005,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 18970,
											"end": 19005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19026,
											"end": 19027,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19023,
											"end": 19024,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19019,
											"end": 19028,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 19014,
											"end": 19028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19014,
											"end": 19028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18858,
											"end": 19034,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18858,
											"end": 19034,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18858,
											"end": 19034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18858,
											"end": 19034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18858,
											"end": 19034,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19040,
											"end": 19220,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 19040,
											"end": 19220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19088,
											"end": 19165,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19085,
											"end": 19086,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19078,
											"end": 19166,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19185,
											"end": 19189,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 19182,
											"end": 19183,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19175,
											"end": 19190,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19209,
											"end": 19213,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 19206,
											"end": 19207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19199,
											"end": 19214,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 19226,
											"end": 19406,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 19226,
											"end": 19406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19274,
											"end": 19351,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19271,
											"end": 19272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19264,
											"end": 19352,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19371,
											"end": 19375,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 19368,
											"end": 19369,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19361,
											"end": 19376,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19395,
											"end": 19399,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 19392,
											"end": 19393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19385,
											"end": 19400,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 19535,
											"end": 19652,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 19535,
											"end": 19652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19644,
											"end": 19645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19641,
											"end": 19642,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19634,
											"end": 19646,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 19658,
											"end": 19760,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 19658,
											"end": 19760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19699,
											"end": 19705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19750,
											"end": 19752,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 19746,
											"end": 19753,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 19741,
											"end": 19743,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 19734,
											"end": 19739,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19730,
											"end": 19744,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19726,
											"end": 19754,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19716,
											"end": 19754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19716,
											"end": 19754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19658,
											"end": 19760,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19658,
											"end": 19760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19658,
											"end": 19760,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19658,
											"end": 19760,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19766,
											"end": 19932,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 19766,
											"end": 19932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19906,
											"end": 19924,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 19902,
											"end": 19903,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19894,
											"end": 19900,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19890,
											"end": 19904,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19883,
											"end": 19925,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19766,
											"end": 19932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19766,
											"end": 19932,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19938,
											"end": 20167,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 19938,
											"end": 20167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20078,
											"end": 20112,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 20074,
											"end": 20075,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20066,
											"end": 20072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20062,
											"end": 20076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20055,
											"end": 20113,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20147,
											"end": 20159,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 20142,
											"end": 20144,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20134,
											"end": 20140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20130,
											"end": 20145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20123,
											"end": 20160,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19938,
											"end": 20167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19938,
											"end": 20167,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20173,
											"end": 20398,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 20173,
											"end": 20398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20313,
											"end": 20347,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 20309,
											"end": 20310,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20301,
											"end": 20307,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20297,
											"end": 20311,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20290,
											"end": 20348,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20382,
											"end": 20390,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20377,
											"end": 20379,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20369,
											"end": 20375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20365,
											"end": 20380,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20358,
											"end": 20391,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20173,
											"end": 20398,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20173,
											"end": 20398,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20404,
											"end": 20568,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 20404,
											"end": 20568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20544,
											"end": 20560,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 20540,
											"end": 20541,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20532,
											"end": 20538,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20528,
											"end": 20542,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20521,
											"end": 20561,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20404,
											"end": 20568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20404,
											"end": 20568,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20574,
											"end": 20799,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 20574,
											"end": 20799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20714,
											"end": 20748,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 20710,
											"end": 20711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20702,
											"end": 20708,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20698,
											"end": 20712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20691,
											"end": 20749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20783,
											"end": 20791,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20778,
											"end": 20780,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20770,
											"end": 20776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20766,
											"end": 20781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20759,
											"end": 20792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20574,
											"end": 20799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20574,
											"end": 20799,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20805,
											"end": 21030,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 20805,
											"end": 21030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20945,
											"end": 20979,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420416464726573732E20416464726573732063616E27742062"
										},
										{
											"begin": 20941,
											"end": 20942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20933,
											"end": 20939,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20929,
											"end": 20943,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20922,
											"end": 20980,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21014,
											"end": 21022,
											"name": "PUSH",
											"source": 8,
											"value": "65207A65726F0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21009,
											"end": 21011,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21001,
											"end": 21007,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20997,
											"end": 21012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20990,
											"end": 21023,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20805,
											"end": 21030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20805,
											"end": 21030,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21036,
											"end": 21217,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 21036,
											"end": 21217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21176,
											"end": 21209,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 21172,
											"end": 21173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21164,
											"end": 21170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21160,
											"end": 21174,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21153,
											"end": 21210,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21036,
											"end": 21217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21036,
											"end": 21217,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21223,
											"end": 21405,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 21223,
											"end": 21405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21363,
											"end": 21397,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 21359,
											"end": 21360,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21351,
											"end": 21357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21347,
											"end": 21361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21340,
											"end": 21398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21223,
											"end": 21405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21223,
											"end": 21405,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21411,
											"end": 21572,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 21411,
											"end": 21572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21551,
											"end": 21564,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420415059000000000000000000000000000000000000000000"
										},
										{
											"begin": 21547,
											"end": 21548,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21539,
											"end": 21545,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21535,
											"end": 21549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21528,
											"end": 21565,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21411,
											"end": 21572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21411,
											"end": 21572,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21578,
											"end": 21757,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 21578,
											"end": 21757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21718,
											"end": 21749,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 21714,
											"end": 21715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21706,
											"end": 21712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21702,
											"end": 21716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21695,
											"end": 21750,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21578,
											"end": 21757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21578,
											"end": 21757,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21763,
											"end": 21939,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 21763,
											"end": 21939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21903,
											"end": 21931,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420556E7374616B696E67204665652052617465000000000000"
										},
										{
											"begin": 21899,
											"end": 21900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21891,
											"end": 21897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21887,
											"end": 21901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21880,
											"end": 21932,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21763,
											"end": 21939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21763,
											"end": 21939,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21945,
											"end": 22118,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 21945,
											"end": 22118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22085,
											"end": 22110,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204C6F636B7570204475726174696F6E000000000000000000"
										},
										{
											"begin": 22081,
											"end": 22082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22073,
											"end": 22079,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22069,
											"end": 22083,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22062,
											"end": 22111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21945,
											"end": 22118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21945,
											"end": 22118,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22124,
											"end": 22287,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 22124,
											"end": 22287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22264,
											"end": 22279,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742100000000000000000000000000000000000000"
										},
										{
											"begin": 22260,
											"end": 22261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22252,
											"end": 22258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22248,
											"end": 22262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22241,
											"end": 22280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22124,
											"end": 22287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22124,
											"end": 22287,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22293,
											"end": 22415,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 22293,
											"end": 22415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22366,
											"end": 22390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 22384,
											"end": 22389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22366,
											"end": 22390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 22366,
											"end": 22390,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22366,
											"end": 22390,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 22366,
											"end": 22390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22359,
											"end": 22364,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22356,
											"end": 22391,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 22346,
											"end": 22409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 22346,
											"end": 22409,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22405,
											"end": 22406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22402,
											"end": 22403,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22395,
											"end": 22407,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22346,
											"end": 22409,
											"name": "tag",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 22346,
											"end": 22409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22293,
											"end": 22415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22293,
											"end": 22415,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22421,
											"end": 22537,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 22421,
											"end": 22537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22491,
											"end": 22512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 22506,
											"end": 22511,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22491,
											"end": 22512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 22491,
											"end": 22512,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22491,
											"end": 22512,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 22491,
											"end": 22512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22484,
											"end": 22489,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22481,
											"end": 22513,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 22471,
											"end": 22531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 22471,
											"end": 22531,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22527,
											"end": 22528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22524,
											"end": 22525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22517,
											"end": 22529,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22471,
											"end": 22531,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 22471,
											"end": 22531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22421,
											"end": 22537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22421,
											"end": 22537,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22543,
											"end": 22665,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 22543,
											"end": 22665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22616,
											"end": 22640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 22634,
											"end": 22639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22616,
											"end": 22640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 22616,
											"end": 22640,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22616,
											"end": 22640,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 22616,
											"end": 22640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22609,
											"end": 22614,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22606,
											"end": 22641,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 22596,
											"end": 22659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 22596,
											"end": 22659,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22655,
											"end": 22656,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22652,
											"end": 22653,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22645,
											"end": 22657,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22596,
											"end": 22659,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 22596,
											"end": 22659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22543,
											"end": 22665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22543,
											"end": 22665,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"harvest()": "4641257d",
							"owner()": "8da5cb5b",
							"remainedToNextEvent()": "6413996c",
							"renounceOwnership()": "715018a6",
							"rewardAmount()": "f7b2a7be",
							"rewardToHarvest()": "5d2ec65d",
							"setBountyWallet(address)": "8a9d3839",
							"setEventPeriod(uint256)": "692642e7",
							"setFixedAPY(uint256)": "50f19c87",
							"setUnstakingFeeRate(uint256)": "91e07e7a",
							"stake(uint256,uint256)": "7b0472f0",
							"stakedAmount()": "373d6132",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"__bountyWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardToClaim\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bountyWallet\",\"type\":\"address\"}],\"name\":\"SetBountyWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupDuration\",\"type\":\"uint256\"}],\"name\":\"SetEventPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fixedAPY\",\"type\":\"uint256\"}],\"name\":\"SetFixedAPY\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"SetUnstakingFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainedToNextEvent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__bountyWallet\",\"type\":\"address\"}],\"name\":\"setBountyWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__eventPeriod\",\"type\":\"uint256\"}],\"name\":\"setEventPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__fixedAPY\",\"type\":\"uint256\"}],\"name\":\"setFixedAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"setUnstakingFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakingPlatform\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0x0653ee95a62f6e3c01025bdd2cae172f1e8a6a03d7683ff8bc0b7e87a7e25c97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a2e9514d49d0939a928d4abe9c38993b77466884d5da8fe8e93b068cd20017d\",\"dweb:/ipfs/QmdqDsJqqbsKDYfxD3HzE9nNFQnx1oGF9c8HENpBvc33Ff\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							499
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 500,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								499
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 182,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 182,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 182,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 182,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 182,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 182,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 172,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 181,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 193,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 198,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 477,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 211,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													220,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 221,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 477,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 244,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															271
														],
														"referencedDeclaration": 271,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 477,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 269,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 477,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 283,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 289,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 477,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 318,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 317,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													324,
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 323,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 325,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 327,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 337,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 334,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 304,
												"id": 339,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 477,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 351,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															358,
															393
														],
														"referencedDeclaration": 393,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 356,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 477,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 371,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													378,
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 388,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 391,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 477,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 403,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															445
														],
														"referencedDeclaration": 445,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 477,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 424,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 423,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 440,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 441,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 438,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 443,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 477,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 477,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							499
						]
					},
					"id": 500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 484,
												"id": 487,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 499,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 493,
												"id": 496,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 499,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 500,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							811
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "SafeMath",
							"nameLocation": "475:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															515
														],
														"declarations": [
															{
																"constant": false,
																"id": 515,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 532,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 519,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 513,
															"id": 526,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 529,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 530,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 513,
														"id": 531,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 811,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 545,
															"id": 552,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 545,
														"id": 559,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 811,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 602,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 581,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 580,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 602,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 585,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 588,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 589,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 597,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 596,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 599,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 573,
														"id": 601,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 811,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 630,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 615,
															"id": 622,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 625,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 626,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 615,
														"id": 629,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 811,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 658,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 643,
															"id": 650,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 654,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 656,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 643,
														"id": 657,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 811,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 673,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 811,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 686,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 811,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 703,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 811,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 718,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 811,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 733,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 811,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 749,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 751,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 747,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 746,
														"id": 757,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 811,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 776,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 772,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 778,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 771,
														"id": 782,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 811,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 801,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 797,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 803,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 796,
														"id": 807,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 811,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 812,
							"src": "467:6301:4",
							"usedErrors": []
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							912
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "IBEP20",
							"nameLocation": "72:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "86:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "169:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "206:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:5"
									},
									"scope": 912,
									"src": "160:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "223:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "291:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "325:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:7:5"
									},
									"scope": 912,
									"src": "282:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "340:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "406:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "438:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:15:5"
									},
									"scope": 912,
									"src": "397:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "461:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "525:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "555:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:5"
									},
									"scope": 912,
									"src": "516:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "578:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "647:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "681:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:9:5"
									},
									"scope": 912,
									"src": "638:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "698:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "787:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "805:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "797:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:17:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "837:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:9:5"
									},
									"scope": 912,
									"src": "778:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "854:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1084:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1101:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1093:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1120:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1112:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:35:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1146:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:6:5"
									},
									"scope": 912,
									"src": "1075:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "1160:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1445:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1463:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1455:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1479:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1471:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:33:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 912,
									"src": "1436:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1528:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2198:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:33:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:6:5"
									},
									"scope": 912,
									"src": "2189:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2271:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2590:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2611:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2627:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2619:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2638:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:51:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2672:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2672:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:6:5"
									},
									"scope": 912,
									"src": "2581:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2686:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 902,
									"name": "Transfer",
									"nameLocation": "2861:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2886:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2870:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2908:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2892:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2912:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:57:5"
									},
									"src": "2855:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2935:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 911,
									"name": "Approval",
									"nameLocation": "3098:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3107:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3146:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3130:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:63:5"
									},
									"src": "3092:78:5"
								}
							],
							"scope": 913,
							"src": "62:3111:5",
							"usedErrors": []
						}
					],
					"src": "35:3138:5"
				},
				"id": 5
			},
			"contracts/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"IBEP20": [
							912
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 812,
							"src": "60:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 478,
							"src": "119:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 913,
							"src": "172:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130
							],
							"name": "SafeBEP20",
							"nameLocation": "206:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 920,
									"libraryName": {
										"id": 918,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "229:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "223:27:6",
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 923,
									"libraryName": {
										"id": 921,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "262:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "256:26:6",
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "362:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "393:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 937,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "423:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "423:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "423:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 940,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "448:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "452:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "400:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "400:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "400:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "373:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "373:86:6"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "299:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "319:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "312:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "312:6:6"
													},
													"referencedDeclaration": 912,
													"src": "312:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "334:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "326:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "346:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:41:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:6"
									},
									"scope": 1130,
									"src": "290:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "565:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "596:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 962,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "626:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "626:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "626:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "655:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 966,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "661:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 960,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "603:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 958,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "576:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "576:96:6"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "484:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "501:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 947,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "501:6:6"
													},
													"referencedDeclaration": 912,
													"src": "501:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "515:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "537:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "529:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "549:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "541:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:55:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:6"
									},
									"scope": 1130,
									"src": "475:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1025:546:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1319:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1328:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1318:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 992,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1359:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1351:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 990,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1351:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1351:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 994,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "1366:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "1335:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$912",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 871,
																				"src": "1335:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1335:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1335:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1334:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1318:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1310:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:152:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1310:152:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1493:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1007,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "1523:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1523:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1523:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1010,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "1556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1500:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1500:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1473:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1473:90:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "688:255:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "958:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "977:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "970:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "970:6:6"
													},
													"referencedDeclaration": 912,
													"src": "970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1009:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1001:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:46:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:6"
									},
									"scope": 1130,
									"src": "949:622:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1665:200:6",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1684:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1676:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1676:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1743:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1723:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1715:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1034,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1730:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1699:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1699:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1699:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "1699:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1810:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1810:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1810:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1047,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1834:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1843:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1787:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1787:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1760:97:6"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1588:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1610:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1610:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1632:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1624:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1641:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:46:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:6"
									},
									"scope": 1130,
									"src": "1579:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1959:245:6",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1978:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1090,
														"src": "1970:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1970:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2017:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2009:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2009:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1071,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2024:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1993:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1993:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1993:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1993:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1970:118:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1082,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "2149:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "2149:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2149:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1085,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "2182:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1080,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2126:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2126:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2126:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1078,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2099:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2099:97:6"
											}
										]
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "1882:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1904:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1904:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1926:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1918:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1943:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1935:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:46:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:6"
									},
									"scope": 1130,
									"src": "1873:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2669:699:6",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3044:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "3031:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3031:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1107,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3057:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3057:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3057:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "3057:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3031:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1111,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3141:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3161:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3141:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "3137:224:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "3164:197:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1118,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "3283:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3296:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1119,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3296:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1121,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3295:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1116,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3272:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3272:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3272:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3304:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1115,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3264:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3264:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3264:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2216:377:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2608:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2635:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2628:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1093,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "2628:6:6"
													},
													"referencedDeclaration": 912,
													"src": "2628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2655:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2642:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2642:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:33:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:6"
									},
									"scope": 1130,
									"src": "2599:769:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1131,
							"src": "198:3173:6",
							"usedErrors": []
						}
					],
					"src": "33:3338:6"
				},
				"id": 6
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"Context": [
							499
						],
						"IBEP20": [
							912
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						],
						"StakingPlatform": [
							1806
						]
					},
					"id": 1807,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1807,
							"sourceUnit": 105,
							"src": "60:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1807,
							"sourceUnit": 183,
							"src": "114:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1807,
							"sourceUnit": 812,
							"src": "172:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1807,
							"sourceUnit": 1131,
							"src": "231:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1137,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "288:7:7"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1806,
							"linearizedBaseContracts": [
								1806,
								104,
								499
							],
							"name": "StakingPlatform",
							"nameLocation": "269:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1141,
									"libraryName": {
										"id": 1139,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "311:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "305:27:7",
									"typeName": {
										"id": 1140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "324:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1145,
									"libraryName": {
										"id": 1142,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "344:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "338:27:7",
									"typeName": {
										"id": 1144,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1143,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "358:6:7"
										},
										"referencedDeclaration": 912,
										"src": "358:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "StakingPlatform.Staker",
									"id": 1156,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "stakerCurrentReward",
											"nameLocation": "432:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "424:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "424:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "470:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "462:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "462:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "mode",
											"nameLocation": "501:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "493:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "493:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "stakeStartTime",
											"nameLocation": "524:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "516:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "516:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "lastUpdatedTime",
											"nameLocation": "557:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "549:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "549:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "406:6:7",
									"nodeType": "StructDefinition",
									"scope": 1806,
									"src": "399:181:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StakingPlatform.Mode",
									"id": 1159,
									"members": [
										{
											"id": 1157,
											"name": "DAILY_MODE",
											"nameLocation": "601:10:7",
											"nodeType": "EnumValue",
											"src": "601:10:7"
										},
										{
											"id": 1158,
											"name": "WEEKLY_MODE",
											"nameLocation": "613:11:7",
											"nodeType": "EnumValue",
											"src": "613:11:7"
										}
									],
									"name": "Mode",
									"nameLocation": "596:4:7",
									"nodeType": "EnumDefinition",
									"src": "591:34:7"
								},
								{
									"constant": false,
									"id": 1161,
									"mutability": "mutable",
									"name": "_unstakingFeeRate",
									"nameLocation": "743:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1806,
									"src": "727:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1160,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "727:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1163,
									"mutability": "mutable",
									"name": "_eventPeriod",
									"nameLocation": "783:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1806,
									"src": "767:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "767:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1165,
									"mutability": "mutable",
									"name": "_fixedAPY",
									"nameLocation": "818:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1806,
									"src": "802:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "802:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1167,
									"mutability": "mutable",
									"name": "_rewardFeeRate",
									"nameLocation": "850:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1806,
									"src": "834:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "834:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1169,
									"mutability": "mutable",
									"name": "_bountyWallet",
									"nameLocation": "887:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1806,
									"src": "871:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1168,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "871:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1174,
									"mutability": "mutable",
									"name": "_staker",
									"nameLocation": "944:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1806,
									"src": "909:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
										"typeString": "mapping(address => struct StakingPlatform.Staker)"
									},
									"typeName": {
										"id": 1173,
										"keyType": {
											"id": 1170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "909:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
											"typeString": "mapping(address => struct StakingPlatform.Staker)"
										},
										"valueType": {
											"id": 1172,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1171,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1156,
												"src": "928:6:7"
											},
											"referencedDeclaration": 1156,
											"src": "928:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
												"typeString": "struct StakingPlatform.Staker"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1176,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1029:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1806,
									"src": "1014:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1014:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1179,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1061:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1806,
									"src": "1047:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$912",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1178,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1177,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "1047:6:7"
										},
										"referencedDeclaration": 912,
										"src": "1047:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1185,
									"name": "Staked",
									"nameLocation": "1156:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1171:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "1163:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1187:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "1179:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:32:7"
									},
									"src": "1150:45:7"
								},
								{
									"anonymous": false,
									"id": 1191,
									"name": "Harvest",
									"nameLocation": "1207:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1223:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1215:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToClaim",
												"nameLocation": "1239:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1231:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:39:7"
									},
									"src": "1201:53:7"
								},
								{
									"anonymous": false,
									"id": 1197,
									"name": "Withdraw",
									"nameLocation": "1266:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1283:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "1275:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1275:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1299:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "1291:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:32:7"
									},
									"src": "1260:47:7"
								},
								{
									"anonymous": false,
									"id": 1201,
									"name": "SetFixedAPY",
									"nameLocation": "1319:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"indexed": false,
												"mutability": "mutable",
												"name": "fixedAPY",
												"nameLocation": "1339:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1331:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1330:18:7"
									},
									"src": "1313:36:7"
								},
								{
									"anonymous": false,
									"id": 1205,
									"name": "SetEventPeriod",
									"nameLocation": "1361:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockupDuration",
												"nameLocation": "1384:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1376:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1375:24:7"
									},
									"src": "1355:45:7"
								},
								{
									"anonymous": false,
									"id": 1209,
									"name": "SetUnstakingFeeRate",
									"nameLocation": "1412:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakingFeeRate",
												"nameLocation": "1440:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "1432:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:26:7"
									},
									"src": "1406:52:7"
								},
								{
									"anonymous": false,
									"id": 1213,
									"name": "SetBountyWallet",
									"nameLocation": "1470:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"indexed": false,
												"mutability": "mutable",
												"name": "bountyWallet",
												"nameLocation": "1494:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1486:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:22:7"
									},
									"src": "1464:44:7"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "1572:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1220,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "1585:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1585:6:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "1585:6:7"
											},
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1223,
														"name": "_bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "1602:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1224,
														"name": "__bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "1618:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1602:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "1602:30:7"
											},
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "1643:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1229,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "1658:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1228,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1651:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$912_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1651:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"src": "1643:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "1643:22:7"
											}
										]
									},
									"id": 1234,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1540:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1532:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "__bountyWallet",
												"nameLocation": "1556:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1548:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:40:7"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1572:0:7"
									},
									"scope": 1806,
									"src": "1520:153:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "1706:132:7",
										"statements": [
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1237,
														"name": "_fixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "1717:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313235",
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1729:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_125_by_1",
															"typeString": "int_const 125"
														},
														"value": "125"
													},
													"src": "1717:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "1717:15:7"
											},
											{
												"expression": {
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1241,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "1743:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1763:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "1743:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "1743:24:7"
											},
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1245,
														"name": "_rewardFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "1778:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1795:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1778:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "1778:20:7"
											},
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1249,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "1809:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1824:6:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "1809:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "1809:21:7"
											}
										]
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Init",
									"nameLocation": "1690:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:7"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1706:0:7"
									},
									"scope": 1806,
									"src": "1681:157:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "1925:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1965:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"id": 1261,
															"name": "timedur",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "1953:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "1953:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1953:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1265,
												"nodeType": "Return",
												"src": "1946:26:7"
											}
										]
									},
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calDaysFromTimestamp",
									"nameLocation": "1855:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "timedur",
												"nameLocation": "1884:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1876:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1875:17:7"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1916:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:9:7"
									},
									"scope": 1806,
									"src": "1846:134:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "2086:711:7",
										"statements": [
											{
												"assignments": [
													1272
												],
												"declarations": [
													{
														"constant": false,
														"id": 1272,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "2122:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "2107:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1271,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1270,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "2107:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "2107:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1277,
												"initialValue": {
													"baseExpression": {
														"id": 1273,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "2131:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1276,
													"indexExpression": {
														"expression": {
															"id": 1274,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2139:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2139:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2131:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2107:43:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1278,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2164:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2164:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1280,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "2182:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastUpdatedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2182:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2164:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1285,
												"nodeType": "IfStatement",
												"src": "2161:78:7",
												"trueBody": {
													"id": 1284,
													"nodeType": "Block",
													"src": "2206:33:7",
													"statements": [
														{
															"functionReturnParameters": 1269,
															"id": 1283,
															"nodeType": "Return",
															"src": "2221:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1287
												],
												"declarations": [
													{
														"constant": false,
														"id": 1287,
														"mutability": "mutable",
														"name": "duration",
														"nameLocation": "2265:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "2257:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1286,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2257:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1295,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1289,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2297:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2297:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 1291,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "2315:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakeStartTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1153,
																"src": "2315:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2297:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1288,
														"name": "calDaysFromTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "2276:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2276:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2257:80:7"
											},
											{
												"assignments": [
													1297
												],
												"declarations": [
													{
														"constant": false,
														"id": 1297,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "2356:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "2348:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1296,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2348:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1309,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2421:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1304,
																	"name": "_fixedAPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "2406:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1301,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "2392:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1298,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1272,
																				"src": "2368:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakedAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1149,
																			"src": "2368:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "2368:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2368:33:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 705,
																"src": "2368:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2368:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2368:52:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2348:77:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1310,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "2440:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "2440:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2455:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2440:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1341,
												"nodeType": "IfStatement",
												"src": "2436:222:7",
												"trueBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "2458:200:7",
													"statements": [
														{
															"assignments": [
																1315
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1315,
																	"mutability": "mutable",
																	"name": "eventCount",
																	"nameLocation": "2481:10:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1340,
																	"src": "2473:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1314,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2473:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1320,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1318,
																		"name": "_eventPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "2507:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1316,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "2494:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "2494:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2494:26:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2473:47:7"
														},
														{
															"expression": {
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1321,
																	"name": "newReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "2535:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "316534",
																			"id": 1336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2642:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "1e4"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 1331,
																									"name": "_eventPeriod",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1163,
																									"src": "2622:12:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1330,
																								"name": "calDaysFromTimestamp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1267,
																								"src": "2601:20:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1332,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2601:34:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1328,
																							"name": "_fixedAPY",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1165,
																							"src": "2587:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1329,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 705,
																						"src": "2587:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1333,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2587:49:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1325,
																							"name": "eventCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1315,
																							"src": "2571:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1322,
																								"name": "staker",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1272,
																								"src": "2547:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																									"typeString": "struct StakingPlatform.Staker storage pointer"
																								}
																							},
																							"id": 1323,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "stakedAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1149,
																							"src": "2547:19:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1324,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 705,
																						"src": "2547:23:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2547:35:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 705,
																				"src": "2547:39:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2547:90:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 720,
																		"src": "2547:94:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2547:99:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2535:111:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1339,
															"nodeType": "ExpressionStatement",
															"src": "2535:111:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1342,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "2668:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "2668:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1348,
																"name": "newReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "2728:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1345,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "2697:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakerCurrentReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1147,
																"src": "2697:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "2697:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2697:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2668:70:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "2668:70:7"
											},
											{
												"expression": {
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1352,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "2749:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdatedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2749:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1355,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2774:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2774:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2749:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "2749:40:7"
											}
										]
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "2064:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:2:7"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:7"
									},
									"scope": 1806,
									"src": "2055:742:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "2916:563:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1368,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "2945:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2955:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2945:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2958:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2937:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2937:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "2937:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1377,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3027:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3027:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1375,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "3011:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "3011:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3011:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1380,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "3041:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3011:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3050:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3003:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3003:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "3003:63:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1385,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "3087:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3087:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "3087:14:7"
											},
											{
												"assignments": [
													1390
												],
												"declarations": [
													{
														"constant": false,
														"id": 1390,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3127:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1444,
														"src": "3112:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1389,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1388,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "3112:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "3112:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1395,
												"initialValue": {
													"baseExpression": {
														"id": 1391,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "3136:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1394,
													"indexExpression": {
														"expression": {
															"id": 1392,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3144:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3144:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3136:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3112:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1399,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3189:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3189:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1403,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3209:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPlatform_$1806",
																		"typeString": "contract StakingPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPlatform_$1806",
																		"typeString": "contract StakingPlatform"
																	}
																],
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3201:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1401,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3201:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3201:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1405,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "3216:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1396,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "3166:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "3166:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3166:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "3166:58:7"
											},
											{
												"expression": {
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1408,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "3235:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "3235:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1414,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "3281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1411,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "3257:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "3257:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3257:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3257:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3235:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "3235:54:7"
											},
											{
												"expression": {
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1418,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "3300:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1153,
														"src": "3300:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1421,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3324:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3324:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3300:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "3300:39:7"
											},
											{
												"expression": {
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1425,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "3350:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "3350:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1428,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "3364:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3350:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "3350:19:7"
											},
											{
												"expression": {
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1431,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "3380:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1434,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "3410:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1432,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "3394:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3394:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3394:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3380:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "3380:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1439,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3451:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3451:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1441,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "3463:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1438,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "3444:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3444:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "EmitStatement",
												"src": "3439:32:7"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "2870:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2884:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "2876:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2876:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "2901:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "2893:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2893:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2875:32:7"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:7"
									},
									"scope": 1806,
									"src": "2861:618:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "3568:874:7",
										"statements": [
											{
												"assignments": [
													1452
												],
												"declarations": [
													{
														"constant": false,
														"id": 1452,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3596:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "3581:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1451,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1450,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "3581:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "3581:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1457,
												"initialValue": {
													"baseExpression": {
														"id": 1453,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "3605:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1456,
													"indexExpression": {
														"expression": {
															"id": 1454,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3613:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3613:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3605:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3581:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1459,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "3645:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3654:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3645:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3657:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3637:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3637:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "3637:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1466,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "3710:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1467,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "3720:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "3720:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3710:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3741:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3702:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3702:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "3702:56:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1473,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "3771:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3771:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "3771:14:7"
											},
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "amountTobeWithdrawn",
														"nameLocation": "3804:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "3796:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3796:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1478,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "3826:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1483,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3859:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$1806",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$1806",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3851:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1481,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3851:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3851:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1479,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "3835:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "3835:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3835:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3826:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1492,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3901:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$1806",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$1806",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3893:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1490,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3893:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3893:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1488,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "3877:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "3877:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3877:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3826:81:7",
													"trueExpression": {
														"id": 1487,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "3868:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3796:111:7"
											},
											{
												"assignments": [
													1498
												],
												"declarations": [
													{
														"constant": false,
														"id": 1498,
														"mutability": "mutable",
														"name": "isLockupTimeOver",
														"nameLocation": "3926:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "3918:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3918:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1515,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3992:6:7",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1502,
																					"name": "staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1452,
																					"src": "3965:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																						"typeString": "struct StakingPlatform.Staker storage pointer"
																					}
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakeStartTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1153,
																				"src": "3965:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 1499,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3945:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3945:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 690,
																			"src": "3945:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3945:42:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "3945:46:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3945:54:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1508,
																"name": "_eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "4002:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3945:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4018:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3945:74:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "31",
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4026:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3945:82:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4022:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3918:109:7"
											},
											{
												"expression": {
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1516,
														"name": "amountTobeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "4038:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "316534",
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4170:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "1e4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1528,
																				"name": "_unstakingFeeRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1161,
																				"src": "4147:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1525,
																						"name": "amountTobeWithdrawn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1477,
																						"src": "4122:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1522,
																								"name": "isLockupTimeOver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1498,
																								"src": "4100:16:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"id": 1519,
																									"name": "staker",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1452,
																									"src": "4084:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																										"typeString": "struct StakingPlatform.Staker storage pointer"
																									}
																								},
																								"id": 1520,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mode",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1151,
																								"src": "4084:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1521,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 705,
																							"src": "4084:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1523,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4084:33:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1524,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 705,
																					"src": "4084:37:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4084:58:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 705,
																			"src": "4084:62:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4084:81:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "4084:85:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4084:90:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1517,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "4060:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4060:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4060:115:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4038:137:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "4038:137:7"
											},
											{
												"expression": {
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1536,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "4186:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1539,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "4216:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1537,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "4200:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4200:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4200:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4186:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "4186:50:7"
											},
											{
												"expression": {
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1543,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4247:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "4247:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1549,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "4293:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1546,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "4269:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "4269:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4269:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4269:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4247:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "4247:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1556,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4343:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4343:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1558,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "4355:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1553,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4324:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "4324:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4324:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "4324:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1562,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4402:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4402:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1564,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "4414:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1561,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "4393:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4393:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "EmitStatement",
												"src": "4388:46:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "3535:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3552:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "3544:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3544:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3543:16:7"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3568:0:7"
									},
									"scope": 1806,
									"src": "3526:916:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "4510:143:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1576,
																"name": "__fixedAPY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "4531:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4544:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4531:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420415059",
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4547:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																"typeString": "literal_string \"Invalid APY\""
															},
															"value": "Invalid APY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																"typeString": "literal_string \"Invalid APY\""
															}
														],
														"id": 1575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4523:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4523:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "4523:38:7"
											},
											{
												"expression": {
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1582,
														"name": "_fixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "4582:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1583,
														"name": "__fixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "4594:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4582:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "4582:22:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1587,
															"name": "__fixedAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "4634:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1586,
														"name": "SetFixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "4622:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4622:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1589,
												"nodeType": "EmitStatement",
												"src": "4617:28:7"
											}
										]
									},
									"functionSelector": "50f19c87",
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1573,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1572,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4500:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4500:9:7"
										}
									],
									"name": "setFixedAPY",
									"nameLocation": "4459:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "__fixedAPY",
												"nameLocation": "4479:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "4471:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4470:20:7"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4510:0:7"
									},
									"scope": 1806,
									"src": "4450:203:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "4727:170:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1599,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1593,
																"src": "4756:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4772:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4756:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4775:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															},
															"value": "Invalid Lockup Duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															}
														],
														"id": 1598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4748:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4748:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1604,
												"nodeType": "ExpressionStatement",
												"src": "4748:53:7"
											},
											{
												"expression": {
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1605,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "4814:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1606,
														"name": "__eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "4829:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4814:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "4814:28:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1610,
															"name": "__eventPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "4875:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1609,
														"name": "SetEventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "4860:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4860:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "EmitStatement",
												"src": "4855:34:7"
											}
										]
									},
									"functionSelector": "692642e7",
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1596,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1595,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4717:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4717:9:7"
										}
									],
									"name": "setEventPeriod",
									"nameLocation": "4670:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "__eventPeriod",
												"nameLocation": "4693:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "4685:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4684:23:7"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4727:0:7"
									},
									"scope": 1806,
									"src": "4661:236:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "4981:190:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1622,
																"name": "__unstakingFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1616,
																"src": "5002:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5023:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5002:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5026:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															},
															"value": "Invalid Unstaking Fee Rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															}
														],
														"id": 1621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4994:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "4994:61:7"
											},
											{
												"expression": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1628,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "5068:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1629,
														"name": "__unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "5088:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5068:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "5068:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1633,
															"name": "__unstakingFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "5144:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1632,
														"name": "SetUnstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "5124:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5124:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1635,
												"nodeType": "EmitStatement",
												"src": "5119:44:7"
											}
										]
									},
									"functionSelector": "91e07e7a",
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1619,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1618,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4971:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4971:9:7"
										}
									],
									"name": "setUnstakingFeeRate",
									"nameLocation": "4914:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "__unstakingFeeRate",
												"nameLocation": "4942:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "4934:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4933:28:7"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4981:0:7"
									},
									"scope": 1806,
									"src": "4905:266:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "5247:199:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1645,
																"name": "__bountyWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "5276:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5301:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5293:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1646,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5293:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5293:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5276:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420416464726573732e20416464726573732063616e2774206265207a65726f",
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5305:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																"typeString": "literal_string \"Invalid Address. Address can't be zero\""
															},
															"value": "Invalid Address. Address can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																"typeString": "literal_string \"Invalid Address. Address can't be zero\""
															}
														],
														"id": 1644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5268:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5268:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "5268:78:7"
											},
											{
												"expression": {
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1654,
														"name": "_bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "5359:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1655,
														"name": "__bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "5375:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5359:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "5359:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1659,
															"name": "__bountyWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "5423:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1658,
														"name": "SetBountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "5407:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "EmitStatement",
												"src": "5402:36:7"
											}
										]
									},
									"functionSelector": "8a9d3839",
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1642,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1641,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5237:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5237:9:7"
										}
									],
									"name": "setBountyWallet",
									"nameLocation": "5188:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "__bountyWallet",
												"nameLocation": "5212:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "5204:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5203:24:7"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5247:0:7"
									},
									"scope": 1806,
									"src": "5179:267:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "5556:100:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1668,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "5577:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5577:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "5577:14:7"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1671,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "5609:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1674,
														"indexExpression": {
															"expression": {
																"id": 1672,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5617:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5617:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5609:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "5609:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1667,
												"id": 1676,
												"nodeType": "Return",
												"src": "5602:46:7"
											}
										]
									},
									"functionSelector": "5d2ec65d",
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToHarvest",
									"nameLocation": "5514:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5529:2:7"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "5548:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5548:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5547:9:7"
									},
									"scope": 1806,
									"src": "5505:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "5722:578:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1681,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "5743:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5743:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "5743:14:7"
											},
											{
												"assignments": [
													1686
												],
												"declarations": [
													{
														"constant": false,
														"id": 1686,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "5783:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "5768:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1685,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1684,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "5768:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "5768:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1691,
												"initialValue": {
													"baseExpression": {
														"id": 1687,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "5792:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1690,
													"indexExpression": {
														"expression": {
															"id": 1688,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5800:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5800:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5792:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5768:43:7"
											},
											{
												"assignments": [
													1693
												],
												"declarations": [
													{
														"constant": false,
														"id": 1693,
														"mutability": "mutable",
														"name": "rewardToClaim",
														"nameLocation": "5830:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "5822:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5822:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1708,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5928:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "34",
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5932:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	},
																	"src": "5928:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1700,
																			"name": "_rewardFeeRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "5908:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1697,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1686,
																				"src": "5877:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakerCurrentReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1147,
																			"src": "5877:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "5877:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5877:46:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "5877:50:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5877:57:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1694,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "5846:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakerCurrentReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1147,
															"src": "5846:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "5846:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5846:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5822:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1710,
																"name": "rewardToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "5964:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5980:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5964:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5983:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 1709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5956:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5956:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "5956:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1716,
														"name": "rewardToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "6017:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"id": 1719,
																"name": "_bountyWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "6049:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1717,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "6033:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "6033:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6033:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6017:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1729,
												"nodeType": "IfStatement",
												"src": "6013:111:7",
												"trueBody": {
													"expression": {
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1722,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "6078:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 1725,
																	"name": "_bountyWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "6110:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1723,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "6094:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "6094:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6078:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1728,
													"nodeType": "ExpressionStatement",
													"src": "6078:46:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1733,
															"name": "_bountyWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "6158:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1734,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6173:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6173:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1736,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "6185:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1730,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "6135:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "6135:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6135:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1738,
												"nodeType": "ExpressionStatement",
												"src": "6135:64:7"
											},
											{
												"expression": {
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1739,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "6210:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "6210:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6239:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6210:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "6210:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1746,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6266:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6266:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1748,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "6278:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1745,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "6258:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6258:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1750,
												"nodeType": "EmitStatement",
												"src": "6253:39:7"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "5706:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5713:2:7"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5722:0:7"
									},
									"scope": 1806,
									"src": "5697:603:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "6410:68:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1757,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "6438:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1760,
														"indexExpression": {
															"expression": {
																"id": 1758,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6446:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6446:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6438:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "6438:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1756,
												"id": 1762,
												"nodeType": "Return",
												"src": "6431:39:7"
											}
										]
									},
									"functionSelector": "373d6132",
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "6365:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6377:2:7"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "6401:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6401:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6400:9:7"
									},
									"scope": 1806,
									"src": "6356:122:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "6540:65:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1769,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "6558:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1772,
														"indexExpression": {
															"expression": {
																"id": 1770,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6566:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6566:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6558:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "6558:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1768,
												"id": 1774,
												"nodeType": "Return",
												"src": "6551:46:7"
											}
										]
									},
									"functionSelector": "f7b2a7be",
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardAmount",
									"nameLocation": "6495:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6507:2:7"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "6531:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6531:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6530:9:7"
									},
									"scope": 1806,
									"src": "6486:119:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "6674:159:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1787,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "6742:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "6742:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1789,
																					"name": "_staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "6760:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																						"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																					}
																				},
																				"id": 1792,
																				"indexExpression": {
																					"expression": {
																						"id": 1790,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "6768:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1791,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "6768:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6760:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1156_storage",
																					"typeString": "struct StakingPlatform.Staker storage ref"
																				}
																			},
																			"id": 1793,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakeStartTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1153,
																			"src": "6760:34:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6742:52:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1786,
																	"name": "calDaysFromTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "6721:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6721:74:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "31",
																				"id": 1798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6816:6:7",
																				"subdenomination": "days",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_86400_by_1",
																					"typeString": "int_const 86400"
																				},
																				"value": "1"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_86400_by_1",
																					"typeString": "int_const 86400"
																				}
																			],
																			"expression": {
																				"id": 1796,
																				"name": "_eventPeriod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1163,
																				"src": "6799:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 690,
																			"src": "6799:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6799:24:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1800,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6798:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6721:103:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6709:6:7",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	}
																],
																"expression": {
																	"id": 1781,
																	"name": "_eventPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "6692:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "6692:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6692:24:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "6692:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6692:133:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1780,
												"id": 1803,
												"nodeType": "Return",
												"src": "6685:140:7"
											}
										]
									},
									"functionSelector": "6413996c",
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainedToNextEvent",
									"nameLocation": "6622:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6641:2:7"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "6665:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6665:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6664:9:7"
									},
									"scope": 1806,
									"src": "6613:220:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1807,
							"src": "260:6576:7",
							"usedErrors": []
						}
					],
					"src": "33:6805:7"
				},
				"id": 7
			}
		}
	}
}