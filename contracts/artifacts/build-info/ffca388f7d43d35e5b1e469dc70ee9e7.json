{
	"id": "ffca388f7d43d35e5b1e469dc70ee9e7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./SafeBEP20.sol\";\r\n\r\ncontract StakingPlatform is Ownable {\r\n\r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    // args for _stakers\r\n    struct Staker {\r\n        uint256 stakerCurrentReward;\r\n        uint256 stakedAmount;\r\n        uint256 mode;\r\n        uint256 stakeStartTime;\r\n        uint256 lastUpdatedTime;\r\n    }   \r\n    \r\n    // refer to CRSFANS token. Address: 0x7AD8A62451f79399c940fC1A6FE96358a80B1931\r\n    \r\n    uint256 private _unstakingFeeRate;\r\n    uint256 private _eventPeriod;\r\n    uint256 private _fixedAPY;\r\n    uint256 private _rewardFeeRate;\r\n    address private _bountyWallet;\r\n\r\n    mapping(address => Staker) private _staker;\r\n\r\n    // Total amount of token staked in staking pool.\r\n    uint256 public totalStaked;\r\n    IBEP20 public token;\r\n    \r\n    // Events triggered when start, stake, unstake(withdraw), get reward.\r\n    event Staked(address staker, uint256 amount);\r\n    event Harvest(address staker, uint256 rewardToClaim);\r\n    event Withdraw(address staker, uint256 amount);\r\n    event SetFixedAPY(uint256 fixedAPY);\r\n    event SetEventPeriod(uint256 lockupDuration);\r\n    event SetUnstakingFeeRate(uint256 unstakingFeeRate);\r\n    event SetBountyWallet(address bountyWallet);\r\n\r\n    constructor(address _token, address __bountyWallet) {\r\n\r\n        Init();\r\n        _bountyWallet = __bountyWallet;\r\n        token = IBEP20(_token);\r\n    }\r\n\r\n    function Init() internal {\r\n        _fixedAPY = 125;\r\n        _unstakingFeeRate = 1500;\r\n        _rewardFeeRate = 200;\r\n        _eventPeriod = 7 days;\r\n    }\r\n\r\n    function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r\n        \r\n        return timedur.div(1 days);\r\n    }\r\n\r\n    // Update rewards for _stakers according to deposited amount.\r\n    function updateReward() private{\r\n        \r\n        Staker storage staker = _staker[msg.sender];\r\n        if(block.timestamp < staker.lastUpdatedTime) {\r\n            return;\r\n        }        \r\n        uint256 duration = calDaysFromTimestamp(block.timestamp - staker.stakeStartTime);\r\n        uint256 newReward = staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4);\r\n        if (staker.mode == 1) {\r\n            uint256 eventCount = duration.div(_eventPeriod);\r\n            newReward = staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4);\r\n        }\r\n        staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward);\r\n        staker.lastUpdatedTime = block.timestamp;\r\n    }\r\n\r\n    function startStaking(uint256 _amount, uint256 _mode) external {\r\n\r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].stakeStartTime != 0, \"Already started\");\r\n\r\n        _staker[msg.sender].mode = _mode;\r\n        _staker[msg.sender].stakeStartTime = block.timestamp;\r\n        stake(_amount);\r\n    }\r\n\r\n    // Staker tries to stake specific amount of token.\r\n    function stake(uint256 _amount) public{\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n        staker.stakedAmount = staker.stakedAmount.add(_amount);\r\n        totalStaked = totalStaked.add(_amount);\r\n        \r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    // Withdraw some of token staked.\r\n    function withdraw(uint256 amount) external{\r\n\r\n        Staker storage staker = _staker[msg.sender];\r\n\r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        require(amount <= staker.stakedAmount, \"Invalid amount\");\r\n\r\n        updateReward();\r\n        uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this));\r\n        uint256 isLockupTimeOver = block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1;\r\n        amountTobeWithdrawn = amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4));\r\n        totalStaked = totalStaked.sub(amountTobeWithdrawn);\r\n        staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn);\r\n        token.safeTransfer(msg.sender, amountTobeWithdrawn);\r\n\r\n        emit Withdraw(msg.sender, amountTobeWithdrawn);\r\n    }\r\n\r\n    function setFixedAPY(uint256 __fixedAPY) external onlyOwner {\r\n\r\n        require(__fixedAPY > 0, \"Invalid APY\");\r\n        \r\n        _fixedAPY = __fixedAPY;\r\n\r\n        emit SetFixedAPY(__fixedAPY);\r\n    }\r\n\r\n    function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r\n        \r\n        require(__eventPeriod > 0, \"Invalid Lockup Duration\");\r\n\r\n        _eventPeriod = __eventPeriod.mul(1 days);\r\n\r\n        emit SetEventPeriod(__eventPeriod);\r\n    }\r\n\r\n    function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r\n\r\n        require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\");\r\n\r\n        _unstakingFeeRate = __unstakingFeeRate;\r\n\r\n        emit SetUnstakingFeeRate(__unstakingFeeRate);\r\n    }\r\n\r\n    function setBountyWallet(address __bountyWallet) external onlyOwner {\r\n        \r\n        require(__bountyWallet > address(0), \"Invalid Address. Address can't be zero\");\r\n\r\n        _bountyWallet = __bountyWallet;\r\n\r\n        emit SetBountyWallet(__bountyWallet);\r\n    }\r\n\r\n    // Amount of reward staker can be guaranteed.\r\n    function rewardToHarvest() public view returns (uint256){\r\n        \r\n        // updateReward();\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n\r\n    // Get reward of msg.sender\r\n    function harvest() public{\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4));\r\n        \r\n        require(rewardToClaim > 0, \"Nothing to claim\");\r\n        if (rewardToClaim > token.balanceOf(_bountyWallet))\r\n            rewardToClaim = token.balanceOf(_bountyWallet);\r\n        token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim);\r\n        staker.stakerCurrentReward = 0;\r\n\r\n        emit Harvest(msg.sender, rewardToClaim);\r\n    }\r\n    \r\n    // Amount of token staked in staking pool.\r\n    function stakedAmount() public view returns (uint256) {\r\n        \r\n        return _staker[msg.sender].stakedAmount;\r\n    }\r\n\r\n    function rewardAmount() public view returns (uint256) {\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n}\r\n"
			},
			"contracts/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"./IBEP20.sol\";\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n    \r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n        \r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
									".code": [
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"StakingPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "__bountyWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardToClaim",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "bountyWallet",
									"type": "address"
								}
							],
							"name": "SetBountyWallet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockupDuration",
									"type": "uint256"
								}
							],
							"name": "SetEventPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fixedAPY",
									"type": "uint256"
								}
							],
							"name": "SetFixedAPY",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "SetUnstakingFeeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToHarvest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "__bountyWallet",
									"type": "address"
								}
							],
							"name": "setBountyWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__eventPeriod",
									"type": "uint256"
								}
							],
							"name": "setEventPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__fixedAPY",
									"type": "uint256"
								}
							],
							"name": "setFixedAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "setUnstakingFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "startStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":260:6925  contract StakingPlatform is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":1478:1631  constructor(address _token, address __bountyWallet) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Staking.sol\":1543:1549  Init() */\n  tag_12\n    /* \"contracts/Staking.sol\":1543:1547  Init */\n  shl(0x20, tag_13)\n    /* \"contracts/Staking.sol\":1543:1549  Init() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Staking.sol\":1576:1590  __bountyWallet */\n  dup1\n    /* \"contracts/Staking.sol\":1560:1573  _bountyWallet */\n  0x05\n  0x00\n    /* \"contracts/Staking.sol\":1560:1590  _bountyWallet = __bountyWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1616:1622  _token */\n  dup2\n    /* \"contracts/Staking.sol\":1601:1606  token */\n  0x08\n  0x00\n    /* \"contracts/Staking.sol\":1601:1623  token = IBEP20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1478:1631  constructor(address _token, address __bountyWallet) {\r... */\n  pop\n  pop\n    /* \"contracts/Staking.sol\":260:6925  contract StakingPlatform is Ownable {\r... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":1639:1796  function Init() internal {\r... */\ntag_13:\n    /* \"contracts/Staking.sol\":1687:1690  125 */\n  0x7d\n    /* \"contracts/Staking.sol\":1675:1684  _fixedAPY */\n  0x03\n    /* \"contracts/Staking.sol\":1675:1690  _fixedAPY = 125 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1721:1725  1500 */\n  0x05dc\n    /* \"contracts/Staking.sol\":1701:1718  _unstakingFeeRate */\n  0x01\n    /* \"contracts/Staking.sol\":1701:1725  _unstakingFeeRate = 1500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1753:1756  200 */\n  0xc8\n    /* \"contracts/Staking.sol\":1736:1750  _rewardFeeRate */\n  0x04\n    /* \"contracts/Staking.sol\":1736:1756  _rewardFeeRate = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1782:1788  7 days */\n  0x093a80\n    /* \"contracts/Staking.sol\":1767:1779  _eventPeriod */\n  0x02\n    /* \"contracts/Staking.sol\":1767:1788  _eventPeriod = 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1639:1796  function Init() internal {\r... */\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_19:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_21\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":260:379   */\ntag_24:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_27\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_19\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_28\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_31:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_33\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_34:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_26:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_22:\n    /* \"#utility.yul\":1303:1327   */\n  tag_40\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_31\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_41:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":260:6925  contract StakingPlatform is Ownable {\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":260:6925  contract StakingPlatform is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf7b2a7be\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x817b1cd2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8a9d3839\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91e07e7a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x50f19c87\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x50f19c87\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5d2ec65d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x692642e7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x373d6132\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4b77dd9e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":3819:4735  function withdraw(uint256 amount) external{\r... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/Staking.sol\":6673:6795  function stakedAmount() public view returns (uint256) {\r... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":6010:6613  function harvest() public{\r... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Staking.sol\":2763:3187  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/Staking.sol\":4743:4946  function setFixedAPY(uint256 __fixedAPY) external onlyOwner {\r... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Staking.sol\":5810:5969  function rewardToHarvest() public view returns (uint256){\r... */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4954:5202  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/Staking.sol\":972:998  uint256 public totalStaked */\n    tag_11:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5484:5751  function setBountyWallet(address __bountyWallet) external onlyOwner {\r... */\n    tag_12:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5210:5476  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_14:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/Staking.sol\":3251:3772  function stake(uint256 _amount) public{\r... */\n    tag_15:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/Staking.sol\":6803:6922  function rewardAmount() public view returns (uint256) {\r... */\n    tag_17:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1005:1024  IBEP20 public token */\n    tag_18:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":3819:4735  function withdraw(uint256 amount) external{\r... */\n    tag_25:\n        /* \"contracts/Staking.sol\":3874:3895  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":3898:3905  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":3898:3917  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3906:3916  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3898:3917  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3874:3917  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3947:3948  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3938:3944  amount */\n      dup3\n        /* \"contracts/Staking.sol\":3938:3948  amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3930:3984  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"contracts/Staking.sol\":4013:4019  staker */\n      dup1\n        /* \"contracts/Staking.sol\":4013:4032  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4003:4009  amount */\n      dup3\n        /* \"contracts/Staking.sol\":4003:4032  amount <= staker.stakedAmount */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":3995:4051  require(amount <= staker.stakedAmount, \"Invalid amount\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/Staking.sol\":4064:4078  updateReward() */\n      tag_81\n        /* \"contracts/Staking.sol\":4064:4076  updateReward */\n      tag_82\n        /* \"contracts/Staking.sol\":4064:4078  updateReward() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/Staking.sol\":4089:4116  uint256 amountTobeWithdrawn */\n      0x00\n        /* \"contracts/Staking.sol\":4128:4133  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4128:4143  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":4152:4156  this */\n      address\n        /* \"contracts/Staking.sol\":4128:4158  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_83:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/Staking.sol\":4119:4125  amount */\n      dup4\n        /* \"contracts/Staking.sol\":4119:4158  amount < token.balanceOf(address(this)) */\n      lt\n        /* \"contracts/Staking.sol\":4119:4200  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      tag_89\n      jumpi\n        /* \"contracts/Staking.sol\":4170:4175  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4170:4185  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":4194:4198  this */\n      address\n        /* \"contracts/Staking.sol\":4170:4200  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_90:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_94:\n        /* \"contracts/Staking.sol\":4119:4200  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      jump(tag_95)\n    tag_89:\n        /* \"contracts/Staking.sol\":4161:4167  amount */\n      dup3\n        /* \"contracts/Staking.sol\":4119:4200  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n    tag_95:\n        /* \"contracts/Staking.sol\":4089:4200  uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4211:4235  uint256 isLockupTimeOver */\n      0x00\n        /* \"contracts/Staking.sol\":4311:4312  0 */\n      dup1\n        /* \"contracts/Staking.sol\":4295:4307  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":4238:4292  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      tag_96\n        /* \"contracts/Staking.sol\":4285:4291  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":4238:4280  block.timestamp.sub(staker.stakeStartTime) */\n      tag_97\n        /* \"contracts/Staking.sol\":4258:4264  staker */\n      dup8\n        /* \"contracts/Staking.sol\":4258:4279  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":4238:4253  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4238:4257  block.timestamp.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":4238:4280  block.timestamp.sub(staker.stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"contracts/Staking.sol\":4238:4284  block.timestamp.sub(staker.stakeStartTime).div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":4238:4292  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"contracts/Staking.sol\":4238:4307  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"contracts/Staking.sol\":4238:4312  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 */\n      eq\n        /* \"contracts/Staking.sol\":4238:4320  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n      tag_102\n      jumpi\n        /* \"contracts/Staking.sol\":4319:4320  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4238:4320  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n      jump(tag_103)\n    tag_102:\n        /* \"contracts/Staking.sol\":4315:4316  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4238:4320  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n    tag_103:\n        /* \"contracts/Staking.sol\":4211:4320  uint256 isLockupTimeOver = block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4353:4468  amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4)) */\n      tag_104\n        /* \"contracts/Staking.sol\":4377:4467  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4) */\n      tag_105\n        /* \"contracts/Staking.sol\":4463:4466  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":4377:4458  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate) */\n      tag_106\n        /* \"contracts/Staking.sol\":4440:4457  _unstakingFeeRate */\n      sload(0x01)\n        /* \"contracts/Staking.sol\":4377:4435  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn) */\n      tag_107\n        /* \"contracts/Staking.sol\":4415:4434  amountTobeWithdrawn */\n      dup8\n        /* \"contracts/Staking.sol\":4377:4410  staker.mode.mul(isLockupTimeOver) */\n      tag_108\n        /* \"contracts/Staking.sol\":4393:4409  isLockupTimeOver */\n      dup9\n        /* \"contracts/Staking.sol\":4377:4383  staker */\n      dup12\n        /* \"contracts/Staking.sol\":4377:4388  staker.mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4377:4392  staker.mode.mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":4377:4410  staker.mode.mul(isLockupTimeOver) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"contracts/Staking.sol\":4377:4414  staker.mode.mul(isLockupTimeOver).mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":4377:4435  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"contracts/Staking.sol\":4377:4439  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":4377:4458  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"contracts/Staking.sol\":4377:4462  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":4377:4467  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/Staking.sol\":4353:4372  amountTobeWithdrawn */\n      dup4\n        /* \"contracts/Staking.sol\":4353:4376  amountTobeWithdrawn.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":4353:4468  amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"contracts/Staking.sol\":4331:4468  amountTobeWithdrawn = amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4)) */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":4493:4529  totalStaked.sub(amountTobeWithdrawn) */\n      tag_110\n        /* \"contracts/Staking.sol\":4509:4528  amountTobeWithdrawn */\n      dup3\n        /* \"contracts/Staking.sol\":4493:4504  totalStaked */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":4493:4508  totalStaked.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":4493:4529  totalStaked.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/Staking.sol\":4479:4490  totalStaked */\n      0x07\n        /* \"contracts/Staking.sol\":4479:4529  totalStaked = totalStaked.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4562:4606  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      tag_111\n        /* \"contracts/Staking.sol\":4586:4605  amountTobeWithdrawn */\n      dup3\n        /* \"contracts/Staking.sol\":4562:4568  staker */\n      dup5\n        /* \"contracts/Staking.sol\":4562:4581  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4562:4585  staker.stakedAmount.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":4562:4606  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"contracts/Staking.sol\":4540:4546  staker */\n      dup4\n        /* \"contracts/Staking.sol\":4540:4559  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":4540:4606  staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4617:4668  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      tag_112\n        /* \"contracts/Staking.sol\":4636:4646  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4648:4667  amountTobeWithdrawn */\n      dup4\n        /* \"contracts/Staking.sol\":4617:4622  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4617:4635  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_113\n      swap1\n        /* \"contracts/Staking.sol\":4617:4668  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/Staking.sol\":4686:4727  Withdraw(msg.sender, amountTobeWithdrawn) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/Staking.sol\":4695:4705  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4707:4726  amountTobeWithdrawn */\n      dup4\n        /* \"contracts/Staking.sol\":4686:4727  Withdraw(msg.sender, amountTobeWithdrawn) */\n      mload(0x40)\n      tag_114\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3861:4735  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":3819:4735  function withdraw(uint256 amount) external{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6673:6795  function stakedAmount() public view returns (uint256) {\r... */\n    tag_27:\n        /* \"contracts/Staking.sol\":6718:6725  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":6755:6762  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":6755:6774  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6763:6773  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6755:6774  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6755:6787  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":6748:6787  return _staker[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6673:6795  function stakedAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":6010:6613  function harvest() public{\r... */\n    tag_31:\n        /* \"contracts/Staking.sol\":6056:6070  updateReward() */\n      tag_118\n        /* \"contracts/Staking.sol\":6056:6068  updateReward */\n      tag_82\n        /* \"contracts/Staking.sol\":6056:6070  updateReward() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/Staking.sol\":6081:6102  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":6105:6112  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":6105:6124  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6113:6123  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6105:6124  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6081:6124  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6135:6156  uint256 rewardToClaim */\n      0x00\n        /* \"contracts/Staking.sol\":6159:6248  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      tag_119\n        /* \"contracts/Staking.sol\":6190:6247  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      tag_120\n        /* \"contracts/Staking.sol\":6241:6246  10**4 */\n      0x2710\n        /* \"contracts/Staking.sol\":6190:6236  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      tag_121\n        /* \"contracts/Staking.sol\":6221:6235  _rewardFeeRate */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":6190:6196  staker */\n      dup7\n        /* \"contracts/Staking.sol\":6190:6216  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6190:6220  staker.stakerCurrentReward.mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":6190:6236  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"contracts/Staking.sol\":6190:6240  staker.stakerCurrentReward.mul(_rewardFeeRate).div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":6190:6247  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"contracts/Staking.sol\":6159:6165  staker */\n      dup4\n        /* \"contracts/Staking.sol\":6159:6185  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6159:6189  staker.stakerCurrentReward.sub */\n      tag_98\n      swap1\n        /* \"contracts/Staking.sol\":6159:6248  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/Staking.sol\":6135:6248  uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6293:6294  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6277:6290  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":6277:6294  rewardToClaim > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6269:6315  require(rewardToClaim > 0, \"Nothing to claim\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/Staking.sol\":6346:6351  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6346:6361  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":6362:6375  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6346:6376  token.balanceOf(_bountyWallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_125:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_129:\n        /* \"contracts/Staking.sol\":6330:6343  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":6330:6376  rewardToClaim > token.balanceOf(_bountyWallet) */\n      gt\n        /* \"contracts/Staking.sol\":6326:6437  if (rewardToClaim > token.balanceOf(_bountyWallet))\r... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/Staking.sol\":6407:6412  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6407:6422  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":6423:6436  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6407:6437  token.balanceOf(_bountyWallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_131:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_135:\n        /* \"contracts/Staking.sol\":6391:6437  rewardToClaim = token.balanceOf(_bountyWallet) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6326:6437  if (rewardToClaim > token.balanceOf(_bountyWallet))\r... */\n    tag_130:\n        /* \"contracts/Staking.sol\":6448:6512  token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim) */\n      tag_136\n        /* \"contracts/Staking.sol\":6471:6484  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6486:6496  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6498:6511  rewardToClaim */\n      dup4\n        /* \"contracts/Staking.sol\":6448:6453  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6448:6470  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_137\n      swap1\n        /* \"contracts/Staking.sol\":6448:6512  token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/Staking.sol\":6552:6553  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6523:6529  staker */\n      dup3\n        /* \"contracts/Staking.sol\":6523:6549  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":6523:6553  staker.stakerCurrentReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6571:6605  Harvest(msg.sender, rewardToClaim) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"contracts/Staking.sol\":6579:6589  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6591:6604  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":6571:6605  Harvest(msg.sender, rewardToClaim) */\n      mload(0x40)\n      tag_138\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6035:6613  {\r... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":6010:6613  function harvest() public{\r... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":2763:3187  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n    tag_35:\n        /* \"contracts/Staking.sol\":2857:2858  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2847:2854  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2847:2858  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2839:2894  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_77\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"contracts/Staking.sol\":2943:2950  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":2913:2918  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":2913:2928  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":2929:2939  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2913:2940  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_146:\n        /* \"contracts/Staking.sol\":2913:2950  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":2905:2968  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/Staking.sol\":3025:3026  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2987:2994  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":2987:3006  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2995:3005  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2987:3006  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2987:3021  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":2987:3026  _staker[msg.sender].stakeStartTime != 0 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":2979:3046  require(_staker[msg.sender].stakeStartTime != 0, \"Already started\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/Staking.sol\":3086:3091  _mode */\n      dup1\n        /* \"contracts/Staking.sol\":3059:3066  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":3059:3078  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3067:3077  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3059:3078  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3059:3083  _staker[msg.sender].mode */\n      0x02\n      add\n        /* \"contracts/Staking.sol\":3059:3091  _staker[msg.sender].mode = _mode */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3139:3154  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":3102:3109  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":3102:3121  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3110:3120  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3102:3121  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3102:3136  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n        /* \"contracts/Staking.sol\":3102:3154  _staker[msg.sender].stakeStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3165:3179  stake(_amount) */\n      tag_153\n        /* \"contracts/Staking.sol\":3171:3178  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3165:3170  stake */\n      tag_63\n        /* \"contracts/Staking.sol\":3165:3179  stake(_amount) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/Staking.sol\":2763:3187  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4743:4946  function setFixedAPY(uint256 __fixedAPY) external onlyOwner {\r... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/Staking.sol\":4837:4838  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4824:4834  __fixedAPY */\n      dup2\n        /* \"contracts/Staking.sol\":4824:4838  __fixedAPY > 0 */\n      gt\n        /* \"contracts/Staking.sol\":4816:4854  require(__fixedAPY > 0, \"Invalid APY\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/Staking.sol\":4887:4897  __fixedAPY */\n      dup1\n        /* \"contracts/Staking.sol\":4875:4884  _fixedAPY */\n      0x03\n        /* \"contracts/Staking.sol\":4875:4897  _fixedAPY = __fixedAPY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4915:4938  SetFixedAPY(__fixedAPY) */\n      0xb8f51888a0746f534a064d0d08f74852a939d6cd181760e1cedc7a8396d9e22f\n        /* \"contracts/Staking.sol\":4927:4937  __fixedAPY */\n      dup2\n        /* \"contracts/Staking.sol\":4915:4938  SetFixedAPY(__fixedAPY) */\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":4743:4946  function setFixedAPY(uint256 __fixedAPY) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5810:5969  function rewardToHarvest() public view returns (uint256){\r... */\n    tag_40:\n        /* \"contracts/Staking.sol\":5858:5865  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5922:5929  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":5922:5941  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":5930:5940  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5922:5941  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5922:5961  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":5915:5961  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5810:5969  function rewardToHarvest() public view returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":4954:5202  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_160\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/Staking.sol\":5065:5066  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5049:5062  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":5049:5066  __eventPeriod > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5041:5094  require(__eventPeriod > 0, \"Invalid Lockup Duration\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"contracts/Staking.sol\":5122:5147  __eventPeriod.mul(1 days) */\n      tag_176\n        /* \"contracts/Staking.sol\":5140:5146  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":5122:5135  __eventPeriod */\n      dup3\n        /* \"contracts/Staking.sol\":5122:5139  __eventPeriod.mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":5122:5147  __eventPeriod.mul(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"contracts/Staking.sol\":5107:5119  _eventPeriod */\n      0x02\n        /* \"contracts/Staking.sol\":5107:5147  _eventPeriod = __eventPeriod.mul(1 days) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5165:5194  SetEventPeriod(__eventPeriod) */\n      0x189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c\n        /* \"contracts/Staking.sol\":5180:5193  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":5165:5194  SetEventPeriod(__eventPeriod) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":4954:5202  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_160\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":972:998  uint256 public totalStaked */\n    tag_48:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":5484:5751  function setBountyWallet(address __bountyWallet) external onlyOwner {\r... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_160\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/Staking.sol\":5606:5607  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5581:5608  __bountyWallet > address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":5581:5595  __bountyWallet */\n      dup2\n        /* \"contracts/Staking.sol\":5581:5608  __bountyWallet > address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"contracts/Staking.sol\":5573:5651  require(__bountyWallet > address(0), \"Invalid Address. Address can't be zero\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/Staking.sol\":5680:5694  __bountyWallet */\n      dup1\n        /* \"contracts/Staking.sol\":5664:5677  _bountyWallet */\n      0x05\n      0x00\n        /* \"contracts/Staking.sol\":5664:5694  _bountyWallet = __bountyWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5712:5743  SetBountyWallet(__bountyWallet) */\n      0xeda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a87\n        /* \"contracts/Staking.sol\":5728:5742  __bountyWallet */\n      dup2\n        /* \"contracts/Staking.sol\":5712:5743  SetBountyWallet(__bountyWallet) */\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5484:5751  function setBountyWallet(address __bountyWallet) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5210:5476  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_160\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/Staking.sol\":5328:5329  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5307:5325  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":5307:5329  __unstakingFeeRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5299:5360  require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/Staking.sol\":5393:5411  __unstakingFeeRate */\n      dup1\n        /* \"contracts/Staking.sol\":5373:5390  _unstakingFeeRate */\n      0x01\n        /* \"contracts/Staking.sol\":5373:5411  _unstakingFeeRate = __unstakingFeeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5429:5468  SetUnstakingFeeRate(__unstakingFeeRate) */\n      0x150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81\n        /* \"contracts/Staking.sol\":5449:5467  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":5429:5468  SetUnstakingFeeRate(__unstakingFeeRate) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5210:5476  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":3251:3772  function stake(uint256 _amount) public{\r... */\n    tag_63:\n        /* \"contracts/Staking.sol\":3328:3329  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3318:3325  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":3318:3329  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3310:3365  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_77\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/Staking.sol\":3414:3421  _amount */\n      dup1\n        /* \"contracts/Staking.sol\":3384:3389  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3384:3399  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3400:3410  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3384:3411  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_210:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_214:\n        /* \"contracts/Staking.sol\":3384:3421  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":3376:3439  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_149\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/Staking.sol\":3460:3474  updateReward() */\n      tag_217\n        /* \"contracts/Staking.sol\":3460:3472  updateReward */\n      tag_82\n        /* \"contracts/Staking.sol\":3460:3474  updateReward() */\n      jump\t// in\n    tag_217:\n        /* \"contracts/Staking.sol\":3485:3506  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":3509:3516  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":3509:3528  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3517:3527  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3509:3528  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3485:3528  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3539:3597  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_218\n        /* \"contracts/Staking.sol\":3562:3572  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3582:3586  this */\n      address\n        /* \"contracts/Staking.sol\":3589:3596  _amount */\n      dup5\n        /* \"contracts/Staking.sol\":3539:3544  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3539:3561  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_137\n      swap1\n        /* \"contracts/Staking.sol\":3539:3597  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/Staking.sol\":3630:3662  staker.stakedAmount.add(_amount) */\n      tag_219\n        /* \"contracts/Staking.sol\":3654:3661  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3630:3636  staker */\n      dup3\n        /* \"contracts/Staking.sol\":3630:3649  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":3630:3653  staker.stakedAmount.add */\n      tag_220\n      swap1\n        /* \"contracts/Staking.sol\":3630:3662  staker.stakedAmount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_219:\n        /* \"contracts/Staking.sol\":3608:3614  staker */\n      dup2\n        /* \"contracts/Staking.sol\":3608:3627  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":3608:3662  staker.stakedAmount = staker.stakedAmount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3687:3711  totalStaked.add(_amount) */\n      tag_221\n        /* \"contracts/Staking.sol\":3703:3710  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3687:3698  totalStaked */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":3687:3702  totalStaked.add */\n      tag_220\n      swap1\n        /* \"contracts/Staking.sol\":3687:3711  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"contracts/Staking.sol\":3673:3684  totalStaked */\n      0x07\n        /* \"contracts/Staking.sol\":3673:3711  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3737:3764  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staking.sol\":3744:3754  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3756:3763  _amount */\n      dup4\n        /* \"contracts/Staking.sol\":3737:3764  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_222\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3289:3772  {\r... */\n      pop\n        /* \"contracts/Staking.sol\":3251:3772  function stake(uint256 _amount) public{\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_160\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6803:6922  function rewardAmount() public view returns (uint256) {\r... */\n    tag_68:\n        /* \"contracts/Staking.sol\":6848:6855  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":6875:6882  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":6875:6894  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6883:6893  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6875:6894  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6875:6914  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6868:6914  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6803:6922  function rewardAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1005:1024  IBEP20 public token */\n    tag_71:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":2013:2755  function updateReward() private{\r... */\n    tag_82:\n        /* \"contracts/Staking.sol\":2065:2086  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":2089:2096  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":2089:2108  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2097:2107  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2089:2108  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2065:2108  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2140:2146  staker */\n      dup1\n        /* \"contracts/Staking.sol\":2140:2162  staker.lastUpdatedTime */\n      0x04\n      add\n      sload\n        /* \"contracts/Staking.sol\":2122:2137  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2122:2162  block.timestamp < staker.lastUpdatedTime */\n      lt\n        /* \"contracts/Staking.sol\":2119:2197  if(block.timestamp < staker.lastUpdatedTime) {\r... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/Staking.sol\":2179:2186  return; */\n      pop\n      jump(tag_234)\n        /* \"contracts/Staking.sol\":2119:2197  if(block.timestamp < staker.lastUpdatedTime) {\r... */\n    tag_235:\n        /* \"contracts/Staking.sol\":2215:2231  uint256 duration */\n      0x00\n        /* \"contracts/Staking.sol\":2234:2295  calDaysFromTimestamp(block.timestamp - staker.stakeStartTime) */\n      tag_236\n        /* \"contracts/Staking.sol\":2273:2279  staker */\n      dup3\n        /* \"contracts/Staking.sol\":2273:2294  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":2255:2270  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2255:2294  block.timestamp - staker.stakeStartTime */\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"contracts/Staking.sol\":2234:2254  calDaysFromTimestamp */\n      tag_239\n        /* \"contracts/Staking.sol\":2234:2295  calDaysFromTimestamp(block.timestamp - staker.stakeStartTime) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/Staking.sol\":2215:2295  uint256 duration = calDaysFromTimestamp(block.timestamp - staker.stakeStartTime) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2306:2323  uint256 newReward */\n      0x00\n        /* \"contracts/Staking.sol\":2326:2383  staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4) */\n      tag_240\n        /* \"contracts/Staking.sol\":2379:2382  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2326:2374  staker.stakedAmount.mul(duration).mul(_fixedAPY) */\n      tag_241\n        /* \"contracts/Staking.sol\":2364:2373  _fixedAPY */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2326:2359  staker.stakedAmount.mul(duration) */\n      tag_242\n        /* \"contracts/Staking.sol\":2350:2358  duration */\n      dup7\n        /* \"contracts/Staking.sol\":2326:2332  staker */\n      dup9\n        /* \"contracts/Staking.sol\":2326:2345  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2326:2349  staker.stakedAmount.mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":2326:2359  staker.stakedAmount.mul(duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"contracts/Staking.sol\":2326:2363  staker.stakedAmount.mul(duration).mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":2326:2374  staker.stakedAmount.mul(duration).mul(_fixedAPY) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"contracts/Staking.sol\":2326:2378  staker.stakedAmount.mul(duration).mul(_fixedAPY).div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":2326:2383  staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"contracts/Staking.sol\":2306:2383  uint256 newReward = staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2413:2414  1 */\n      0x01\n        /* \"contracts/Staking.sol\":2398:2404  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2398:2409  staker.mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":2398:2414  staker.mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":2394:2616  if (staker.mode == 1) {\r... */\n      iszero\n      tag_243\n      jumpi\n        /* \"contracts/Staking.sol\":2431:2449  uint256 eventCount */\n      0x00\n        /* \"contracts/Staking.sol\":2452:2478  duration.div(_eventPeriod) */\n      tag_244\n        /* \"contracts/Staking.sol\":2465:2477  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":2452:2460  duration */\n      dup5\n        /* \"contracts/Staking.sol\":2452:2464  duration.div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":2452:2478  duration.div(_eventPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"contracts/Staking.sol\":2431:2478  uint256 eventCount = duration.div(_eventPeriod) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2505:2604  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4) */\n      tag_245\n        /* \"contracts/Staking.sol\":2600:2603  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2505:2595  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))) */\n      tag_246\n        /* \"contracts/Staking.sol\":2545:2594  _fixedAPY.mul(calDaysFromTimestamp(_eventPeriod)) */\n      tag_247\n        /* \"contracts/Staking.sol\":2559:2593  calDaysFromTimestamp(_eventPeriod) */\n      tag_248\n        /* \"contracts/Staking.sol\":2580:2592  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":2559:2579  calDaysFromTimestamp */\n      tag_239\n        /* \"contracts/Staking.sol\":2559:2593  calDaysFromTimestamp(_eventPeriod) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/Staking.sol\":2545:2554  _fixedAPY */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2545:2558  _fixedAPY.mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":2545:2594  _fixedAPY.mul(calDaysFromTimestamp(_eventPeriod)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/Staking.sol\":2505:2540  staker.stakedAmount.mul(eventCount) */\n      tag_249\n        /* \"contracts/Staking.sol\":2529:2539  eventCount */\n      dup6\n        /* \"contracts/Staking.sol\":2505:2511  staker */\n      dup10\n        /* \"contracts/Staking.sol\":2505:2524  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2505:2528  staker.stakedAmount.mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":2505:2540  staker.stakedAmount.mul(eventCount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"contracts/Staking.sol\":2505:2544  staker.stakedAmount.mul(eventCount).mul */\n      tag_109\n      swap1\n        /* \"contracts/Staking.sol\":2505:2595  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_246:\n        /* \"contracts/Staking.sol\":2505:2599  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":2505:2604  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"contracts/Staking.sol\":2493:2604  newReward = staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4) */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":2416:2616  {\r... */\n      pop\n        /* \"contracts/Staking.sol\":2394:2616  if (staker.mode == 1) {\r... */\n    tag_243:\n        /* \"contracts/Staking.sol\":2655:2696  staker.stakerCurrentReward.add(newReward) */\n      tag_250\n        /* \"contracts/Staking.sol\":2686:2695  newReward */\n      dup2\n        /* \"contracts/Staking.sol\":2655:2661  staker */\n      dup5\n        /* \"contracts/Staking.sol\":2655:2681  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":2655:2685  staker.stakerCurrentReward.add */\n      tag_220\n      swap1\n        /* \"contracts/Staking.sol\":2655:2696  staker.stakerCurrentReward.add(newReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"contracts/Staking.sol\":2626:2632  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2626:2652  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":2626:2696  staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2732:2747  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2707:2713  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2707:2729  staker.lastUpdatedTime */\n      0x04\n      add\n        /* \"contracts/Staking.sol\":2707:2747  staker.lastUpdatedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2044:2755  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":2013:2755  function updateReward() private{\r... */\n    tag_234:\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_252\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_257\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n    tag_113:\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_260\n        /* \"contracts/SafeBEP20.sol\":393:398  token */\n      dup4\n        /* \"contracts/SafeBEP20.sol\":423:446  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SafeBEP20.sol\":448:450  to */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":452:457  value */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":400:458  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_261\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":373:392  _callOptionalReturn */\n      tag_262\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n    tag_137:\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_264\n        /* \"contracts/SafeBEP20.sol\":596:601  token */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":626:653  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SafeBEP20.sol\":655:659  from */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":661:663  to */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":665:670  value */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":603:671  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_265\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":576:595  _callOptionalReturn */\n      tag_262\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_270\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":1804:1938  function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r... */\n    tag_239:\n        /* \"contracts/Staking.sol\":1874:1881  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":1911:1930  timedur.div(1 days) */\n      tag_273\n        /* \"contracts/Staking.sol\":1923:1929  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":1911:1918  timedur */\n      dup4\n        /* \"contracts/Staking.sol\":1911:1922  timedur.div */\n      tag_99\n      swap1\n        /* \"contracts/Staking.sol\":1911:1930  timedur.div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"contracts/Staking.sol\":1904:1930  return timedur.div(1 days) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":1804:1938  function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n    tag_262:\n        /* \"contracts/SafeBEP20.sol\":3031:3054  bytes memory returndata */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_275\n        /* \"contracts/SafeBEP20.sol\":3085:3089  data */\n      dup3\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeBEP20.sol\":3065:3070  token */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":3057:3084  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_276\n      swap1\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_275:\n        /* \"contracts/SafeBEP20.sol\":3031:3126  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/SafeBEP20.sol\":3161:3162  0 */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3141:3151  returndata */\n      dup2\n        /* \"contracts/SafeBEP20.sol\":3141:3158  returndata.length */\n      mload\n        /* \"contracts/SafeBEP20.sol\":3141:3162  returndata.length > 0 */\n      gt\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_277\n      jumpi\n        /* \"contracts/SafeBEP20.sol\":3283:3293  returndata */\n      dup1\n        /* \"contracts/SafeBEP20.sol\":3272:3302  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"contracts/SafeBEP20.sol\":3264:3349  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_277:\n        /* \"contracts/SafeBEP20.sol\":2669:3368  {\r... */\n      pop\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_285\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_290\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_291\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_295\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_299\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_298)\n    tag_299:\n      0x60\n      swap2\n      pop\n    tag_298:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_300\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_301\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_301:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_303)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_303:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_311:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_313\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_315:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_317\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_318\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_319:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_321\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_323:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_325\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_322\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_52:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_328\n      tag_329\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":665:784   */\n    tag_327:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_330\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_311\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_279:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_333\n      tag_329\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1008:1127   */\n    tag_332:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_334\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_315\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_24:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_337\n      tag_329\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1351:1470   */\n    tag_336:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_338\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_319\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_88:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_341\n      tag_329\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1697:1816   */\n    tag_340:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_342\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_323\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2441   */\n    tag_34:\n        /* \"#utility.yul\":2035:2041   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup1\n        /* \"#utility.yul\":2092:2094   */\n      0x40\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2071:2078   */\n      dup6\n        /* \"#utility.yul\":2067:2090   */\n      sub\n        /* \"#utility.yul\":2063:2095   */\n      slt\n        /* \"#utility.yul\":2060:2179   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":2098:2177   */\n      tag_345\n      tag_329\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2060:2179   */\n    tag_344:\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2243:2296   */\n      tag_346\n        /* \"#utility.yul\":2288:2295   */\n      dup6\n        /* \"#utility.yul\":2279:2285   */\n      dup3\n        /* \"#utility.yul\":2268:2277   */\n      dup7\n        /* \"#utility.yul\":2264:2286   */\n      add\n        /* \"#utility.yul\":2243:2296   */\n      tag_319\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2233:2296   */\n      swap3\n      pop\n        /* \"#utility.yul\":2189:2306   */\n      pop\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"#utility.yul\":2371:2424   */\n      tag_347\n        /* \"#utility.yul\":2416:2423   */\n      dup6\n        /* \"#utility.yul\":2407:2413   */\n      dup3\n        /* \"#utility.yul\":2396:2405   */\n      dup7\n        /* \"#utility.yul\":2392:2414   */\n      add\n        /* \"#utility.yul\":2371:2424   */\n      tag_319\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2361:2424   */\n      swap2\n      pop\n        /* \"#utility.yul\":2316:2434   */\n      pop\n        /* \"#utility.yul\":1967:2441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2447:2565   */\n    tag_348:\n        /* \"#utility.yul\":2534:2558   */\n      tag_350\n        /* \"#utility.yul\":2552:2557   */\n      dup2\n        /* \"#utility.yul\":2534:2558   */\n      tag_351\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2529:2532   */\n      dup3\n        /* \"#utility.yul\":2522:2559   */\n      mstore\n        /* \"#utility.yul\":2447:2565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2944   */\n    tag_352:\n        /* \"#utility.yul\":2675:2678   */\n      0x00\n        /* \"#utility.yul\":2703:2741   */\n      tag_354\n        /* \"#utility.yul\":2735:2740   */\n      dup3\n        /* \"#utility.yul\":2703:2741   */\n      tag_355\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2757:2845   */\n      tag_356\n        /* \"#utility.yul\":2838:2844   */\n      dup2\n        /* \"#utility.yul\":2833:2836   */\n      dup6\n        /* \"#utility.yul\":2757:2845   */\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":2750:2845   */\n      swap4\n      pop\n        /* \"#utility.yul\":2854:2906   */\n      tag_358\n        /* \"#utility.yul\":2899:2905   */\n      dup2\n        /* \"#utility.yul\":2894:2897   */\n      dup6\n        /* \"#utility.yul\":2887:2891   */\n      0x20\n        /* \"#utility.yul\":2880:2885   */\n      dup7\n        /* \"#utility.yul\":2876:2892   */\n      add\n        /* \"#utility.yul\":2854:2906   */\n      tag_359\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2931:2937   */\n      dup1\n        /* \"#utility.yul\":2926:2929   */\n      dup5\n        /* \"#utility.yul\":2922:2938   */\n      add\n        /* \"#utility.yul\":2915:2938   */\n      swap2\n      pop\n        /* \"#utility.yul\":2679:2944   */\n      pop\n        /* \"#utility.yul\":2571:2944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2950:3109   */\n    tag_360:\n        /* \"#utility.yul\":3051:3102   */\n      tag_362\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3051:3102   */\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3046:3049   */\n      dup3\n        /* \"#utility.yul\":3039:3103   */\n      mstore\n        /* \"#utility.yul\":2950:3109   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3479   */\n    tag_364:\n        /* \"#utility.yul\":3203:3206   */\n      0x00\n        /* \"#utility.yul\":3231:3270   */\n      tag_366\n        /* \"#utility.yul\":3264:3269   */\n      dup3\n        /* \"#utility.yul\":3231:3270   */\n      tag_367\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3286:3357   */\n      tag_368\n        /* \"#utility.yul\":3350:3356   */\n      dup2\n        /* \"#utility.yul\":3345:3348   */\n      dup6\n        /* \"#utility.yul\":3286:3357   */\n      tag_369\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3279:3357   */\n      swap4\n      pop\n        /* \"#utility.yul\":3366:3418   */\n      tag_370\n        /* \"#utility.yul\":3411:3417   */\n      dup2\n        /* \"#utility.yul\":3406:3409   */\n      dup6\n        /* \"#utility.yul\":3399:3403   */\n      0x20\n        /* \"#utility.yul\":3392:3397   */\n      dup7\n        /* \"#utility.yul\":3388:3404   */\n      add\n        /* \"#utility.yul\":3366:3418   */\n      tag_359\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":3443:3472   */\n      tag_371\n        /* \"#utility.yul\":3465:3471   */\n      dup2\n        /* \"#utility.yul\":3443:3472   */\n      tag_372\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3438:3441   */\n      dup5\n        /* \"#utility.yul\":3434:3473   */\n      add\n        /* \"#utility.yul\":3427:3473   */\n      swap2\n      pop\n        /* \"#utility.yul\":3207:3479   */\n      pop\n        /* \"#utility.yul\":3115:3479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3485:3851   */\n    tag_373:\n        /* \"#utility.yul\":3627:3630   */\n      0x00\n        /* \"#utility.yul\":3648:3715   */\n      tag_375\n        /* \"#utility.yul\":3712:3714   */\n      0x10\n        /* \"#utility.yul\":3707:3710   */\n      dup4\n        /* \"#utility.yul\":3648:3715   */\n      tag_369\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3641:3715   */\n      swap2\n      pop\n        /* \"#utility.yul\":3724:3817   */\n      tag_376\n        /* \"#utility.yul\":3813:3816   */\n      dup3\n        /* \"#utility.yul\":3724:3817   */\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3842:3844   */\n      0x20\n        /* \"#utility.yul\":3837:3840   */\n      dup3\n        /* \"#utility.yul\":3833:3845   */\n      add\n        /* \"#utility.yul\":3826:3845   */\n      swap1\n      pop\n        /* \"#utility.yul\":3485:3851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3857:4223   */\n    tag_378:\n        /* \"#utility.yul\":3999:4002   */\n      0x00\n        /* \"#utility.yul\":4020:4087   */\n      tag_380\n        /* \"#utility.yul\":4084:4086   */\n      0x2a\n        /* \"#utility.yul\":4079:4082   */\n      dup4\n        /* \"#utility.yul\":4020:4087   */\n      tag_369\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4013:4087   */\n      swap2\n      pop\n        /* \"#utility.yul\":4096:4189   */\n      tag_381\n        /* \"#utility.yul\":4185:4188   */\n      dup3\n        /* \"#utility.yul\":4096:4189   */\n      tag_382\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4209:4212   */\n      dup3\n        /* \"#utility.yul\":4205:4217   */\n      add\n        /* \"#utility.yul\":4198:4217   */\n      swap1\n      pop\n        /* \"#utility.yul\":3857:4223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4229:4595   */\n    tag_383:\n        /* \"#utility.yul\":4371:4374   */\n      0x00\n        /* \"#utility.yul\":4392:4459   */\n      tag_385\n        /* \"#utility.yul\":4456:4458   */\n      0x26\n        /* \"#utility.yul\":4451:4454   */\n      dup4\n        /* \"#utility.yul\":4392:4459   */\n      tag_369\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4385:4459   */\n      swap2\n      pop\n        /* \"#utility.yul\":4468:4561   */\n      tag_386\n        /* \"#utility.yul\":4557:4560   */\n      dup3\n        /* \"#utility.yul\":4468:4561   */\n      tag_387\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":4586:4588   */\n      0x40\n        /* \"#utility.yul\":4581:4584   */\n      dup3\n        /* \"#utility.yul\":4577:4589   */\n      add\n        /* \"#utility.yul\":4570:4589   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4601:4967   */\n    tag_388:\n        /* \"#utility.yul\":4743:4746   */\n      0x00\n        /* \"#utility.yul\":4764:4831   */\n      tag_390\n        /* \"#utility.yul\":4828:4830   */\n      0x0e\n        /* \"#utility.yul\":4823:4826   */\n      dup4\n        /* \"#utility.yul\":4764:4831   */\n      tag_369\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":4757:4831   */\n      swap2\n      pop\n        /* \"#utility.yul\":4840:4933   */\n      tag_391\n        /* \"#utility.yul\":4929:4932   */\n      dup3\n        /* \"#utility.yul\":4840:4933   */\n      tag_392\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4958:4960   */\n      0x20\n        /* \"#utility.yul\":4953:4956   */\n      dup3\n        /* \"#utility.yul\":4949:4961   */\n      add\n        /* \"#utility.yul\":4942:4961   */\n      swap1\n      pop\n        /* \"#utility.yul\":4601:4967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4973:5339   */\n    tag_393:\n        /* \"#utility.yul\":5115:5118   */\n      0x00\n        /* \"#utility.yul\":5136:5203   */\n      tag_395\n        /* \"#utility.yul\":5200:5202   */\n      0x0f\n        /* \"#utility.yul\":5195:5198   */\n      dup4\n        /* \"#utility.yul\":5136:5203   */\n      tag_369\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":5129:5203   */\n      swap2\n      pop\n        /* \"#utility.yul\":5212:5305   */\n      tag_396\n        /* \"#utility.yul\":5301:5304   */\n      dup3\n        /* \"#utility.yul\":5212:5305   */\n      tag_397\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5330:5332   */\n      0x20\n        /* \"#utility.yul\":5325:5328   */\n      dup3\n        /* \"#utility.yul\":5321:5333   */\n      add\n        /* \"#utility.yul\":5314:5333   */\n      swap1\n      pop\n        /* \"#utility.yul\":4973:5339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5345:5711   */\n    tag_398:\n        /* \"#utility.yul\":5487:5490   */\n      0x00\n        /* \"#utility.yul\":5508:5575   */\n      tag_400\n        /* \"#utility.yul\":5572:5574   */\n      0x26\n        /* \"#utility.yul\":5567:5570   */\n      dup4\n        /* \"#utility.yul\":5508:5575   */\n      tag_369\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":5501:5575   */\n      swap2\n      pop\n        /* \"#utility.yul\":5584:5677   */\n      tag_401\n        /* \"#utility.yul\":5673:5676   */\n      dup3\n        /* \"#utility.yul\":5584:5677   */\n      tag_402\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5702:5704   */\n      0x40\n        /* \"#utility.yul\":5697:5700   */\n      dup3\n        /* \"#utility.yul\":5693:5705   */\n      add\n        /* \"#utility.yul\":5686:5705   */\n      swap1\n      pop\n        /* \"#utility.yul\":5345:5711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5717:6083   */\n    tag_403:\n        /* \"#utility.yul\":5859:5862   */\n      0x00\n        /* \"#utility.yul\":5880:5947   */\n      tag_405\n        /* \"#utility.yul\":5944:5946   */\n      0x26\n        /* \"#utility.yul\":5939:5942   */\n      dup4\n        /* \"#utility.yul\":5880:5947   */\n      tag_369\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5873:5947   */\n      swap2\n      pop\n        /* \"#utility.yul\":5956:6049   */\n      tag_406\n        /* \"#utility.yul\":6045:6048   */\n      dup3\n        /* \"#utility.yul\":5956:6049   */\n      tag_407\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":6074:6076   */\n      0x40\n        /* \"#utility.yul\":6069:6072   */\n      dup3\n        /* \"#utility.yul\":6065:6077   */\n      add\n        /* \"#utility.yul\":6058:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5717:6083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6089:6455   */\n    tag_408:\n        /* \"#utility.yul\":6231:6234   */\n      0x00\n        /* \"#utility.yul\":6252:6319   */\n      tag_410\n        /* \"#utility.yul\":6316:6318   */\n      0x1f\n        /* \"#utility.yul\":6311:6314   */\n      dup4\n        /* \"#utility.yul\":6252:6319   */\n      tag_369\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":6245:6319   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6421   */\n      tag_411\n        /* \"#utility.yul\":6417:6420   */\n      dup3\n        /* \"#utility.yul\":6328:6421   */\n      tag_412\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6446:6448   */\n      0x20\n        /* \"#utility.yul\":6441:6444   */\n      dup3\n        /* \"#utility.yul\":6437:6449   */\n      add\n        /* \"#utility.yul\":6430:6449   */\n      swap1\n      pop\n        /* \"#utility.yul\":6089:6455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6461:6827   */\n    tag_413:\n        /* \"#utility.yul\":6603:6606   */\n      0x00\n        /* \"#utility.yul\":6624:6691   */\n      tag_415\n        /* \"#utility.yul\":6688:6690   */\n      0x20\n        /* \"#utility.yul\":6683:6686   */\n      dup4\n        /* \"#utility.yul\":6624:6691   */\n      tag_369\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":6617:6691   */\n      swap2\n      pop\n        /* \"#utility.yul\":6700:6793   */\n      tag_416\n        /* \"#utility.yul\":6789:6792   */\n      dup3\n        /* \"#utility.yul\":6700:6793   */\n      tag_417\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6818:6820   */\n      0x20\n        /* \"#utility.yul\":6813:6816   */\n      dup3\n        /* \"#utility.yul\":6809:6821   */\n      add\n        /* \"#utility.yul\":6802:6821   */\n      swap1\n      pop\n        /* \"#utility.yul\":6461:6827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6833:7199   */\n    tag_418:\n        /* \"#utility.yul\":6975:6978   */\n      0x00\n        /* \"#utility.yul\":6996:7063   */\n      tag_420\n        /* \"#utility.yul\":7060:7062   */\n      0x0b\n        /* \"#utility.yul\":7055:7058   */\n      dup4\n        /* \"#utility.yul\":6996:7063   */\n      tag_369\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6989:7063   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7165   */\n      tag_421\n        /* \"#utility.yul\":7161:7164   */\n      dup3\n        /* \"#utility.yul\":7072:7165   */\n      tag_422\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7190:7192   */\n      0x20\n        /* \"#utility.yul\":7185:7188   */\n      dup3\n        /* \"#utility.yul\":7181:7193   */\n      add\n        /* \"#utility.yul\":7174:7193   */\n      swap1\n      pop\n        /* \"#utility.yul\":6833:7199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7205:7571   */\n    tag_423:\n        /* \"#utility.yul\":7347:7350   */\n      0x00\n        /* \"#utility.yul\":7368:7435   */\n      tag_425\n        /* \"#utility.yul\":7432:7434   */\n      0x1d\n        /* \"#utility.yul\":7427:7430   */\n      dup4\n        /* \"#utility.yul\":7368:7435   */\n      tag_369\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7361:7435   */\n      swap2\n      pop\n        /* \"#utility.yul\":7444:7537   */\n      tag_426\n        /* \"#utility.yul\":7533:7536   */\n      dup3\n        /* \"#utility.yul\":7444:7537   */\n      tag_427\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7557:7560   */\n      dup3\n        /* \"#utility.yul\":7553:7565   */\n      add\n        /* \"#utility.yul\":7546:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7205:7571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7577:7943   */\n    tag_428:\n        /* \"#utility.yul\":7719:7722   */\n      0x00\n        /* \"#utility.yul\":7740:7807   */\n      tag_430\n        /* \"#utility.yul\":7804:7806   */\n      0x1a\n        /* \"#utility.yul\":7799:7802   */\n      dup4\n        /* \"#utility.yul\":7740:7807   */\n      tag_369\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7733:7807   */\n      swap2\n      pop\n        /* \"#utility.yul\":7816:7909   */\n      tag_431\n        /* \"#utility.yul\":7905:7908   */\n      dup3\n        /* \"#utility.yul\":7816:7909   */\n      tag_432\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7934:7936   */\n      0x20\n        /* \"#utility.yul\":7929:7932   */\n      dup3\n        /* \"#utility.yul\":7925:7937   */\n      add\n        /* \"#utility.yul\":7918:7937   */\n      swap1\n      pop\n        /* \"#utility.yul\":7577:7943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7949:8315   */\n    tag_433:\n        /* \"#utility.yul\":8091:8094   */\n      0x00\n        /* \"#utility.yul\":8112:8179   */\n      tag_435\n        /* \"#utility.yul\":8176:8178   */\n      0x17\n        /* \"#utility.yul\":8171:8174   */\n      dup4\n        /* \"#utility.yul\":8112:8179   */\n      tag_369\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":8105:8179   */\n      swap2\n      pop\n        /* \"#utility.yul\":8188:8281   */\n      tag_436\n        /* \"#utility.yul\":8277:8280   */\n      dup3\n        /* \"#utility.yul\":8188:8281   */\n      tag_437\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8306:8308   */\n      0x20\n        /* \"#utility.yul\":8301:8304   */\n      dup3\n        /* \"#utility.yul\":8297:8309   */\n      add\n        /* \"#utility.yul\":8290:8309   */\n      swap1\n      pop\n        /* \"#utility.yul\":7949:8315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8321:8687   */\n    tag_438:\n        /* \"#utility.yul\":8463:8466   */\n      0x00\n        /* \"#utility.yul\":8484:8551   */\n      tag_440\n        /* \"#utility.yul\":8548:8550   */\n      0x0d\n        /* \"#utility.yul\":8543:8546   */\n      dup4\n        /* \"#utility.yul\":8484:8551   */\n      tag_369\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8477:8551   */\n      swap2\n      pop\n        /* \"#utility.yul\":8560:8653   */\n      tag_441\n        /* \"#utility.yul\":8649:8652   */\n      dup3\n        /* \"#utility.yul\":8560:8653   */\n      tag_442\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8678:8680   */\n      0x20\n        /* \"#utility.yul\":8673:8676   */\n      dup3\n        /* \"#utility.yul\":8669:8681   */\n      add\n        /* \"#utility.yul\":8662:8681   */\n      swap1\n      pop\n        /* \"#utility.yul\":8321:8687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8693:8811   */\n    tag_443:\n        /* \"#utility.yul\":8780:8804   */\n      tag_445\n        /* \"#utility.yul\":8798:8803   */\n      dup2\n        /* \"#utility.yul\":8780:8804   */\n      tag_446\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8775:8778   */\n      dup3\n        /* \"#utility.yul\":8768:8805   */\n      mstore\n        /* \"#utility.yul\":8693:8811   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8817:9088   */\n    tag_296:\n        /* \"#utility.yul\":8947:8950   */\n      0x00\n        /* \"#utility.yul\":8969:9062   */\n      tag_448\n        /* \"#utility.yul\":9058:9061   */\n      dup3\n        /* \"#utility.yul\":9049:9055   */\n      dup5\n        /* \"#utility.yul\":8969:9062   */\n      tag_352\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8962:9062   */\n      swap2\n      pop\n        /* \"#utility.yul\":9079:9082   */\n      dup2\n        /* \"#utility.yul\":9072:9082   */\n      swap1\n      pop\n        /* \"#utility.yul\":8817:9088   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9094:9316   */\n    tag_57:\n        /* \"#utility.yul\":9187:9191   */\n      0x00\n        /* \"#utility.yul\":9225:9227   */\n      0x20\n        /* \"#utility.yul\":9214:9223   */\n      dup3\n        /* \"#utility.yul\":9210:9228   */\n      add\n        /* \"#utility.yul\":9202:9228   */\n      swap1\n      pop\n        /* \"#utility.yul\":9238:9309   */\n      tag_450\n        /* \"#utility.yul\":9306:9307   */\n      0x00\n        /* \"#utility.yul\":9295:9304   */\n      dup4\n        /* \"#utility.yul\":9291:9308   */\n      add\n        /* \"#utility.yul\":9282:9288   */\n      dup5\n        /* \"#utility.yul\":9238:9309   */\n      tag_348\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9094:9316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9322:9764   */\n    tag_266:\n        /* \"#utility.yul\":9471:9475   */\n      0x00\n        /* \"#utility.yul\":9509:9511   */\n      0x60\n        /* \"#utility.yul\":9498:9507   */\n      dup3\n        /* \"#utility.yul\":9494:9512   */\n      add\n        /* \"#utility.yul\":9486:9512   */\n      swap1\n      pop\n        /* \"#utility.yul\":9522:9593   */\n      tag_452\n        /* \"#utility.yul\":9590:9591   */\n      0x00\n        /* \"#utility.yul\":9579:9588   */\n      dup4\n        /* \"#utility.yul\":9575:9592   */\n      add\n        /* \"#utility.yul\":9566:9572   */\n      dup7\n        /* \"#utility.yul\":9522:9593   */\n      tag_348\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":9603:9675   */\n      tag_453\n        /* \"#utility.yul\":9671:9673   */\n      0x20\n        /* \"#utility.yul\":9660:9669   */\n      dup4\n        /* \"#utility.yul\":9656:9674   */\n      add\n        /* \"#utility.yul\":9647:9653   */\n      dup6\n        /* \"#utility.yul\":9603:9675   */\n      tag_348\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9685:9757   */\n      tag_454\n        /* \"#utility.yul\":9753:9755   */\n      0x40\n        /* \"#utility.yul\":9742:9751   */\n      dup4\n        /* \"#utility.yul\":9738:9756   */\n      add\n        /* \"#utility.yul\":9729:9735   */\n      dup5\n        /* \"#utility.yul\":9685:9757   */\n      tag_443\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9322:9764   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9770:10102   */\n    tag_115:\n        /* \"#utility.yul\":9891:9895   */\n      0x00\n        /* \"#utility.yul\":9929:9931   */\n      0x40\n        /* \"#utility.yul\":9918:9927   */\n      dup3\n        /* \"#utility.yul\":9914:9932   */\n      add\n        /* \"#utility.yul\":9906:9932   */\n      swap1\n      pop\n        /* \"#utility.yul\":9942:10013   */\n      tag_456\n        /* \"#utility.yul\":10010:10011   */\n      0x00\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9995:10012   */\n      add\n        /* \"#utility.yul\":9986:9992   */\n      dup6\n        /* \"#utility.yul\":9942:10013   */\n      tag_348\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10023:10095   */\n      tag_457\n        /* \"#utility.yul\":10091:10093   */\n      0x20\n        /* \"#utility.yul\":10080:10089   */\n      dup4\n        /* \"#utility.yul\":10076:10094   */\n      add\n        /* \"#utility.yul\":10067:10073   */\n      dup5\n        /* \"#utility.yul\":10023:10095   */\n      tag_443\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9770:10102   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10108:10358   */\n    tag_73:\n        /* \"#utility.yul\":10215:10219   */\n      0x00\n        /* \"#utility.yul\":10253:10255   */\n      0x20\n        /* \"#utility.yul\":10242:10251   */\n      dup3\n        /* \"#utility.yul\":10238:10256   */\n      add\n        /* \"#utility.yul\":10230:10256   */\n      swap1\n      pop\n        /* \"#utility.yul\":10266:10351   */\n      tag_459\n        /* \"#utility.yul\":10348:10349   */\n      0x00\n        /* \"#utility.yul\":10337:10346   */\n      dup4\n        /* \"#utility.yul\":10333:10350   */\n      add\n        /* \"#utility.yul\":10324:10330   */\n      dup5\n        /* \"#utility.yul\":10266:10351   */\n      tag_360\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":10108:10358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10364:10677   */\n    tag_309:\n        /* \"#utility.yul\":10477:10481   */\n      0x00\n        /* \"#utility.yul\":10515:10517   */\n      0x20\n        /* \"#utility.yul\":10504:10513   */\n      dup3\n        /* \"#utility.yul\":10500:10518   */\n      add\n        /* \"#utility.yul\":10492:10518   */\n      swap1\n      pop\n        /* \"#utility.yul\":10564:10573   */\n      dup2\n        /* \"#utility.yul\":10558:10562   */\n      dup2\n        /* \"#utility.yul\":10554:10574   */\n      sub\n        /* \"#utility.yul\":10550:10551   */\n      0x00\n        /* \"#utility.yul\":10539:10548   */\n      dup4\n        /* \"#utility.yul\":10535:10552   */\n      add\n        /* \"#utility.yul\":10528:10575   */\n      mstore\n        /* \"#utility.yul\":10592:10670   */\n      tag_461\n        /* \"#utility.yul\":10665:10669   */\n      dup2\n        /* \"#utility.yul\":10656:10662   */\n      dup5\n        /* \"#utility.yul\":10592:10670   */\n      tag_364\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10584:10670   */\n      swap1\n      pop\n        /* \"#utility.yul\":10364:10677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10683:11102   */\n    tag_124:\n        /* \"#utility.yul\":10849:10853   */\n      0x00\n        /* \"#utility.yul\":10887:10889   */\n      0x20\n        /* \"#utility.yul\":10876:10885   */\n      dup3\n        /* \"#utility.yul\":10872:10890   */\n      add\n        /* \"#utility.yul\":10864:10890   */\n      swap1\n      pop\n        /* \"#utility.yul\":10936:10945   */\n      dup2\n        /* \"#utility.yul\":10930:10934   */\n      dup2\n        /* \"#utility.yul\":10926:10946   */\n      sub\n        /* \"#utility.yul\":10922:10923   */\n      0x00\n        /* \"#utility.yul\":10911:10920   */\n      dup4\n        /* \"#utility.yul\":10907:10924   */\n      add\n        /* \"#utility.yul\":10900:10947   */\n      mstore\n        /* \"#utility.yul\":10964:11095   */\n      tag_463\n        /* \"#utility.yul\":11090:11094   */\n      dup2\n        /* \"#utility.yul\":10964:11095   */\n      tag_373\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":10956:11095   */\n      swap1\n      pop\n        /* \"#utility.yul\":10683:11102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11108:11527   */\n    tag_282:\n        /* \"#utility.yul\":11274:11278   */\n      0x00\n        /* \"#utility.yul\":11312:11314   */\n      0x20\n        /* \"#utility.yul\":11301:11310   */\n      dup3\n        /* \"#utility.yul\":11297:11315   */\n      add\n        /* \"#utility.yul\":11289:11315   */\n      swap1\n      pop\n        /* \"#utility.yul\":11361:11370   */\n      dup2\n        /* \"#utility.yul\":11355:11359   */\n      dup2\n        /* \"#utility.yul\":11351:11371   */\n      sub\n        /* \"#utility.yul\":11347:11348   */\n      0x00\n        /* \"#utility.yul\":11336:11345   */\n      dup4\n        /* \"#utility.yul\":11332:11349   */\n      add\n        /* \"#utility.yul\":11325:11372   */\n      mstore\n        /* \"#utility.yul\":11389:11520   */\n      tag_465\n        /* \"#utility.yul\":11515:11519   */\n      dup2\n        /* \"#utility.yul\":11389:11520   */\n      tag_378\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":11381:11520   */\n      swap1\n      pop\n        /* \"#utility.yul\":11108:11527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11952   */\n    tag_231:\n        /* \"#utility.yul\":11699:11703   */\n      0x00\n        /* \"#utility.yul\":11737:11739   */\n      0x20\n        /* \"#utility.yul\":11726:11735   */\n      dup3\n        /* \"#utility.yul\":11722:11740   */\n      add\n        /* \"#utility.yul\":11714:11740   */\n      swap1\n      pop\n        /* \"#utility.yul\":11786:11795   */\n      dup2\n        /* \"#utility.yul\":11780:11784   */\n      dup2\n        /* \"#utility.yul\":11776:11796   */\n      sub\n        /* \"#utility.yul\":11772:11773   */\n      0x00\n        /* \"#utility.yul\":11761:11770   */\n      dup4\n        /* \"#utility.yul\":11757:11774   */\n      add\n        /* \"#utility.yul\":11750:11797   */\n      mstore\n        /* \"#utility.yul\":11814:11945   */\n      tag_467\n        /* \"#utility.yul\":11940:11944   */\n      dup2\n        /* \"#utility.yul\":11814:11945   */\n      tag_383\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":11806:11945   */\n      swap1\n      pop\n        /* \"#utility.yul\":11533:11952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11958:12377   */\n    tag_80:\n        /* \"#utility.yul\":12124:12128   */\n      0x00\n        /* \"#utility.yul\":12162:12164   */\n      0x20\n        /* \"#utility.yul\":12151:12160   */\n      dup3\n        /* \"#utility.yul\":12147:12165   */\n      add\n        /* \"#utility.yul\":12139:12165   */\n      swap1\n      pop\n        /* \"#utility.yul\":12211:12220   */\n      dup2\n        /* \"#utility.yul\":12205:12209   */\n      dup2\n        /* \"#utility.yul\":12201:12221   */\n      sub\n        /* \"#utility.yul\":12197:12198   */\n      0x00\n        /* \"#utility.yul\":12186:12195   */\n      dup4\n        /* \"#utility.yul\":12182:12199   */\n      add\n        /* \"#utility.yul\":12175:12222   */\n      mstore\n        /* \"#utility.yul\":12239:12370   */\n      tag_469\n        /* \"#utility.yul\":12365:12369   */\n      dup2\n        /* \"#utility.yul\":12239:12370   */\n      tag_388\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":12231:12370   */\n      swap1\n      pop\n        /* \"#utility.yul\":11958:12377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12383:12802   */\n    tag_152:\n        /* \"#utility.yul\":12549:12553   */\n      0x00\n        /* \"#utility.yul\":12587:12589   */\n      0x20\n        /* \"#utility.yul\":12576:12585   */\n      dup3\n        /* \"#utility.yul\":12572:12590   */\n      add\n        /* \"#utility.yul\":12564:12590   */\n      swap1\n      pop\n        /* \"#utility.yul\":12636:12645   */\n      dup2\n        /* \"#utility.yul\":12630:12634   */\n      dup2\n        /* \"#utility.yul\":12626:12646   */\n      sub\n        /* \"#utility.yul\":12622:12623   */\n      0x00\n        /* \"#utility.yul\":12611:12620   */\n      dup4\n        /* \"#utility.yul\":12607:12624   */\n      add\n        /* \"#utility.yul\":12600:12647   */\n      mstore\n        /* \"#utility.yul\":12664:12795   */\n      tag_471\n        /* \"#utility.yul\":12790:12794   */\n      dup2\n        /* \"#utility.yul\":12664:12795   */\n      tag_393\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":12656:12795   */\n      swap1\n      pop\n        /* \"#utility.yul\":12383:12802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12808:13227   */\n    tag_289:\n        /* \"#utility.yul\":12974:12978   */\n      0x00\n        /* \"#utility.yul\":13012:13014   */\n      0x20\n        /* \"#utility.yul\":13001:13010   */\n      dup3\n        /* \"#utility.yul\":12997:13015   */\n      add\n        /* \"#utility.yul\":12989:13015   */\n      swap1\n      pop\n        /* \"#utility.yul\":13061:13070   */\n      dup2\n        /* \"#utility.yul\":13055:13059   */\n      dup2\n        /* \"#utility.yul\":13051:13071   */\n      sub\n        /* \"#utility.yul\":13047:13048   */\n      0x00\n        /* \"#utility.yul\":13036:13045   */\n      dup4\n        /* \"#utility.yul\":13032:13049   */\n      add\n        /* \"#utility.yul\":13025:13072   */\n      mstore\n        /* \"#utility.yul\":13089:13220   */\n      tag_473\n        /* \"#utility.yul\":13215:13219   */\n      dup2\n        /* \"#utility.yul\":13089:13220   */\n      tag_398\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13081:13220   */\n      swap1\n      pop\n        /* \"#utility.yul\":12808:13227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13233:13652   */\n    tag_194:\n        /* \"#utility.yul\":13399:13403   */\n      0x00\n        /* \"#utility.yul\":13437:13439   */\n      0x20\n        /* \"#utility.yul\":13426:13435   */\n      dup3\n        /* \"#utility.yul\":13422:13440   */\n      add\n        /* \"#utility.yul\":13414:13440   */\n      swap1\n      pop\n        /* \"#utility.yul\":13486:13495   */\n      dup2\n        /* \"#utility.yul\":13480:13484   */\n      dup2\n        /* \"#utility.yul\":13476:13496   */\n      sub\n        /* \"#utility.yul\":13472:13473   */\n      0x00\n        /* \"#utility.yul\":13461:13470   */\n      dup4\n        /* \"#utility.yul\":13457:13474   */\n      add\n        /* \"#utility.yul\":13450:13497   */\n      mstore\n        /* \"#utility.yul\":13514:13645   */\n      tag_475\n        /* \"#utility.yul\":13640:13644   */\n      dup2\n        /* \"#utility.yul\":13514:13645   */\n      tag_403\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":13506:13645   */\n      swap1\n      pop\n        /* \"#utility.yul\":13233:13652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13658:14077   */\n    tag_77:\n        /* \"#utility.yul\":13824:13828   */\n      0x00\n        /* \"#utility.yul\":13862:13864   */\n      0x20\n        /* \"#utility.yul\":13851:13860   */\n      dup3\n        /* \"#utility.yul\":13847:13865   */\n      add\n        /* \"#utility.yul\":13839:13865   */\n      swap1\n      pop\n        /* \"#utility.yul\":13911:13920   */\n      dup2\n        /* \"#utility.yul\":13905:13909   */\n      dup2\n        /* \"#utility.yul\":13901:13921   */\n      sub\n        /* \"#utility.yul\":13897:13898   */\n      0x00\n        /* \"#utility.yul\":13886:13895   */\n      dup4\n        /* \"#utility.yul\":13882:13899   */\n      add\n        /* \"#utility.yul\":13875:13922   */\n      mstore\n        /* \"#utility.yul\":13939:14070   */\n      tag_477\n        /* \"#utility.yul\":14065:14069   */\n      dup2\n        /* \"#utility.yul\":13939:14070   */\n      tag_408\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":13931:14070   */\n      swap1\n      pop\n        /* \"#utility.yul\":13658:14077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14083:14502   */\n    tag_160:\n        /* \"#utility.yul\":14249:14253   */\n      0x00\n        /* \"#utility.yul\":14287:14289   */\n      0x20\n        /* \"#utility.yul\":14276:14285   */\n      dup3\n        /* \"#utility.yul\":14272:14290   */\n      add\n        /* \"#utility.yul\":14264:14290   */\n      swap1\n      pop\n        /* \"#utility.yul\":14336:14345   */\n      dup2\n        /* \"#utility.yul\":14330:14334   */\n      dup2\n        /* \"#utility.yul\":14326:14346   */\n      sub\n        /* \"#utility.yul\":14322:14323   */\n      0x00\n        /* \"#utility.yul\":14311:14320   */\n      dup4\n        /* \"#utility.yul\":14307:14324   */\n      add\n        /* \"#utility.yul\":14300:14347   */\n      mstore\n        /* \"#utility.yul\":14364:14495   */\n      tag_479\n        /* \"#utility.yul\":14490:14494   */\n      dup2\n        /* \"#utility.yul\":14364:14495   */\n      tag_413\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":14356:14495   */\n      swap1\n      pop\n        /* \"#utility.yul\":14083:14502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14508:14927   */\n    tag_164:\n        /* \"#utility.yul\":14674:14678   */\n      0x00\n        /* \"#utility.yul\":14712:14714   */\n      0x20\n        /* \"#utility.yul\":14701:14710   */\n      dup3\n        /* \"#utility.yul\":14697:14715   */\n      add\n        /* \"#utility.yul\":14689:14715   */\n      swap1\n      pop\n        /* \"#utility.yul\":14761:14770   */\n      dup2\n        /* \"#utility.yul\":14755:14759   */\n      dup2\n        /* \"#utility.yul\":14751:14771   */\n      sub\n        /* \"#utility.yul\":14747:14748   */\n      0x00\n        /* \"#utility.yul\":14736:14745   */\n      dup4\n        /* \"#utility.yul\":14732:14749   */\n      add\n        /* \"#utility.yul\":14725:14772   */\n      mstore\n        /* \"#utility.yul\":14789:14920   */\n      tag_481\n        /* \"#utility.yul\":14915:14919   */\n      dup2\n        /* \"#utility.yul\":14789:14920   */\n      tag_418\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":14781:14920   */\n      swap1\n      pop\n        /* \"#utility.yul\":14508:14927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14933:15352   */\n    tag_294:\n        /* \"#utility.yul\":15099:15103   */\n      0x00\n        /* \"#utility.yul\":15137:15139   */\n      0x20\n        /* \"#utility.yul\":15126:15135   */\n      dup3\n        /* \"#utility.yul\":15122:15140   */\n      add\n        /* \"#utility.yul\":15114:15140   */\n      swap1\n      pop\n        /* \"#utility.yul\":15186:15195   */\n      dup2\n        /* \"#utility.yul\":15180:15184   */\n      dup2\n        /* \"#utility.yul\":15176:15196   */\n      sub\n        /* \"#utility.yul\":15172:15173   */\n      0x00\n        /* \"#utility.yul\":15161:15170   */\n      dup4\n        /* \"#utility.yul\":15157:15174   */\n      add\n        /* \"#utility.yul\":15150:15197   */\n      mstore\n        /* \"#utility.yul\":15214:15345   */\n      tag_483\n        /* \"#utility.yul\":15340:15344   */\n      dup2\n        /* \"#utility.yul\":15214:15345   */\n      tag_423\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15206:15345   */\n      swap1\n      pop\n        /* \"#utility.yul\":14933:15352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15358:15777   */\n    tag_205:\n        /* \"#utility.yul\":15524:15528   */\n      0x00\n        /* \"#utility.yul\":15562:15564   */\n      0x20\n        /* \"#utility.yul\":15551:15560   */\n      dup3\n        /* \"#utility.yul\":15547:15565   */\n      add\n        /* \"#utility.yul\":15539:15565   */\n      swap1\n      pop\n        /* \"#utility.yul\":15611:15620   */\n      dup2\n        /* \"#utility.yul\":15605:15609   */\n      dup2\n        /* \"#utility.yul\":15601:15621   */\n      sub\n        /* \"#utility.yul\":15597:15598   */\n      0x00\n        /* \"#utility.yul\":15586:15595   */\n      dup4\n        /* \"#utility.yul\":15582:15599   */\n      add\n        /* \"#utility.yul\":15575:15622   */\n      mstore\n        /* \"#utility.yul\":15639:15770   */\n      tag_485\n        /* \"#utility.yul\":15765:15769   */\n      dup2\n        /* \"#utility.yul\":15639:15770   */\n      tag_428\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":15631:15770   */\n      swap1\n      pop\n        /* \"#utility.yul\":15358:15777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15783:16202   */\n    tag_175:\n        /* \"#utility.yul\":15949:15953   */\n      0x00\n        /* \"#utility.yul\":15987:15989   */\n      0x20\n        /* \"#utility.yul\":15976:15985   */\n      dup3\n        /* \"#utility.yul\":15972:15990   */\n      add\n        /* \"#utility.yul\":15964:15990   */\n      swap1\n      pop\n        /* \"#utility.yul\":16036:16045   */\n      dup2\n        /* \"#utility.yul\":16030:16034   */\n      dup2\n        /* \"#utility.yul\":16026:16046   */\n      sub\n        /* \"#utility.yul\":16022:16023   */\n      0x00\n        /* \"#utility.yul\":16011:16020   */\n      dup4\n        /* \"#utility.yul\":16007:16024   */\n      add\n        /* \"#utility.yul\":16000:16047   */\n      mstore\n        /* \"#utility.yul\":16064:16195   */\n      tag_487\n        /* \"#utility.yul\":16190:16194   */\n      dup2\n        /* \"#utility.yul\":16064:16195   */\n      tag_433\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":16056:16195   */\n      swap1\n      pop\n        /* \"#utility.yul\":15783:16202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16208:16627   */\n    tag_149:\n        /* \"#utility.yul\":16374:16378   */\n      0x00\n        /* \"#utility.yul\":16412:16414   */\n      0x20\n        /* \"#utility.yul\":16401:16410   */\n      dup3\n        /* \"#utility.yul\":16397:16415   */\n      add\n        /* \"#utility.yul\":16389:16415   */\n      swap1\n      pop\n        /* \"#utility.yul\":16461:16470   */\n      dup2\n        /* \"#utility.yul\":16455:16459   */\n      dup2\n        /* \"#utility.yul\":16451:16471   */\n      sub\n        /* \"#utility.yul\":16447:16448   */\n      0x00\n        /* \"#utility.yul\":16436:16445   */\n      dup4\n        /* \"#utility.yul\":16432:16449   */\n      add\n        /* \"#utility.yul\":16425:16472   */\n      mstore\n        /* \"#utility.yul\":16489:16620   */\n      tag_489\n        /* \"#utility.yul\":16615:16619   */\n      dup2\n        /* \"#utility.yul\":16489:16620   */\n      tag_438\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":16481:16620   */\n      swap1\n      pop\n        /* \"#utility.yul\":16208:16627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16633:16855   */\n    tag_29:\n        /* \"#utility.yul\":16726:16730   */\n      0x00\n        /* \"#utility.yul\":16764:16766   */\n      0x20\n        /* \"#utility.yul\":16753:16762   */\n      dup3\n        /* \"#utility.yul\":16749:16767   */\n      add\n        /* \"#utility.yul\":16741:16767   */\n      swap1\n      pop\n        /* \"#utility.yul\":16777:16848   */\n      tag_491\n        /* \"#utility.yul\":16845:16846   */\n      0x00\n        /* \"#utility.yul\":16834:16843   */\n      dup4\n        /* \"#utility.yul\":16830:16847   */\n      add\n        /* \"#utility.yul\":16821:16827   */\n      dup5\n        /* \"#utility.yul\":16777:16848   */\n      tag_443\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":16633:16855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16942:17040   */\n    tag_355:\n        /* \"#utility.yul\":16993:16999   */\n      0x00\n        /* \"#utility.yul\":17027:17032   */\n      dup2\n        /* \"#utility.yul\":17021:17033   */\n      mload\n        /* \"#utility.yul\":17011:17033   */\n      swap1\n      pop\n        /* \"#utility.yul\":16942:17040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17046:17145   */\n    tag_367:\n        /* \"#utility.yul\":17098:17104   */\n      0x00\n        /* \"#utility.yul\":17132:17137   */\n      dup2\n        /* \"#utility.yul\":17126:17138   */\n      mload\n        /* \"#utility.yul\":17116:17138   */\n      swap1\n      pop\n        /* \"#utility.yul\":17046:17145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17151:17298   */\n    tag_357:\n        /* \"#utility.yul\":17252:17263   */\n      0x00\n        /* \"#utility.yul\":17289:17292   */\n      dup2\n        /* \"#utility.yul\":17274:17292   */\n      swap1\n      pop\n        /* \"#utility.yul\":17151:17298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17304:17473   */\n    tag_369:\n        /* \"#utility.yul\":17388:17399   */\n      0x00\n        /* \"#utility.yul\":17422:17428   */\n      dup3\n        /* \"#utility.yul\":17417:17420   */\n      dup3\n        /* \"#utility.yul\":17410:17429   */\n      mstore\n        /* \"#utility.yul\":17462:17466   */\n      0x20\n        /* \"#utility.yul\":17457:17460   */\n      dup3\n        /* \"#utility.yul\":17453:17467   */\n      add\n        /* \"#utility.yul\":17438:17467   */\n      swap1\n      pop\n        /* \"#utility.yul\":17304:17473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17479:17784   */\n    tag_271:\n        /* \"#utility.yul\":17519:17522   */\n      0x00\n        /* \"#utility.yul\":17538:17558   */\n      tag_499\n        /* \"#utility.yul\":17556:17557   */\n      dup3\n        /* \"#utility.yul\":17538:17558   */\n      tag_446\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":17533:17558   */\n      swap2\n      pop\n        /* \"#utility.yul\":17572:17592   */\n      tag_500\n        /* \"#utility.yul\":17590:17591   */\n      dup4\n        /* \"#utility.yul\":17572:17592   */\n      tag_446\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":17567:17592   */\n      swap3\n      pop\n        /* \"#utility.yul\":17726:17727   */\n      dup3\n        /* \"#utility.yul\":17658:17724   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17654:17728   */\n      sub\n        /* \"#utility.yul\":17651:17652   */\n      dup3\n        /* \"#utility.yul\":17648:17729   */\n      gt\n        /* \"#utility.yul\":17645:17752   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":17732:17750   */\n      tag_502\n      tag_503\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":17645:17752   */\n    tag_501:\n        /* \"#utility.yul\":17776:17777   */\n      dup3\n        /* \"#utility.yul\":17773:17774   */\n      dup3\n        /* \"#utility.yul\":17769:17778   */\n      add\n        /* \"#utility.yul\":17762:17778   */\n      swap1\n      pop\n        /* \"#utility.yul\":17479:17784   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17790:17975   */\n    tag_255:\n        /* \"#utility.yul\":17830:17831   */\n      0x00\n        /* \"#utility.yul\":17847:17867   */\n      tag_505\n        /* \"#utility.yul\":17865:17866   */\n      dup3\n        /* \"#utility.yul\":17847:17867   */\n      tag_446\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":17842:17867   */\n      swap2\n      pop\n        /* \"#utility.yul\":17881:17901   */\n      tag_506\n        /* \"#utility.yul\":17899:17900   */\n      dup4\n        /* \"#utility.yul\":17881:17901   */\n      tag_446\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":17876:17901   */\n      swap3\n      pop\n        /* \"#utility.yul\":17920:17921   */\n      dup3\n        /* \"#utility.yul\":17910:17945   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":17925:17943   */\n      tag_508\n      tag_509\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":17910:17945   */\n    tag_507:\n        /* \"#utility.yul\":17967:17968   */\n      dup3\n        /* \"#utility.yul\":17964:17965   */\n      dup3\n        /* \"#utility.yul\":17960:17969   */\n      div\n        /* \"#utility.yul\":17955:17969   */\n      swap1\n      pop\n        /* \"#utility.yul\":17790:17975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17981:18329   */\n    tag_258:\n        /* \"#utility.yul\":18021:18028   */\n      0x00\n        /* \"#utility.yul\":18044:18064   */\n      tag_511\n        /* \"#utility.yul\":18062:18063   */\n      dup3\n        /* \"#utility.yul\":18044:18064   */\n      tag_446\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":18039:18064   */\n      swap2\n      pop\n        /* \"#utility.yul\":18078:18098   */\n      tag_512\n        /* \"#utility.yul\":18096:18097   */\n      dup4\n        /* \"#utility.yul\":18078:18098   */\n      tag_446\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":18073:18098   */\n      swap3\n      pop\n        /* \"#utility.yul\":18266:18267   */\n      dup2\n        /* \"#utility.yul\":18198:18264   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18194:18268   */\n      div\n        /* \"#utility.yul\":18191:18192   */\n      dup4\n        /* \"#utility.yul\":18188:18269   */\n      gt\n        /* \"#utility.yul\":18183:18184   */\n      dup3\n        /* \"#utility.yul\":18176:18185   */\n      iszero\n        /* \"#utility.yul\":18169:18186   */\n      iszero\n        /* \"#utility.yul\":18165:18270   */\n      and\n        /* \"#utility.yul\":18162:18293   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":18273:18291   */\n      tag_514\n      tag_503\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":18162:18293   */\n    tag_513:\n        /* \"#utility.yul\":18321:18322   */\n      dup3\n        /* \"#utility.yul\":18318:18319   */\n      dup3\n        /* \"#utility.yul\":18314:18323   */\n      mul\n        /* \"#utility.yul\":18303:18323   */\n      swap1\n      pop\n        /* \"#utility.yul\":17981:18329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18335:18526   */\n    tag_238:\n        /* \"#utility.yul\":18375:18379   */\n      0x00\n        /* \"#utility.yul\":18395:18415   */\n      tag_516\n        /* \"#utility.yul\":18413:18414   */\n      dup3\n        /* \"#utility.yul\":18395:18415   */\n      tag_446\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":18390:18415   */\n      swap2\n      pop\n        /* \"#utility.yul\":18429:18449   */\n      tag_517\n        /* \"#utility.yul\":18447:18448   */\n      dup4\n        /* \"#utility.yul\":18429:18449   */\n      tag_446\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":18424:18449   */\n      swap3\n      pop\n        /* \"#utility.yul\":18468:18469   */\n      dup3\n        /* \"#utility.yul\":18465:18466   */\n      dup3\n        /* \"#utility.yul\":18462:18470   */\n      lt\n        /* \"#utility.yul\":18459:18493   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":18473:18491   */\n      tag_519\n      tag_503\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":18459:18493   */\n    tag_518:\n        /* \"#utility.yul\":18518:18519   */\n      dup3\n        /* \"#utility.yul\":18515:18516   */\n      dup3\n        /* \"#utility.yul\":18511:18520   */\n      sub\n        /* \"#utility.yul\":18503:18520   */\n      swap1\n      pop\n        /* \"#utility.yul\":18335:18526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18532:18628   */\n    tag_351:\n        /* \"#utility.yul\":18569:18576   */\n      0x00\n        /* \"#utility.yul\":18598:18622   */\n      tag_521\n        /* \"#utility.yul\":18616:18621   */\n      dup3\n        /* \"#utility.yul\":18598:18622   */\n      tag_522\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":18587:18622   */\n      swap1\n      pop\n        /* \"#utility.yul\":18532:18628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18634:18724   */\n    tag_523:\n        /* \"#utility.yul\":18668:18675   */\n      0x00\n        /* \"#utility.yul\":18711:18716   */\n      dup2\n        /* \"#utility.yul\":18704:18717   */\n      iszero\n        /* \"#utility.yul\":18697:18718   */\n      iszero\n        /* \"#utility.yul\":18686:18718   */\n      swap1\n      pop\n        /* \"#utility.yul\":18634:18724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18730:18856   */\n    tag_522:\n        /* \"#utility.yul\":18767:18774   */\n      0x00\n        /* \"#utility.yul\":18807:18849   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18800:18805   */\n      dup3\n        /* \"#utility.yul\":18796:18850   */\n      and\n        /* \"#utility.yul\":18785:18850   */\n      swap1\n      pop\n        /* \"#utility.yul\":18730:18856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18862:18939   */\n    tag_446:\n        /* \"#utility.yul\":18899:18906   */\n      0x00\n        /* \"#utility.yul\":18928:18933   */\n      dup2\n        /* \"#utility.yul\":18917:18933   */\n      swap1\n      pop\n        /* \"#utility.yul\":18862:18939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18945:19085   */\n    tag_363:\n        /* \"#utility.yul\":19009:19018   */\n      0x00\n        /* \"#utility.yul\":19042:19079   */\n      tag_528\n        /* \"#utility.yul\":19073:19078   */\n      dup3\n        /* \"#utility.yul\":19042:19079   */\n      tag_529\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":19029:19079   */\n      swap1\n      pop\n        /* \"#utility.yul\":18945:19085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19091:19217   */\n    tag_529:\n        /* \"#utility.yul\":19141:19150   */\n      0x00\n        /* \"#utility.yul\":19174:19211   */\n      tag_531\n        /* \"#utility.yul\":19205:19210   */\n      dup3\n        /* \"#utility.yul\":19174:19211   */\n      tag_532\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":19161:19211   */\n      swap1\n      pop\n        /* \"#utility.yul\":19091:19217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19223:19336   */\n    tag_532:\n        /* \"#utility.yul\":19273:19282   */\n      0x00\n        /* \"#utility.yul\":19306:19330   */\n      tag_534\n        /* \"#utility.yul\":19324:19329   */\n      dup3\n        /* \"#utility.yul\":19306:19330   */\n      tag_522\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":19293:19330   */\n      swap1\n      pop\n        /* \"#utility.yul\":19223:19336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19342:19649   */\n    tag_359:\n        /* \"#utility.yul\":19410:19411   */\n      0x00\n        /* \"#utility.yul\":19420:19533   */\n    tag_536:\n        /* \"#utility.yul\":19434:19440   */\n      dup4\n        /* \"#utility.yul\":19431:19432   */\n      dup2\n        /* \"#utility.yul\":19428:19441   */\n      lt\n        /* \"#utility.yul\":19420:19533   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":19519:19520   */\n      dup1\n        /* \"#utility.yul\":19514:19517   */\n      dup3\n        /* \"#utility.yul\":19510:19521   */\n      add\n        /* \"#utility.yul\":19504:19522   */\n      mload\n        /* \"#utility.yul\":19500:19501   */\n      dup2\n        /* \"#utility.yul\":19495:19498   */\n      dup5\n        /* \"#utility.yul\":19491:19502   */\n      add\n        /* \"#utility.yul\":19484:19523   */\n      mstore\n        /* \"#utility.yul\":19456:19458   */\n      0x20\n        /* \"#utility.yul\":19453:19454   */\n      dup2\n        /* \"#utility.yul\":19449:19459   */\n      add\n        /* \"#utility.yul\":19444:19459   */\n      swap1\n      pop\n        /* \"#utility.yul\":19420:19533   */\n      jump(tag_536)\n    tag_538:\n        /* \"#utility.yul\":19551:19557   */\n      dup4\n        /* \"#utility.yul\":19548:19549   */\n      dup2\n        /* \"#utility.yul\":19545:19558   */\n      gt\n        /* \"#utility.yul\":19542:19643   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":19631:19632   */\n      0x00\n        /* \"#utility.yul\":19622:19628   */\n      dup5\n        /* \"#utility.yul\":19617:19620   */\n      dup5\n        /* \"#utility.yul\":19613:19629   */\n      add\n        /* \"#utility.yul\":19606:19633   */\n      mstore\n        /* \"#utility.yul\":19542:19643   */\n    tag_539:\n        /* \"#utility.yul\":19391:19649   */\n      pop\n        /* \"#utility.yul\":19342:19649   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19655:19831   */\n    tag_101:\n        /* \"#utility.yul\":19687:19688   */\n      0x00\n        /* \"#utility.yul\":19704:19724   */\n      tag_541\n        /* \"#utility.yul\":19722:19723   */\n      dup3\n        /* \"#utility.yul\":19704:19724   */\n      tag_446\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":19699:19724   */\n      swap2\n      pop\n        /* \"#utility.yul\":19738:19758   */\n      tag_542\n        /* \"#utility.yul\":19756:19757   */\n      dup4\n        /* \"#utility.yul\":19738:19758   */\n      tag_446\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":19733:19758   */\n      swap3\n      pop\n        /* \"#utility.yul\":19777:19778   */\n      dup3\n        /* \"#utility.yul\":19767:19802   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":19782:19800   */\n      tag_544\n      tag_509\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":19767:19802   */\n    tag_543:\n        /* \"#utility.yul\":19823:19824   */\n      dup3\n        /* \"#utility.yul\":19820:19821   */\n      dup3\n        /* \"#utility.yul\":19816:19825   */\n      mod\n        /* \"#utility.yul\":19811:19825   */\n      swap1\n      pop\n        /* \"#utility.yul\":19655:19831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19837:20017   */\n    tag_503:\n        /* \"#utility.yul\":19885:19962   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19882:19883   */\n      0x00\n        /* \"#utility.yul\":19875:19963   */\n      mstore\n        /* \"#utility.yul\":19982:19986   */\n      0x11\n        /* \"#utility.yul\":19979:19980   */\n      0x04\n        /* \"#utility.yul\":19972:19987   */\n      mstore\n        /* \"#utility.yul\":20006:20010   */\n      0x24\n        /* \"#utility.yul\":20003:20004   */\n      0x00\n        /* \"#utility.yul\":19996:20011   */\n      revert\n        /* \"#utility.yul\":20023:20203   */\n    tag_509:\n        /* \"#utility.yul\":20071:20148   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20068:20069   */\n      0x00\n        /* \"#utility.yul\":20061:20149   */\n      mstore\n        /* \"#utility.yul\":20168:20172   */\n      0x12\n        /* \"#utility.yul\":20165:20166   */\n      0x04\n        /* \"#utility.yul\":20158:20173   */\n      mstore\n        /* \"#utility.yul\":20192:20196   */\n      0x24\n        /* \"#utility.yul\":20189:20190   */\n      0x00\n        /* \"#utility.yul\":20182:20197   */\n      revert\n        /* \"#utility.yul\":20332:20449   */\n    tag_329:\n        /* \"#utility.yul\":20441:20442   */\n      0x00\n        /* \"#utility.yul\":20438:20439   */\n      dup1\n        /* \"#utility.yul\":20431:20443   */\n      revert\n        /* \"#utility.yul\":20455:20557   */\n    tag_372:\n        /* \"#utility.yul\":20496:20502   */\n      0x00\n        /* \"#utility.yul\":20547:20549   */\n      0x1f\n        /* \"#utility.yul\":20543:20550   */\n      not\n        /* \"#utility.yul\":20538:20540   */\n      0x1f\n        /* \"#utility.yul\":20531:20536   */\n      dup4\n        /* \"#utility.yul\":20527:20541   */\n      add\n        /* \"#utility.yul\":20523:20551   */\n      and\n        /* \"#utility.yul\":20513:20551   */\n      swap1\n      pop\n        /* \"#utility.yul\":20455:20557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20563:20729   */\n    tag_377:\n        /* \"#utility.yul\":20703:20721   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":20699:20700   */\n      0x00\n        /* \"#utility.yul\":20691:20697   */\n      dup3\n        /* \"#utility.yul\":20687:20701   */\n      add\n        /* \"#utility.yul\":20680:20722   */\n      mstore\n        /* \"#utility.yul\":20563:20729   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20735:20964   */\n    tag_382:\n        /* \"#utility.yul\":20875:20909   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":20871:20872   */\n      0x00\n        /* \"#utility.yul\":20863:20869   */\n      dup3\n        /* \"#utility.yul\":20859:20873   */\n      add\n        /* \"#utility.yul\":20852:20910   */\n      mstore\n        /* \"#utility.yul\":20944:20956   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20939:20941   */\n      0x20\n        /* \"#utility.yul\":20931:20937   */\n      dup3\n        /* \"#utility.yul\":20927:20942   */\n      add\n        /* \"#utility.yul\":20920:20957   */\n      mstore\n        /* \"#utility.yul\":20735:20964   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20970:21195   */\n    tag_387:\n        /* \"#utility.yul\":21110:21144   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":21106:21107   */\n      0x00\n        /* \"#utility.yul\":21098:21104   */\n      dup3\n        /* \"#utility.yul\":21094:21108   */\n      add\n        /* \"#utility.yul\":21087:21145   */\n      mstore\n        /* \"#utility.yul\":21179:21187   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21174:21176   */\n      0x20\n        /* \"#utility.yul\":21166:21172   */\n      dup3\n        /* \"#utility.yul\":21162:21177   */\n      add\n        /* \"#utility.yul\":21155:21188   */\n      mstore\n        /* \"#utility.yul\":20970:21195   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21201:21365   */\n    tag_392:\n        /* \"#utility.yul\":21341:21357   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":21337:21338   */\n      0x00\n        /* \"#utility.yul\":21329:21335   */\n      dup3\n        /* \"#utility.yul\":21325:21339   */\n      add\n        /* \"#utility.yul\":21318:21358   */\n      mstore\n        /* \"#utility.yul\":21201:21365   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21371:21536   */\n    tag_397:\n        /* \"#utility.yul\":21511:21528   */\n      0x416c726561647920737461727465640000000000000000000000000000000000\n        /* \"#utility.yul\":21507:21508   */\n      0x00\n        /* \"#utility.yul\":21499:21505   */\n      dup3\n        /* \"#utility.yul\":21495:21509   */\n      add\n        /* \"#utility.yul\":21488:21529   */\n      mstore\n        /* \"#utility.yul\":21371:21536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21542:21767   */\n    tag_402:\n        /* \"#utility.yul\":21682:21716   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":21678:21679   */\n      0x00\n        /* \"#utility.yul\":21670:21676   */\n      dup3\n        /* \"#utility.yul\":21666:21680   */\n      add\n        /* \"#utility.yul\":21659:21717   */\n      mstore\n        /* \"#utility.yul\":21751:21759   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21746:21748   */\n      0x20\n        /* \"#utility.yul\":21738:21744   */\n      dup3\n        /* \"#utility.yul\":21734:21749   */\n      add\n        /* \"#utility.yul\":21727:21760   */\n      mstore\n        /* \"#utility.yul\":21542:21767   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21773:21998   */\n    tag_407:\n        /* \"#utility.yul\":21913:21947   */\n      0x496e76616c696420416464726573732e20416464726573732063616e27742062\n        /* \"#utility.yul\":21909:21910   */\n      0x00\n        /* \"#utility.yul\":21901:21907   */\n      dup3\n        /* \"#utility.yul\":21897:21911   */\n      add\n        /* \"#utility.yul\":21890:21948   */\n      mstore\n        /* \"#utility.yul\":21982:21990   */\n      0x65207a65726f0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21977:21979   */\n      0x20\n        /* \"#utility.yul\":21969:21975   */\n      dup3\n        /* \"#utility.yul\":21965:21980   */\n      add\n        /* \"#utility.yul\":21958:21991   */\n      mstore\n        /* \"#utility.yul\":21773:21998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22004:22185   */\n    tag_412:\n        /* \"#utility.yul\":22144:22177   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":22140:22141   */\n      0x00\n        /* \"#utility.yul\":22132:22138   */\n      dup3\n        /* \"#utility.yul\":22128:22142   */\n      add\n        /* \"#utility.yul\":22121:22178   */\n      mstore\n        /* \"#utility.yul\":22004:22185   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22191:22373   */\n    tag_417:\n        /* \"#utility.yul\":22331:22365   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":22327:22328   */\n      0x00\n        /* \"#utility.yul\":22319:22325   */\n      dup3\n        /* \"#utility.yul\":22315:22329   */\n      add\n        /* \"#utility.yul\":22308:22366   */\n      mstore\n        /* \"#utility.yul\":22191:22373   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22379:22540   */\n    tag_422:\n        /* \"#utility.yul\":22519:22532   */\n      0x496e76616c696420415059000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22515:22516   */\n      0x00\n        /* \"#utility.yul\":22507:22513   */\n      dup3\n        /* \"#utility.yul\":22503:22517   */\n      add\n        /* \"#utility.yul\":22496:22533   */\n      mstore\n        /* \"#utility.yul\":22379:22540   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22546:22725   */\n    tag_427:\n        /* \"#utility.yul\":22686:22717   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":22682:22683   */\n      0x00\n        /* \"#utility.yul\":22674:22680   */\n      dup3\n        /* \"#utility.yul\":22670:22684   */\n      add\n        /* \"#utility.yul\":22663:22718   */\n      mstore\n        /* \"#utility.yul\":22546:22725   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22731:22907   */\n    tag_432:\n        /* \"#utility.yul\":22871:22899   */\n      0x496e76616c696420556e7374616b696e67204665652052617465000000000000\n        /* \"#utility.yul\":22867:22868   */\n      0x00\n        /* \"#utility.yul\":22859:22865   */\n      dup3\n        /* \"#utility.yul\":22855:22869   */\n      add\n        /* \"#utility.yul\":22848:22900   */\n      mstore\n        /* \"#utility.yul\":22731:22907   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22913:23086   */\n    tag_437:\n        /* \"#utility.yul\":23053:23078   */\n      0x496e76616c6964204c6f636b7570204475726174696f6e000000000000000000\n        /* \"#utility.yul\":23049:23050   */\n      0x00\n        /* \"#utility.yul\":23041:23047   */\n      dup3\n        /* \"#utility.yul\":23037:23051   */\n      add\n        /* \"#utility.yul\":23030:23079   */\n      mstore\n        /* \"#utility.yul\":22913:23086   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23092:23255   */\n    tag_442:\n        /* \"#utility.yul\":23232:23247   */\n      0x496e73756666696369656e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":23228:23229   */\n      0x00\n        /* \"#utility.yul\":23220:23226   */\n      dup3\n        /* \"#utility.yul\":23216:23230   */\n      add\n        /* \"#utility.yul\":23209:23248   */\n      mstore\n        /* \"#utility.yul\":23092:23255   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23261:23383   */\n    tag_314:\n        /* \"#utility.yul\":23334:23358   */\n      tag_566\n        /* \"#utility.yul\":23352:23357   */\n      dup2\n        /* \"#utility.yul\":23334:23358   */\n      tag_351\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":23327:23332   */\n      dup2\n        /* \"#utility.yul\":23324:23359   */\n      eq\n        /* \"#utility.yul\":23314:23377   */\n      tag_567\n      jumpi\n        /* \"#utility.yul\":23373:23374   */\n      0x00\n        /* \"#utility.yul\":23370:23371   */\n      dup1\n        /* \"#utility.yul\":23363:23375   */\n      revert\n        /* \"#utility.yul\":23314:23377   */\n    tag_567:\n        /* \"#utility.yul\":23261:23383   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23389:23505   */\n    tag_318:\n        /* \"#utility.yul\":23459:23480   */\n      tag_569\n        /* \"#utility.yul\":23474:23479   */\n      dup2\n        /* \"#utility.yul\":23459:23480   */\n      tag_523\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":23452:23457   */\n      dup2\n        /* \"#utility.yul\":23449:23481   */\n      eq\n        /* \"#utility.yul\":23439:23499   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":23495:23496   */\n      0x00\n        /* \"#utility.yul\":23492:23493   */\n      dup1\n        /* \"#utility.yul\":23485:23497   */\n      revert\n        /* \"#utility.yul\":23439:23499   */\n    tag_570:\n        /* \"#utility.yul\":23389:23505   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23511:23633   */\n    tag_322:\n        /* \"#utility.yul\":23584:23608   */\n      tag_572\n        /* \"#utility.yul\":23602:23607   */\n      dup2\n        /* \"#utility.yul\":23584:23608   */\n      tag_446\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":23577:23582   */\n      dup2\n        /* \"#utility.yul\":23574:23609   */\n      eq\n        /* \"#utility.yul\":23564:23627   */\n      tag_573\n      jumpi\n        /* \"#utility.yul\":23623:23624   */\n      0x00\n        /* \"#utility.yul\":23620:23621   */\n      dup1\n        /* \"#utility.yul\":23613:23625   */\n      revert\n        /* \"#utility.yul\":23564:23627   */\n    tag_573:\n        /* \"#utility.yul\":23511:23633   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fb3abc68934819b2ea9a3b98772fadfbaefed7b04321398e0a169313bf6b89aa64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@Init_1251": {
									"entryPoint": 445,
									"id": 1251,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1231": {
									"entryPoint": null,
									"id": 1231,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 241,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 249,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "7:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:8"
															},
															"nodeType": "YulIf",
															"src": "260:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:8",
														"type": ""
													}
												],
												"src": "156:507:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:8",
														"type": ""
													}
												],
												"src": "669:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:8",
														"type": ""
													}
												],
												"src": "750:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:8",
														"type": ""
													}
												],
												"src": "852:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:8"
															},
															"nodeType": "YulIf",
															"src": "1283:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:8",
														"type": ""
													}
												],
												"src": "1230:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002a8d38038062002a8d8339818101604052810190620000379190620001f9565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b62000067620001bd60201b60201c565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000293565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b607d6003819055506105dc60018190555060c860048190555062093a80600281905550565b600081519050620001f38162000279565b92915050565b6000806040838503121562000213576200021262000274565b5b60006200022385828601620001e2565b92505060206200023685828601620001e2565b9150509250929050565b60006200024d8262000254565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620002848162000240565b81146200029057600080fd5b50565b6127ea80620002a36000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063817b1cd211610097578063a694fc3a11610066578063a694fc3a14610239578063f2fde38b14610255578063f7b2a7be14610271578063fc0c546a1461028f57610100565b8063817b1cd2146101c55780638a9d3839146101e35780638da5cb5b146101ff57806391e07e7a1461021d57610100565b806350f19c87116100d357806350f19c87146101655780635d2ec65d14610181578063692642e71461019f578063715018a6146101bb57610100565b80632e1a7d4d14610105578063373d6132146101215780634641257d1461013f5780634b77dd9e14610149575b600080fd5b61011f600480360381019061011a9190611c37565b6102ad565b005b610129610664565b60405161013691906121e1565b60405180910390f35b6101476106ae565b005b610163600480360381019061015e9190611c91565b6109df565b005b61017f600480360381019061017a9190611c37565b610c2f565b005b610189610d2f565b60405161019691906121e1565b60405180910390f35b6101b960048036038101906101b49190611c37565b610d79565b005b6101c3610e8e565b005b6101cd610f16565b6040516101da91906121e1565b60405180910390f35b6101fd60048036038101906101f89190611bdd565b610f1c565b005b610207611082565b6040516102149190611f69565b60405180910390f35b61023760048036038101906102329190611c37565b6110ab565b005b610253600480360381019061024e9190611c37565b6111ab565b005b61026f600480360381019061026a9190611bdd565b6113eb565b005b6102796114e3565b60405161028691906121e1565b60405180910390f35b61029761152d565b6040516102a49190611fe4565b60405180910390f35b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008211610333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032a90612101565b60405180910390fd5b806001015482111561037a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037190612081565b60405180910390fd5b610382611553565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103df9190611f69565b60206040518083038186803b1580156103f757600080fd5b505afa15801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f9190611c64565b83106104e557600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104909190611f69565b60206040518083038186803b1580156104a857600080fd5b505afa1580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e09190611c64565b6104e7565b825b905060008060025461051b6201518061050d8760030154426116ba90919063ffffffff16565b6116d090919063ffffffff16565b61052591906123f4565b14610531576001610534565b60005b60ff16905061059c61058d61271061057f60015461057187610563888b600201546116e690919063ffffffff16565b6116e690919063ffffffff16565b6116e690919063ffffffff16565b6116d090919063ffffffff16565b836116ba90919063ffffffff16565b91506105b3826007546116ba90919063ffffffff16565b6007819055506105d08284600101546116ba90919063ffffffff16565b83600101819055506106253383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116fc9092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643383604051610656929190611fbb565b60405180910390a150505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6106b6611553565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061073e61072b61271061071d60045486600001546116e690919063ffffffff16565b6116d090919063ffffffff16565b83600001546116ba90919063ffffffff16565b905060008111610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077a90612021565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108009190611f69565b60206040518083038186803b15801561081857600080fd5b505afa15801561082c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108509190611c64565b81111561092757600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108d49190611f69565b60206040518083038186803b1580156108ec57600080fd5b505afa158015610900573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109249190611c64565b90505b610998600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611782909392919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba33826040516109d3929190611fbb565b60405180910390a15050565b60008211610a22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1990612101565b60405180910390fd5b81600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a7e9190611f69565b60206040518083038186803b158015610a9657600080fd5b505afa158015610aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ace9190611c64565b11610b0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b05906121c1565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541415610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b906120a1565b60405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550610c2b826111ab565b5050565b610c3761180b565b73ffffffffffffffffffffffffffffffffffffffff16610c55611082565b73ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290612121565b60405180910390fd5b60008111610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce590612141565b60405180910390fd5b806003819055507fb8f51888a0746f534a064d0d08f74852a939d6cd181760e1cedc7a8396d9e22f81604051610d2491906121e1565b60405180910390a150565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610d8161180b565b73ffffffffffffffffffffffffffffffffffffffff16610d9f611082565b73ffffffffffffffffffffffffffffffffffffffff1614610df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dec90612121565b60405180910390fd5b60008111610e38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2f906121a1565b60405180910390fd5b610e4e62015180826116e690919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610e8391906121e1565b60405180910390a150565b610e9661180b565b73ffffffffffffffffffffffffffffffffffffffff16610eb4611082565b73ffffffffffffffffffffffffffffffffffffffff1614610f0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0190612121565b60405180910390fd5b610f146000611813565b565b60075481565b610f2461180b565b73ffffffffffffffffffffffffffffffffffffffff16610f42611082565b73ffffffffffffffffffffffffffffffffffffffff1614610f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8f90612121565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1611611007576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffe906120e1565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a87816040516110779190611f69565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110b361180b565b73ffffffffffffffffffffffffffffffffffffffff166110d1611082565b73ffffffffffffffffffffffffffffffffffffffff1614611127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111e90612121565b60405180910390fd5b6000811161116a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116190612181565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516111a091906121e1565b60405180910390a150565b600081116111ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e590612101565b60405180910390fd5b80600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161124a9190611f69565b60206040518083038186803b15801561126257600080fd5b505afa158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a9190611c64565b116112da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d1906121c1565b60405180910390fd5b6112e2611553565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611374333084600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611782909392919063ffffffff16565b61138b8282600101546118d790919063ffffffff16565b81600101819055506113a8826007546118d790919063ffffffff16565b6007819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33836040516113df929190611fbb565b60405180910390a15050565b6113f361180b565b73ffffffffffffffffffffffffffffffffffffffff16611411611082565b73ffffffffffffffffffffffffffffffffffffffff1614611467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145e90612121565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ce90612061565b60405180910390fd5b6114e081611813565b50565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600401544210156115a857506116b8565b60006115c28260030154426115bd919061230f565b6118ed565b905060006116056127106115f76003546115e98688600101546116e690919063ffffffff16565b6116e690919063ffffffff16565b6116d090919063ffffffff16565b905060018360020154141561168c57600061162b600254846116d090919063ffffffff16565b905061168861271061167a6116556116446002546118ed565b6003546116e690919063ffffffff16565b61166c8589600101546116e690919063ffffffff16565b6116e690919063ffffffff16565b6116d090919063ffffffff16565b9150505b6116a38184600001546118d790919063ffffffff16565b83600001819055504283600401819055505050505b565b600081836116c8919061230f565b905092915050565b600081836116de9190612284565b905092915050565b600081836116f491906122b5565b905092915050565b61177d8363a9059cbb60e01b848460405160240161171b929190611fbb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061190c565b505050565b611805846323b872dd60e01b8585856040516024016117a393929190611f84565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061190c565b50505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836118e5919061222e565b905092915050565b600061190562015180836116d090919063ffffffff16565b9050919050565b600061196e826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166119d39092919063ffffffff16565b90506000815111156119ce578080602001905181019061198e9190611c0a565b6119cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c490612041565b60405180910390fd5b5b505050565b60606119e284846000856119eb565b90509392505050565b606082471015611a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a27906120c1565b60405180910390fd5b611a3985611aff565b611a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6f90612161565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611aa19190611f52565b60006040518083038185875af1925050503d8060008114611ade576040519150601f19603f3d011682016040523d82523d6000602084013e611ae3565b606091505b5091509150611af3828286611b22565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611b3257829050611b82565b600083511115611b455782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b799190611fff565b60405180910390fd5b9392505050565b600081359050611b988161276f565b92915050565b600081519050611bad81612786565b92915050565b600081359050611bc28161279d565b92915050565b600081519050611bd78161279d565b92915050565b600060208284031215611bf357611bf2612483565b5b6000611c0184828501611b89565b91505092915050565b600060208284031215611c2057611c1f612483565b5b6000611c2e84828501611b9e565b91505092915050565b600060208284031215611c4d57611c4c612483565b5b6000611c5b84828501611bb3565b91505092915050565b600060208284031215611c7a57611c79612483565b5b6000611c8884828501611bc8565b91505092915050565b60008060408385031215611ca857611ca7612483565b5b6000611cb685828601611bb3565b9250506020611cc785828601611bb3565b9150509250929050565b611cda81612343565b82525050565b6000611ceb826121fc565b611cf58185612212565b9350611d058185602086016123c1565b80840191505092915050565b611d1a8161238b565b82525050565b6000611d2b82612207565b611d35818561221d565b9350611d458185602086016123c1565b611d4e81612488565b840191505092915050565b6000611d6660108361221d565b9150611d7182612499565b602082019050919050565b6000611d89602a8361221d565b9150611d94826124c2565b604082019050919050565b6000611dac60268361221d565b9150611db782612511565b604082019050919050565b6000611dcf600e8361221d565b9150611dda82612560565b602082019050919050565b6000611df2600f8361221d565b9150611dfd82612589565b602082019050919050565b6000611e1560268361221d565b9150611e20826125b2565b604082019050919050565b6000611e3860268361221d565b9150611e4382612601565b604082019050919050565b6000611e5b601f8361221d565b9150611e6682612650565b602082019050919050565b6000611e7e60208361221d565b9150611e8982612679565b602082019050919050565b6000611ea1600b8361221d565b9150611eac826126a2565b602082019050919050565b6000611ec4601d8361221d565b9150611ecf826126cb565b602082019050919050565b6000611ee7601a8361221d565b9150611ef2826126f4565b602082019050919050565b6000611f0a60178361221d565b9150611f158261271d565b602082019050919050565b6000611f2d600d8361221d565b9150611f3882612746565b602082019050919050565b611f4c81612381565b82525050565b6000611f5e8284611ce0565b915081905092915050565b6000602082019050611f7e6000830184611cd1565b92915050565b6000606082019050611f996000830186611cd1565b611fa66020830185611cd1565b611fb36040830184611f43565b949350505050565b6000604082019050611fd06000830185611cd1565b611fdd6020830184611f43565b9392505050565b6000602082019050611ff96000830184611d11565b92915050565b600060208201905081810360008301526120198184611d20565b905092915050565b6000602082019050818103600083015261203a81611d59565b9050919050565b6000602082019050818103600083015261205a81611d7c565b9050919050565b6000602082019050818103600083015261207a81611d9f565b9050919050565b6000602082019050818103600083015261209a81611dc2565b9050919050565b600060208201905081810360008301526120ba81611de5565b9050919050565b600060208201905081810360008301526120da81611e08565b9050919050565b600060208201905081810360008301526120fa81611e2b565b9050919050565b6000602082019050818103600083015261211a81611e4e565b9050919050565b6000602082019050818103600083015261213a81611e71565b9050919050565b6000602082019050818103600083015261215a81611e94565b9050919050565b6000602082019050818103600083015261217a81611eb7565b9050919050565b6000602082019050818103600083015261219a81611eda565b9050919050565b600060208201905081810360008301526121ba81611efd565b9050919050565b600060208201905081810360008301526121da81611f20565b9050919050565b60006020820190506121f66000830184611f43565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061223982612381565b915061224483612381565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561227957612278612425565b5b828201905092915050565b600061228f82612381565b915061229a83612381565b9250826122aa576122a9612454565b5b828204905092915050565b60006122c082612381565b91506122cb83612381565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561230457612303612425565b5b828202905092915050565b600061231a82612381565b915061232583612381565b92508282101561233857612337612425565b5b828203905092915050565b600061234e82612361565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006123968261239d565b9050919050565b60006123a8826123af565b9050919050565b60006123ba82612361565b9050919050565b60005b838110156123df5780820151818401526020810190506123c4565b838111156123ee576000848401525b50505050565b60006123ff82612381565b915061240a83612381565b92508261241a57612419612454565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420416464726573732e20416464726573732063616e2774206260008201527f65207a65726f0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c696420415059000000000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b61277881612343565b811461278357600080fd5b50565b61278f81612355565b811461279a57600080fd5b50565b6127a681612381565b81146127b157600080fd5b5056fea2646970667358221220fb3abc68934819b2ea9a3b98772fadfbaefed7b04321398e0a169313bf6b89aa64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2A8D CODESIZE SUB DUP1 PUSH3 0x2A8D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F9 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xF1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH3 0x1BD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x293 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7D PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5DC PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0xC8 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F3 DUP2 PUSH3 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x213 JUMPI PUSH3 0x212 PUSH3 0x274 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x223 DUP6 DUP3 DUP7 ADD PUSH3 0x1E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x236 DUP6 DUP3 DUP7 ADD PUSH3 0x1E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24D DUP3 PUSH3 0x254 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x284 DUP2 PUSH3 0x240 JUMP JUMPDEST DUP2 EQ PUSH3 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x27EA DUP1 PUSH3 0x2A3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x28F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8A9D3839 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x21D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x50F19C87 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x50F19C87 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BB JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x9DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0xD79 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0xE8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0x10AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0x11AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH2 0x13EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x279 PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x152D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32A SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP1 PUSH2 0x2081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x382 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST DUP4 LT PUSH2 0x4E5 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD PUSH2 0x51B PUSH3 0x15180 PUSH2 0x50D DUP8 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x16BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST EQ PUSH2 0x531 JUMPI PUSH1 0x1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x59C PUSH2 0x58D PUSH2 0x2710 PUSH2 0x57F PUSH1 0x1 SLOAD PUSH2 0x571 DUP8 PUSH2 0x563 DUP9 DUP12 PUSH1 0x2 ADD SLOAD PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x16BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x5B3 DUP3 PUSH1 0x7 SLOAD PUSH2 0x16BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x5D0 DUP3 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x16BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x625 CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16FC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x656 SWAP3 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B6 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x73E PUSH2 0x72B PUSH2 0x2710 PUSH2 0x71D PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x16BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP1 PUSH2 0x2021 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x850 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x927 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x900 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x998 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1782 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x9D3 SWAP3 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST GT PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB05 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ ISZERO PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8B SWAP1 PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xC2B DUP3 PUSH2 0x11AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC37 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC55 PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE5 SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xB8F51888A0746F534A064D0D08F74852A939D6CD181760E1CEDC7A8396D9E22F DUP2 PUSH1 0x40 MLOAD PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD81 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD9F PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEC SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2F SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4E PUSH3 0x15180 DUP3 PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xE83 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xE96 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB4 PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF01 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF14 PUSH1 0x0 PUSH2 0x1813 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF24 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF42 PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8F SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x1007 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xEDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1077 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10B3 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10D1 PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111E SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1161 SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E5 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124A SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1276 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST GT PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D1 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12E2 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1374 CALLER ADDRESS DUP5 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1782 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x138B DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x18D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x13A8 DUP3 PUSH1 0x7 SLOAD PUSH2 0x18D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x13DF SWAP3 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x13F3 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1411 PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1467 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145E SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CE SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14E0 DUP2 PUSH2 0x1813 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x15A8 JUMPI POP PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C2 DUP3 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x15BD SWAP2 SWAP1 PUSH2 0x230F JUMP JUMPDEST PUSH2 0x18ED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1605 PUSH2 0x2710 PUSH2 0x15F7 PUSH1 0x3 SLOAD PUSH2 0x15E9 DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x168C JUMPI PUSH1 0x0 PUSH2 0x162B PUSH1 0x2 SLOAD DUP5 PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1688 PUSH2 0x2710 PUSH2 0x167A PUSH2 0x1655 PUSH2 0x1644 PUSH1 0x2 SLOAD PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x166C DUP6 DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH2 0x16A3 DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x18D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP4 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x16C8 SWAP2 SWAP1 PUSH2 0x230F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x16DE SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x16F4 SWAP2 SWAP1 PUSH2 0x22B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x171B SWAP3 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x190C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1805 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x190C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x18E5 SWAP2 SWAP1 PUSH2 0x222E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 PUSH3 0x15180 DUP4 PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x19CE JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x198E SWAP2 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x19CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C4 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x19E2 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1A30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A27 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A39 DUP6 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0x1A78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6F SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1ADE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1AF3 DUP3 DUP3 DUP7 PUSH2 0x1B22 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1B32 JUMPI DUP3 SWAP1 POP PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1B45 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B79 SWAP2 SWAP1 PUSH2 0x1FFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B98 DUP2 PUSH2 0x276F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BAD DUP2 PUSH2 0x2786 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BC2 DUP2 PUSH2 0x279D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BD7 DUP2 PUSH2 0x279D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF3 JUMPI PUSH2 0x1BF2 PUSH2 0x2483 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C01 DUP5 DUP3 DUP6 ADD PUSH2 0x1B89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x2483 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C2E DUP5 DUP3 DUP6 ADD PUSH2 0x1B9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4D JUMPI PUSH2 0x1C4C PUSH2 0x2483 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C5B DUP5 DUP3 DUP6 ADD PUSH2 0x1BB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7A JUMPI PUSH2 0x1C79 PUSH2 0x2483 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C88 DUP5 DUP3 DUP6 ADD PUSH2 0x1BC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x2483 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC7 DUP6 DUP3 DUP7 ADD PUSH2 0x1BB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDA DUP2 PUSH2 0x2343 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CEB DUP3 PUSH2 0x21FC JUMP JUMPDEST PUSH2 0x1CF5 DUP2 DUP6 PUSH2 0x2212 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D05 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23C1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1A DUP2 PUSH2 0x238B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2B DUP3 PUSH2 0x2207 JUMP JUMPDEST PUSH2 0x1D35 DUP2 DUP6 PUSH2 0x221D JUMP JUMPDEST SWAP4 POP PUSH2 0x1D45 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23C1 JUMP JUMPDEST PUSH2 0x1D4E DUP2 PUSH2 0x2488 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D66 PUSH1 0x10 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D71 DUP3 PUSH2 0x2499 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D89 PUSH1 0x2A DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D94 DUP3 PUSH2 0x24C2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAC PUSH1 0x26 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB7 DUP3 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCF PUSH1 0xE DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDA DUP3 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF2 PUSH1 0xF DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFD DUP3 PUSH2 0x2589 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E15 PUSH1 0x26 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E20 DUP3 PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E38 PUSH1 0x26 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E43 DUP3 PUSH2 0x2601 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5B PUSH1 0x1F DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E66 DUP3 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7E PUSH1 0x20 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E89 DUP3 PUSH2 0x2679 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA1 PUSH1 0xB DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAC DUP3 PUSH2 0x26A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC4 PUSH1 0x1D DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECF DUP3 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 PUSH1 0x1A DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF2 DUP3 PUSH2 0x26F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0A PUSH1 0x17 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F15 DUP3 PUSH2 0x271D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2D PUSH1 0xD DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F38 DUP3 PUSH2 0x2746 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F4C DUP2 PUSH2 0x2381 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5E DUP3 DUP5 PUSH2 0x1CE0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F99 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CD1 JUMP JUMPDEST PUSH2 0x1FA6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CD1 JUMP JUMPDEST PUSH2 0x1FB3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F43 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FD0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CD1 JUMP JUMPDEST PUSH2 0x1FDD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F43 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2019 DUP2 DUP5 PUSH2 0x1D20 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x203A DUP2 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x205A DUP2 PUSH2 0x1D7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x207A DUP2 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x209A DUP2 PUSH2 0x1DC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20BA DUP2 PUSH2 0x1DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20DA DUP2 PUSH2 0x1E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20FA DUP2 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211A DUP2 PUSH2 0x1E4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x213A DUP2 PUSH2 0x1E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215A DUP2 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x217A DUP2 PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x219A DUP2 PUSH2 0x1EDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21BA DUP2 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21DA DUP2 PUSH2 0x1F20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2239 DUP3 PUSH2 0x2381 JUMP JUMPDEST SWAP2 POP PUSH2 0x2244 DUP4 PUSH2 0x2381 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2279 JUMPI PUSH2 0x2278 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228F DUP3 PUSH2 0x2381 JUMP JUMPDEST SWAP2 POP PUSH2 0x229A DUP4 PUSH2 0x2381 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x2454 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C0 DUP3 PUSH2 0x2381 JUMP JUMPDEST SWAP2 POP PUSH2 0x22CB DUP4 PUSH2 0x2381 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2304 JUMPI PUSH2 0x2303 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231A DUP3 PUSH2 0x2381 JUMP JUMPDEST SWAP2 POP PUSH2 0x2325 DUP4 PUSH2 0x2381 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2338 JUMPI PUSH2 0x2337 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234E DUP3 PUSH2 0x2361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2396 DUP3 PUSH2 0x239D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A8 DUP3 PUSH2 0x23AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BA DUP3 PUSH2 0x2361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23DF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23C4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x23EE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23FF DUP3 PUSH2 0x2381 JUMP JUMPDEST SWAP2 POP PUSH2 0x240A DUP4 PUSH2 0x2381 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x241A JUMPI PUSH2 0x2419 PUSH2 0x2454 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420416464726573732E20416464726573732063616E27742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420415059000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2778 DUP2 PUSH2 0x2343 JUMP JUMPDEST DUP2 EQ PUSH2 0x2783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x278F DUP2 PUSH2 0x2355 JUMP JUMPDEST DUP2 EQ PUSH2 0x279A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x27A6 DUP2 PUSH2 0x2381 JUMP JUMPDEST DUP2 EQ PUSH2 0x27B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB GASPRICE 0xBC PUSH9 0x934819B2EA9A3B9877 0x2F 0xAD 0xFB 0xAE INVALID 0xD7 0xB0 NUMBER 0x21 CODECOPY DUP15 EXP AND SWAP4 SGT 0xBF PUSH12 0x89AA64736F6C634300080700 CALLER ",
							"sourceMap": "260:6665:7:-:0;;;1478:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1543:6:7;:4;;;:6;;:::i;:::-;1576:14;1560:13;;:30;;;;;;;;;;;;;;;;;;1616:6;1601:5;;:22;;;;;;;;;;;;;;;;;;1478:153;;260:6665;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1639:157:7:-;1687:3;1675:9;:15;;;;1721:4;1701:17;:24;;;;1753:3;1736:14;:20;;;;1782:6;1767:12;:21;;;;1639:157::o;7:143:8:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;260:6665:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1129": {
									"entryPoint": 6412,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 6155,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 6163,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_675": {
									"entryPoint": 6359,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calDaysFromTimestamp_1264": {
									"entryPoint": 6381,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_720": {
									"entryPoint": 5840,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_341": {
									"entryPoint": 6635,
									"id": 341,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_271": {
									"entryPoint": 6611,
									"id": 271,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@harvest_1792": {
									"entryPoint": 1710,
									"id": 1792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_200": {
									"entryPoint": 6911,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_705": {
									"entryPoint": 5862,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 4226,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 3726,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_1816": {
									"entryPoint": 5347,
									"id": 1816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardToHarvest_1718": {
									"entryPoint": 3375,
									"id": 1718,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_972": {
									"entryPoint": 6018,
									"id": 972,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_946": {
									"entryPoint": 5884,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setBountyWallet_1706": {
									"entryPoint": 3868,
									"id": 1706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setEventPeriod_1657": {
									"entryPoint": 3449,
									"id": 1657,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFixedAPY_1631": {
									"entryPoint": 3119,
									"id": 1631,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnstakingFeeRate_1680": {
									"entryPoint": 4267,
									"id": 1680,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1485": {
									"entryPoint": 4523,
									"id": 1485,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_1804": {
									"entryPoint": 1636,
									"id": 1804,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@startStaking_1415": {
									"entryPoint": 2527,
									"id": 1415,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_690": {
									"entryPoint": 5818,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1176": {
									"entryPoint": 5421,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1173": {
									"entryPoint": 3862,
									"id": 1173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 5099,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateReward_1357": {
									"entryPoint": 5459,
									"id": 1357,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_476": {
									"entryPoint": 6946,
									"id": 476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1608": {
									"entryPoint": 685,
									"id": 1608,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8123,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed": {
									"entryPoint": 8164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$912_to_t_address": {
									"entryPoint": 9099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 9153,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"mod_t_uint256": {
									"entryPoint": 9204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9253,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9300,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 9369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 9410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 9568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6": {
									"entryPoint": 9609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 9650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975": {
									"entryPoint": 9729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 9808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 9849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1": {
									"entryPoint": 9890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 9931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3": {
									"entryPoint": 9972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561": {
									"entryPoint": 10013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811": {
									"entryPoint": 10054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23636:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "7:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:8",
														"type": ""
													}
												],
												"src": "152:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:8",
														"type": ""
													}
												],
												"src": "295:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:8",
														"type": ""
													}
												],
												"src": "440:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:8"
															},
															"nodeType": "YulIf",
															"src": "665:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:8",
														"type": ""
													}
												],
												"src": "589:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:8"
															},
															"nodeType": "YulIf",
															"src": "1008:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:8",
														"type": ""
													}
												],
												"src": "924:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:8"
															},
															"nodeType": "YulIf",
															"src": "1351:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:8",
														"type": ""
													}
												],
												"src": "1275:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:8"
															},
															"nodeType": "YulIf",
															"src": "1697:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:8",
														"type": ""
													}
												],
												"src": "1610:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2050:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2096:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2098:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2098:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2098:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2071:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2067:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2067:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2063:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:32:8"
															},
															"nodeType": "YulIf",
															"src": "2060:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2189:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2204:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2208:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2233:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2268:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2279:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2264:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2264:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2288:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2243:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2233:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2316:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2331:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2335:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2361:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2396:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2407:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2371:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2361:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2012:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2023:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2035:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2043:6:8",
														"type": ""
													}
												],
												"src": "1967:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2512:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2529:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2552:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2534:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2522:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2500:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2507:3:8",
														"type": ""
													}
												],
												"src": "2447:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2679:265:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2689:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2735:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2703:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2693:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2750:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2838:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2757:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2750:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2880:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2887:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2894:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2854:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2854:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2915:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2926:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2931:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2915:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2660:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2667:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2675:3:8",
														"type": ""
													}
												],
												"src": "2571:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3046:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$912_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3051:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3051:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3017:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3024:3:8",
														"type": ""
													}
												],
												"src": "2950:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3207:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3217:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3264:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3231:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3221:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3279:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3345:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3350:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3286:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3279:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3392:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3388:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3388:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3406:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3411:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3366:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3366:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3427:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3438:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3465:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3443:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3434:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3427:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3188:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3195:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3203:3:8",
														"type": ""
													}
												],
												"src": "3115:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3631:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3641:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3707:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3712:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3648:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3641:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3813:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nodeType": "YulIdentifier",
																	"src": "3724:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3724:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3837:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3842:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3826:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3619:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3627:3:8",
														"type": ""
													}
												],
												"src": "3485:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4079:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4084:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4020:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4013:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4185:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "4096:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4096:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4198:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4209:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4205:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3991:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3999:3:8",
														"type": ""
													}
												],
												"src": "3857:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4375:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4385:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4451:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4456:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4392:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4385:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4557:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4468:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4468:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4468:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4570:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4586:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4577:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4363:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4371:3:8",
														"type": ""
													}
												],
												"src": "4229:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4747:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4757:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4823:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4828:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4764:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4757:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4929:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "4840:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4840:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4942:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4953:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4949:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4735:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4743:3:8",
														"type": ""
													}
												],
												"src": "4601:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5119:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5129:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5195:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5136:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5129:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5301:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																	"nodeType": "YulIdentifier",
																	"src": "5212:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5314:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5330:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5314:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5107:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5115:3:8",
														"type": ""
													}
												],
												"src": "4973:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5501:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5567:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5508:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5501:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5673:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "5584:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5584:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5686:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5697:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5702:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5693:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5686:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5479:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5487:3:8",
														"type": ""
													}
												],
												"src": "5345:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5863:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5873:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5939:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5880:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5873:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6045:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																	"nodeType": "YulIdentifier",
																	"src": "5956:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5956:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6069:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6074:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6065:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6058:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5851:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5859:3:8",
														"type": ""
													}
												],
												"src": "5717:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6235:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6245:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6252:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6245:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6417:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nodeType": "YulIdentifier",
																	"src": "6328:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6328:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6430:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6441:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6446:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6437:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6223:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6231:3:8",
														"type": ""
													}
												],
												"src": "6089:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6607:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6617:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6683:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6688:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6624:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6700:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6700:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6802:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6813:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6818:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6809:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6809:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6595:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6603:3:8",
														"type": ""
													}
												],
												"src": "6461:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6979:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6989:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7055:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:8",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6996:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6996:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6989:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7161:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																	"nodeType": "YulIdentifier",
																	"src": "7072:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7072:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7174:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7185:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7181:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6967:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6975:3:8",
														"type": ""
													}
												],
												"src": "6833:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7351:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7361:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7427:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7432:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7368:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7368:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7533:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "7444:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7444:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7546:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7557:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7553:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7546:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7339:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7347:3:8",
														"type": ""
													}
												],
												"src": "7205:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7723:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7733:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7799:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7740:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7740:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7905:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																	"nodeType": "YulIdentifier",
																	"src": "7816:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7816:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7816:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7918:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7925:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7918:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7711:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7719:3:8",
														"type": ""
													}
												],
												"src": "7577:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8095:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8105:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8112:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8112:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8105:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8277:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																	"nodeType": "YulIdentifier",
																	"src": "8188:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8188:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8301:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8306:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8297:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8290:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8083:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8091:3:8",
														"type": ""
													}
												],
												"src": "7949:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8467:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8477:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8543:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8548:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8484:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8484:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8649:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																	"nodeType": "YulIdentifier",
																	"src": "8560:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8560:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8662:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8673:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8678:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8669:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8669:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8662:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8455:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8463:3:8",
														"type": ""
													}
												],
												"src": "8321:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8758:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8775:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8798:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8780:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8780:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8768:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8768:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8768:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8746:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8753:3:8",
														"type": ""
													}
												],
												"src": "8693:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8951:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8962:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9049:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9058:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8969:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8969:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8962:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9072:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9079:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8930:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8936:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8947:3:8",
														"type": ""
													}
												],
												"src": "8817:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9192:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9202:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9214:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9225:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9210:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9210:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9202:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9282:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9295:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9306:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9291:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9291:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9238:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9238:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9238:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9164:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9176:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9187:4:8",
														"type": ""
													}
												],
												"src": "9094:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9476:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9486:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9498:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9509:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9494:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9494:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9486:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9566:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9579:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9590:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9575:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9575:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9522:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9522:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9522:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9647:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9660:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9671:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9656:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9656:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9603:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9603:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9603:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9729:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9742:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9753:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9738:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9738:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9685:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9685:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9685:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9432:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9444:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9452:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9460:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9471:4:8",
														"type": ""
													}
												],
												"src": "9322:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9896:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9906:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9918:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9929:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9914:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9914:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9906:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9986:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10010:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9995:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9995:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9942:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9942:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9942:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10067:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10080:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10091:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10076:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10076:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10023:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10023:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10023:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9860:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9872:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9880:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9891:4:8",
														"type": ""
													}
												],
												"src": "9770:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10220:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10230:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10242:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10253:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10238:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10238:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10230:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10324:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10337:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10348:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10333:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10333:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10266:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10266:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10266:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10192:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10204:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10215:4:8",
														"type": ""
													}
												],
												"src": "10108:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10482:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10492:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10504:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10515:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10500:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10500:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10492:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10539:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10550:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10535:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10535:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10558:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10564:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10554:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10554:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10528:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10528:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10528:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10584:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10656:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10665:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10592:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10592:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10584:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10454:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10466:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10477:4:8",
														"type": ""
													}
												],
												"src": "10364:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10854:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10864:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10876:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10887:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10872:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10872:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10864:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10911:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10922:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10907:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10930:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10936:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10926:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10926:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10900:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10900:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10900:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10956:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11090:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10964:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10964:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10956:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10834:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10849:4:8",
														"type": ""
													}
												],
												"src": "10683:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11279:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11289:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11301:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11312:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11297:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11297:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11289:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11336:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11347:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11332:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11332:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11355:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11361:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11351:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11351:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11325:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11325:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11325:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11381:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11515:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11389:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11389:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11381:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11259:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11274:4:8",
														"type": ""
													}
												],
												"src": "11108:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11704:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11714:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11726:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11737:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11722:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11722:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11714:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11761:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11772:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11757:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11757:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11780:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11786:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11776:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11776:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11750:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11750:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11750:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11806:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11940:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11814:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11814:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11806:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11684:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11699:4:8",
														"type": ""
													}
												],
												"src": "11533:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12129:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12139:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12151:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12162:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12147:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12147:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12139:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12186:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12197:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12182:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12182:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12205:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12211:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12201:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12201:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12175:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12175:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12175:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12231:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12365:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12239:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12239:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12231:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12109:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12124:4:8",
														"type": ""
													}
												],
												"src": "11958:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12554:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12564:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12576:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12587:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12572:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12572:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12564:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12611:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12622:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12607:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12607:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12630:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12636:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12626:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12626:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12600:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12600:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12600:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12656:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12790:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12664:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12664:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12656:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12534:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12549:4:8",
														"type": ""
													}
												],
												"src": "12383:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12979:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12989:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13001:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13012:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12997:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12997:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12989:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13036:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13047:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13032:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13032:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13055:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13061:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13051:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13051:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13025:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13025:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13025:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13081:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13215:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13089:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13089:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13081:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12959:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12974:4:8",
														"type": ""
													}
												],
												"src": "12808:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13404:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13414:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13426:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13437:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13422:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13422:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13414:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13461:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13472:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13457:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13457:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13480:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13486:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13476:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13476:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13450:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13450:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13450:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13506:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13640:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13514:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13514:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13506:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13384:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13399:4:8",
														"type": ""
													}
												],
												"src": "13233:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13829:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13839:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13851:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13862:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13847:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13847:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13839:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13886:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13897:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13882:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13882:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13905:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13911:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13901:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13901:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13875:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13875:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13875:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13931:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14065:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13939:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13939:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13931:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13809:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13824:4:8",
														"type": ""
													}
												],
												"src": "13658:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14254:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14264:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14276:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14287:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14272:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14272:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14264:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14311:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14322:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14307:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14307:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14330:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14336:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14326:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14326:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14300:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14300:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14300:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14356:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14490:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14364:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14364:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14356:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14234:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14249:4:8",
														"type": ""
													}
												],
												"src": "14083:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14679:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14689:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14701:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14712:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14697:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14697:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14689:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14736:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14747:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14732:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14732:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14755:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14761:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14751:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14751:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14725:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14725:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14725:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14781:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14915:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14789:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14789:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14781:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14659:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14674:4:8",
														"type": ""
													}
												],
												"src": "14508:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15104:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15114:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15126:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15137:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15122:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15122:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15114:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15161:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15172:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15157:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15157:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15180:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15186:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15176:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15176:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15150:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15150:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15150:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15206:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15340:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15214:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15214:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15206:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15084:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15099:4:8",
														"type": ""
													}
												],
												"src": "14933:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15529:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15539:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15551:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15562:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15547:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15547:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15539:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15586:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15597:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15582:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15582:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15605:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15611:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15601:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15601:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15575:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15575:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15575:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15631:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15765:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15639:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15639:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15631:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15509:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15524:4:8",
														"type": ""
													}
												],
												"src": "15358:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15954:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15964:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15976:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15987:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15972:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15972:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15964:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16011:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16022:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16007:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16007:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16030:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16036:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16026:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16026:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16000:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16000:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16000:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16056:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16190:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16064:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16064:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16056:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15934:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15949:4:8",
														"type": ""
													}
												],
												"src": "15783:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16379:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16389:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16401:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16412:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16397:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16397:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16389:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16436:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16447:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16432:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16432:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16455:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16461:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16451:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16451:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16425:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16425:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16425:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16481:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16615:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16489:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16489:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16481:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16359:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16374:4:8",
														"type": ""
													}
												],
												"src": "16208:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16731:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16741:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16753:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16764:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16749:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16749:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16741:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16821:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16834:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16845:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16830:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16830:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16777:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16777:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16777:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16703:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16715:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16726:4:8",
														"type": ""
													}
												],
												"src": "16633:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16901:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16911:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16927:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16921:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16921:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "16911:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16894:6:8",
														"type": ""
													}
												],
												"src": "16861:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17000:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17011:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17027:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17021:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17021:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17011:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16983:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16993:6:8",
														"type": ""
													}
												],
												"src": "16942:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17105:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17116:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17132:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17126:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17126:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17116:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17088:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17098:6:8",
														"type": ""
													}
												],
												"src": "17046:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17264:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17274:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17289:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17274:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17236:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17241:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17252:11:8",
														"type": ""
													}
												],
												"src": "17151:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17400:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17417:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17422:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17410:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17410:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17410:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17438:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17457:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17462:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17453:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17453:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17438:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17372:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17377:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17388:11:8",
														"type": ""
													}
												],
												"src": "17304:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17523:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17533:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17556:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17538:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17538:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17533:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17567:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17590:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17572:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17572:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17567:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17730:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17732:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17732:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17732:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17651:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17658:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17726:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17654:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17654:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17648:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17648:81:8"
															},
															"nodeType": "YulIf",
															"src": "17645:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17762:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17773:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17776:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17769:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17769:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17762:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17510:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17513:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17519:3:8",
														"type": ""
													}
												],
												"src": "17479:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17832:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17842:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17865:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17847:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17847:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17842:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17876:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17899:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17881:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17881:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17876:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17923:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17925:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17925:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17925:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17920:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17913:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17913:9:8"
															},
															"nodeType": "YulIf",
															"src": "17910:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17955:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17964:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17967:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17960:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17960:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17955:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17821:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17824:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17830:1:8",
														"type": ""
													}
												],
												"src": "17790:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18029:300:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18039:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18062:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18044:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18044:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18039:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18073:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18096:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18078:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18078:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18073:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18271:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18273:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18273:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18273:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18183:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18176:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18176:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18169:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18169:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18191:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18198:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18266:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "18194:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18194:74:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18188:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18188:81:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18165:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18165:105:8"
															},
															"nodeType": "YulIf",
															"src": "18162:131:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18303:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18318:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18321:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18314:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18314:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "18303:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18012:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18015:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "18021:7:8",
														"type": ""
													}
												],
												"src": "17981:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18380:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18390:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18413:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18395:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18395:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18390:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18424:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18447:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18429:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18429:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18424:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18471:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18473:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18473:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18473:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18465:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18468:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18462:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18462:8:8"
															},
															"nodeType": "YulIf",
															"src": "18459:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18503:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18515:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18518:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18511:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18511:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "18503:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18366:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18369:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "18375:4:8",
														"type": ""
													}
												],
												"src": "18335:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18577:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18587:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18616:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "18598:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18598:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18587:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18559:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18569:7:8",
														"type": ""
													}
												],
												"src": "18532:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18676:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18686:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18711:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18704:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18704:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18697:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18697:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18686:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18658:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18668:7:8",
														"type": ""
													}
												],
												"src": "18634:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18775:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18785:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18800:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18807:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18796:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18796:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18785:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18757:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18767:7:8",
														"type": ""
													}
												],
												"src": "18730:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18907:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18917:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18928:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18917:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18889:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18899:7:8",
														"type": ""
													}
												],
												"src": "18862:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19019:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19029:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19073:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "19042:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19042:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19029:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$912_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18999:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19009:9:8",
														"type": ""
													}
												],
												"src": "18945:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19151:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19161:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19205:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19174:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19174:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19161:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19131:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19141:9:8",
														"type": ""
													}
												],
												"src": "19091:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19283:53:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19293:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19324:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19306:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19306:24:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19293:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19263:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19273:9:8",
														"type": ""
													}
												],
												"src": "19223:113:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19391:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19401:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19410:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "19405:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19470:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "19495:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "19500:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19491:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19491:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "19514:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "19519:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "19510:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19510:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "19504:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19504:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19484:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19484:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19484:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "19431:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19434:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19428:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19428:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "19442:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19444:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "19453:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19456:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19449:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19449:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "19444:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "19424:3:8",
																"statements": []
															},
															"src": "19420:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19567:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "19617:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "19622:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19613:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19613:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19631:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19606:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19606:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19606:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "19548:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19551:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19545:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19545:13:8"
															},
															"nodeType": "YulIf",
															"src": "19542:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "19373:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "19378:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19383:6:8",
														"type": ""
													}
												],
												"src": "19342:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19689:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19699:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19722:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19704:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19704:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19699:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19733:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19756:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19738:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19738:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19733:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19780:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19782:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19782:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19782:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19777:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19770:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19770:9:8"
															},
															"nodeType": "YulIf",
															"src": "19767:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19811:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19820:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19823:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "19816:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19816:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19811:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19678:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19681:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19687:1:8",
														"type": ""
													}
												],
												"src": "19655:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19865:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19882:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19885:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19875:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19875:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19875:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19979:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19982:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19972:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19972:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19972:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20003:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20006:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19996:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19996:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19996:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19837:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20051:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20068:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20071:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20061:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20061:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20061:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20165:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20168:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20158:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20158:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20158:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20189:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20192:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20182:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20182:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20182:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "20023:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20298:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20315:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20318:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20308:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20308:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20308:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "20209:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20421:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20438:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20441:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20431:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20431:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20431:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "20332:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20503:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20513:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20531:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20538:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20527:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20527:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20547:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "20543:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20543:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20523:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20523:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "20513:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20486:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "20496:6:8",
														"type": ""
													}
												],
												"src": "20455:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20669:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20691:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20699:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20687:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20687:14:8"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20703:18:8",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20680:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20680:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20680:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20661:6:8",
														"type": ""
													}
												],
												"src": "20563:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20841:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20863:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20871:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20859:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20859:14:8"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20875:34:8",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20852:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20852:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20852:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20931:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20939:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20927:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20927:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20944:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20920:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20920:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20920:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20833:6:8",
														"type": ""
													}
												],
												"src": "20735:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21076:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21098:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21106:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21094:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21094:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21110:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21087:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21087:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21087:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21166:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21174:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21162:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21162:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21179:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21155:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21155:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21155:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21068:6:8",
														"type": ""
													}
												],
												"src": "20970:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21307:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21329:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21337:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21325:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21325:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21341:16:8",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21318:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21318:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21318:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21299:6:8",
														"type": ""
													}
												],
												"src": "21201:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21477:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21499:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21507:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21495:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21495:14:8"
																	},
																	{
																		"hexValue": "416c72656164792073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21511:17:8",
																		"type": "",
																		"value": "Already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21488:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21488:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21488:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21469:6:8",
														"type": ""
													}
												],
												"src": "21371:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21648:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21670:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21678:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21666:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21666:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21682:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21659:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21659:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21659:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21738:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21746:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21734:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21734:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21751:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21727:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21727:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21727:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21640:6:8",
														"type": ""
													}
												],
												"src": "21542:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21879:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21901:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21909:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21897:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21897:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420416464726573732e20416464726573732063616e27742062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21913:34:8",
																		"type": "",
																		"value": "Invalid Address. Address can't b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21890:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21890:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21890:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21969:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21977:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21965:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21965:15:8"
																	},
																	{
																		"hexValue": "65207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21982:8:8",
																		"type": "",
																		"value": "e zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21958:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21958:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21958:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21871:6:8",
														"type": ""
													}
												],
												"src": "21773:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22110:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22132:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22140:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22128:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22128:14:8"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22144:33:8",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22121:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22121:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22121:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22102:6:8",
														"type": ""
													}
												],
												"src": "22004:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22297:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22319:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22327:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22315:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22315:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22331:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22308:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22308:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22308:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22289:6:8",
														"type": ""
													}
												],
												"src": "22191:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22485:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22507:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22515:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22503:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22503:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420415059",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22519:13:8",
																		"type": "",
																		"value": "Invalid APY"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22496:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22496:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22496:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22477:6:8",
														"type": ""
													}
												],
												"src": "22379:161:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22652:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22674:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22682:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22670:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22670:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22686:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22663:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22663:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22663:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22644:6:8",
														"type": ""
													}
												],
												"src": "22546:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22837:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22859:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22867:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22855:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22855:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22871:28:8",
																		"type": "",
																		"value": "Invalid Unstaking Fee Rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22848:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22848:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22848:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22829:6:8",
														"type": ""
													}
												],
												"src": "22731:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23019:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23041:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23049:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23037:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23037:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23053:25:8",
																		"type": "",
																		"value": "Invalid Lockup Duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23030:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23030:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23030:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23011:6:8",
														"type": ""
													}
												],
												"src": "22913:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23198:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23220:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23228:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23216:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23216:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23232:15:8",
																		"type": "",
																		"value": "Insufficient!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23209:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23209:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23209:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23190:6:8",
														"type": ""
													}
												],
												"src": "23092:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23304:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23361:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23370:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23373:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23363:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23363:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23363:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23327:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23352:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "23334:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23334:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23324:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23324:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23317:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23317:43:8"
															},
															"nodeType": "YulIf",
															"src": "23314:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23297:5:8",
														"type": ""
													}
												],
												"src": "23261:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23429:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23483:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23492:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23495:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23485:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23485:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23485:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23452:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23474:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "23459:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23459:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23449:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23449:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23442:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23442:40:8"
															},
															"nodeType": "YulIf",
															"src": "23439:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23422:5:8",
														"type": ""
													}
												],
												"src": "23389:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23554:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23611:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23620:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23623:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23613:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23613:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23613:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23577:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23602:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "23584:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23584:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23574:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23574:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23567:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23567:43:8"
															},
															"nodeType": "YulIf",
															"src": "23564:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23547:5:8",
														"type": ""
													}
												],
												"src": "23511:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$912_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IBEP20_$912_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already started\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Address. Address can't b\")\n\n        mstore(add(memPtr, 32), \"e zero\")\n\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid APY\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Unstaking Fee Rate\")\n\n    }\n\n    function store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Lockup Duration\")\n\n    }\n\n    function store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063817b1cd211610097578063a694fc3a11610066578063a694fc3a14610239578063f2fde38b14610255578063f7b2a7be14610271578063fc0c546a1461028f57610100565b8063817b1cd2146101c55780638a9d3839146101e35780638da5cb5b146101ff57806391e07e7a1461021d57610100565b806350f19c87116100d357806350f19c87146101655780635d2ec65d14610181578063692642e71461019f578063715018a6146101bb57610100565b80632e1a7d4d14610105578063373d6132146101215780634641257d1461013f5780634b77dd9e14610149575b600080fd5b61011f600480360381019061011a9190611c37565b6102ad565b005b610129610664565b60405161013691906121e1565b60405180910390f35b6101476106ae565b005b610163600480360381019061015e9190611c91565b6109df565b005b61017f600480360381019061017a9190611c37565b610c2f565b005b610189610d2f565b60405161019691906121e1565b60405180910390f35b6101b960048036038101906101b49190611c37565b610d79565b005b6101c3610e8e565b005b6101cd610f16565b6040516101da91906121e1565b60405180910390f35b6101fd60048036038101906101f89190611bdd565b610f1c565b005b610207611082565b6040516102149190611f69565b60405180910390f35b61023760048036038101906102329190611c37565b6110ab565b005b610253600480360381019061024e9190611c37565b6111ab565b005b61026f600480360381019061026a9190611bdd565b6113eb565b005b6102796114e3565b60405161028691906121e1565b60405180910390f35b61029761152d565b6040516102a49190611fe4565b60405180910390f35b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008211610333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032a90612101565b60405180910390fd5b806001015482111561037a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037190612081565b60405180910390fd5b610382611553565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103df9190611f69565b60206040518083038186803b1580156103f757600080fd5b505afa15801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f9190611c64565b83106104e557600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104909190611f69565b60206040518083038186803b1580156104a857600080fd5b505afa1580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e09190611c64565b6104e7565b825b905060008060025461051b6201518061050d8760030154426116ba90919063ffffffff16565b6116d090919063ffffffff16565b61052591906123f4565b14610531576001610534565b60005b60ff16905061059c61058d61271061057f60015461057187610563888b600201546116e690919063ffffffff16565b6116e690919063ffffffff16565b6116e690919063ffffffff16565b6116d090919063ffffffff16565b836116ba90919063ffffffff16565b91506105b3826007546116ba90919063ffffffff16565b6007819055506105d08284600101546116ba90919063ffffffff16565b83600101819055506106253383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116fc9092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643383604051610656929190611fbb565b60405180910390a150505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6106b6611553565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061073e61072b61271061071d60045486600001546116e690919063ffffffff16565b6116d090919063ffffffff16565b83600001546116ba90919063ffffffff16565b905060008111610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077a90612021565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108009190611f69565b60206040518083038186803b15801561081857600080fd5b505afa15801561082c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108509190611c64565b81111561092757600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108d49190611f69565b60206040518083038186803b1580156108ec57600080fd5b505afa158015610900573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109249190611c64565b90505b610998600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611782909392919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba33826040516109d3929190611fbb565b60405180910390a15050565b60008211610a22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1990612101565b60405180910390fd5b81600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a7e9190611f69565b60206040518083038186803b158015610a9657600080fd5b505afa158015610aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ace9190611c64565b11610b0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b05906121c1565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541415610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b906120a1565b60405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550610c2b826111ab565b5050565b610c3761180b565b73ffffffffffffffffffffffffffffffffffffffff16610c55611082565b73ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290612121565b60405180910390fd5b60008111610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce590612141565b60405180910390fd5b806003819055507fb8f51888a0746f534a064d0d08f74852a939d6cd181760e1cedc7a8396d9e22f81604051610d2491906121e1565b60405180910390a150565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610d8161180b565b73ffffffffffffffffffffffffffffffffffffffff16610d9f611082565b73ffffffffffffffffffffffffffffffffffffffff1614610df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dec90612121565b60405180910390fd5b60008111610e38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2f906121a1565b60405180910390fd5b610e4e62015180826116e690919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610e8391906121e1565b60405180910390a150565b610e9661180b565b73ffffffffffffffffffffffffffffffffffffffff16610eb4611082565b73ffffffffffffffffffffffffffffffffffffffff1614610f0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0190612121565b60405180910390fd5b610f146000611813565b565b60075481565b610f2461180b565b73ffffffffffffffffffffffffffffffffffffffff16610f42611082565b73ffffffffffffffffffffffffffffffffffffffff1614610f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8f90612121565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1611611007576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffe906120e1565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a87816040516110779190611f69565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110b361180b565b73ffffffffffffffffffffffffffffffffffffffff166110d1611082565b73ffffffffffffffffffffffffffffffffffffffff1614611127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111e90612121565b60405180910390fd5b6000811161116a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116190612181565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516111a091906121e1565b60405180910390a150565b600081116111ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e590612101565b60405180910390fd5b80600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161124a9190611f69565b60206040518083038186803b15801561126257600080fd5b505afa158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a9190611c64565b116112da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d1906121c1565b60405180910390fd5b6112e2611553565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611374333084600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611782909392919063ffffffff16565b61138b8282600101546118d790919063ffffffff16565b81600101819055506113a8826007546118d790919063ffffffff16565b6007819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33836040516113df929190611fbb565b60405180910390a15050565b6113f361180b565b73ffffffffffffffffffffffffffffffffffffffff16611411611082565b73ffffffffffffffffffffffffffffffffffffffff1614611467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145e90612121565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ce90612061565b60405180910390fd5b6114e081611813565b50565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600401544210156115a857506116b8565b60006115c28260030154426115bd919061230f565b6118ed565b905060006116056127106115f76003546115e98688600101546116e690919063ffffffff16565b6116e690919063ffffffff16565b6116d090919063ffffffff16565b905060018360020154141561168c57600061162b600254846116d090919063ffffffff16565b905061168861271061167a6116556116446002546118ed565b6003546116e690919063ffffffff16565b61166c8589600101546116e690919063ffffffff16565b6116e690919063ffffffff16565b6116d090919063ffffffff16565b9150505b6116a38184600001546118d790919063ffffffff16565b83600001819055504283600401819055505050505b565b600081836116c8919061230f565b905092915050565b600081836116de9190612284565b905092915050565b600081836116f491906122b5565b905092915050565b61177d8363a9059cbb60e01b848460405160240161171b929190611fbb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061190c565b505050565b611805846323b872dd60e01b8585856040516024016117a393929190611f84565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061190c565b50505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836118e5919061222e565b905092915050565b600061190562015180836116d090919063ffffffff16565b9050919050565b600061196e826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166119d39092919063ffffffff16565b90506000815111156119ce578080602001905181019061198e9190611c0a565b6119cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c490612041565b60405180910390fd5b5b505050565b60606119e284846000856119eb565b90509392505050565b606082471015611a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a27906120c1565b60405180910390fd5b611a3985611aff565b611a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6f90612161565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611aa19190611f52565b60006040518083038185875af1925050503d8060008114611ade576040519150601f19603f3d011682016040523d82523d6000602084013e611ae3565b606091505b5091509150611af3828286611b22565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611b3257829050611b82565b600083511115611b455782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b799190611fff565b60405180910390fd5b9392505050565b600081359050611b988161276f565b92915050565b600081519050611bad81612786565b92915050565b600081359050611bc28161279d565b92915050565b600081519050611bd78161279d565b92915050565b600060208284031215611bf357611bf2612483565b5b6000611c0184828501611b89565b91505092915050565b600060208284031215611c2057611c1f612483565b5b6000611c2e84828501611b9e565b91505092915050565b600060208284031215611c4d57611c4c612483565b5b6000611c5b84828501611bb3565b91505092915050565b600060208284031215611c7a57611c79612483565b5b6000611c8884828501611bc8565b91505092915050565b60008060408385031215611ca857611ca7612483565b5b6000611cb685828601611bb3565b9250506020611cc785828601611bb3565b9150509250929050565b611cda81612343565b82525050565b6000611ceb826121fc565b611cf58185612212565b9350611d058185602086016123c1565b80840191505092915050565b611d1a8161238b565b82525050565b6000611d2b82612207565b611d35818561221d565b9350611d458185602086016123c1565b611d4e81612488565b840191505092915050565b6000611d6660108361221d565b9150611d7182612499565b602082019050919050565b6000611d89602a8361221d565b9150611d94826124c2565b604082019050919050565b6000611dac60268361221d565b9150611db782612511565b604082019050919050565b6000611dcf600e8361221d565b9150611dda82612560565b602082019050919050565b6000611df2600f8361221d565b9150611dfd82612589565b602082019050919050565b6000611e1560268361221d565b9150611e20826125b2565b604082019050919050565b6000611e3860268361221d565b9150611e4382612601565b604082019050919050565b6000611e5b601f8361221d565b9150611e6682612650565b602082019050919050565b6000611e7e60208361221d565b9150611e8982612679565b602082019050919050565b6000611ea1600b8361221d565b9150611eac826126a2565b602082019050919050565b6000611ec4601d8361221d565b9150611ecf826126cb565b602082019050919050565b6000611ee7601a8361221d565b9150611ef2826126f4565b602082019050919050565b6000611f0a60178361221d565b9150611f158261271d565b602082019050919050565b6000611f2d600d8361221d565b9150611f3882612746565b602082019050919050565b611f4c81612381565b82525050565b6000611f5e8284611ce0565b915081905092915050565b6000602082019050611f7e6000830184611cd1565b92915050565b6000606082019050611f996000830186611cd1565b611fa66020830185611cd1565b611fb36040830184611f43565b949350505050565b6000604082019050611fd06000830185611cd1565b611fdd6020830184611f43565b9392505050565b6000602082019050611ff96000830184611d11565b92915050565b600060208201905081810360008301526120198184611d20565b905092915050565b6000602082019050818103600083015261203a81611d59565b9050919050565b6000602082019050818103600083015261205a81611d7c565b9050919050565b6000602082019050818103600083015261207a81611d9f565b9050919050565b6000602082019050818103600083015261209a81611dc2565b9050919050565b600060208201905081810360008301526120ba81611de5565b9050919050565b600060208201905081810360008301526120da81611e08565b9050919050565b600060208201905081810360008301526120fa81611e2b565b9050919050565b6000602082019050818103600083015261211a81611e4e565b9050919050565b6000602082019050818103600083015261213a81611e71565b9050919050565b6000602082019050818103600083015261215a81611e94565b9050919050565b6000602082019050818103600083015261217a81611eb7565b9050919050565b6000602082019050818103600083015261219a81611eda565b9050919050565b600060208201905081810360008301526121ba81611efd565b9050919050565b600060208201905081810360008301526121da81611f20565b9050919050565b60006020820190506121f66000830184611f43565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061223982612381565b915061224483612381565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561227957612278612425565b5b828201905092915050565b600061228f82612381565b915061229a83612381565b9250826122aa576122a9612454565b5b828204905092915050565b60006122c082612381565b91506122cb83612381565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561230457612303612425565b5b828202905092915050565b600061231a82612381565b915061232583612381565b92508282101561233857612337612425565b5b828203905092915050565b600061234e82612361565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006123968261239d565b9050919050565b60006123a8826123af565b9050919050565b60006123ba82612361565b9050919050565b60005b838110156123df5780820151818401526020810190506123c4565b838111156123ee576000848401525b50505050565b60006123ff82612381565b915061240a83612381565b92508261241a57612419612454565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420416464726573732e20416464726573732063616e2774206260008201527f65207a65726f0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c696420415059000000000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b61277881612343565b811461278357600080fd5b50565b61278f81612355565b811461279a57600080fd5b50565b6127a681612381565b81146127b157600080fd5b5056fea2646970667358221220fb3abc68934819b2ea9a3b98772fadfbaefed7b04321398e0a169313bf6b89aa64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x28F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8A9D3839 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x21D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x50F19C87 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x50F19C87 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BB JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x9DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0xD79 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0xE8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0x10AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0x11AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH2 0x13EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x279 PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x152D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32A SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP1 PUSH2 0x2081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x382 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST DUP4 LT PUSH2 0x4E5 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD PUSH2 0x51B PUSH3 0x15180 PUSH2 0x50D DUP8 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x16BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST EQ PUSH2 0x531 JUMPI PUSH1 0x1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x59C PUSH2 0x58D PUSH2 0x2710 PUSH2 0x57F PUSH1 0x1 SLOAD PUSH2 0x571 DUP8 PUSH2 0x563 DUP9 DUP12 PUSH1 0x2 ADD SLOAD PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x16BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x5B3 DUP3 PUSH1 0x7 SLOAD PUSH2 0x16BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x5D0 DUP3 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x16BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x625 CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16FC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x656 SWAP3 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B6 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x73E PUSH2 0x72B PUSH2 0x2710 PUSH2 0x71D PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x16BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP1 PUSH2 0x2021 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x850 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x927 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x900 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x998 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1782 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x9D3 SWAP3 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST GT PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB05 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ ISZERO PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8B SWAP1 PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xC2B DUP3 PUSH2 0x11AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC37 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC55 PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE5 SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xB8F51888A0746F534A064D0D08F74852A939D6CD181760E1CEDC7A8396D9E22F DUP2 PUSH1 0x40 MLOAD PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD81 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD9F PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEC SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2F SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4E PUSH3 0x15180 DUP3 PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xE83 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xE96 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB4 PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF01 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF14 PUSH1 0x0 PUSH2 0x1813 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF24 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF42 PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8F SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x1007 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xEDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1077 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10B3 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10D1 PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111E SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1161 SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E5 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124A SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1276 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST GT PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D1 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12E2 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1374 CALLER ADDRESS DUP5 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1782 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x138B DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x18D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x13A8 DUP3 PUSH1 0x7 SLOAD PUSH2 0x18D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x13DF SWAP3 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x13F3 PUSH2 0x180B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1411 PUSH2 0x1082 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1467 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145E SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CE SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14E0 DUP2 PUSH2 0x1813 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x15A8 JUMPI POP PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C2 DUP3 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x15BD SWAP2 SWAP1 PUSH2 0x230F JUMP JUMPDEST PUSH2 0x18ED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1605 PUSH2 0x2710 PUSH2 0x15F7 PUSH1 0x3 SLOAD PUSH2 0x15E9 DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x168C JUMPI PUSH1 0x0 PUSH2 0x162B PUSH1 0x2 SLOAD DUP5 PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1688 PUSH2 0x2710 PUSH2 0x167A PUSH2 0x1655 PUSH2 0x1644 PUSH1 0x2 SLOAD PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x166C DUP6 DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH2 0x16A3 DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x18D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP4 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x16C8 SWAP2 SWAP1 PUSH2 0x230F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x16DE SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x16F4 SWAP2 SWAP1 PUSH2 0x22B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x171B SWAP3 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x190C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1805 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x190C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x18E5 SWAP2 SWAP1 PUSH2 0x222E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 PUSH3 0x15180 DUP4 PUSH2 0x16D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x19CE JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x198E SWAP2 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x19CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C4 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x19E2 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1A30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A27 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A39 DUP6 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0x1A78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6F SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1ADE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1AF3 DUP3 DUP3 DUP7 PUSH2 0x1B22 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1B32 JUMPI DUP3 SWAP1 POP PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1B45 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B79 SWAP2 SWAP1 PUSH2 0x1FFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B98 DUP2 PUSH2 0x276F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BAD DUP2 PUSH2 0x2786 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BC2 DUP2 PUSH2 0x279D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BD7 DUP2 PUSH2 0x279D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF3 JUMPI PUSH2 0x1BF2 PUSH2 0x2483 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C01 DUP5 DUP3 DUP6 ADD PUSH2 0x1B89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x2483 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C2E DUP5 DUP3 DUP6 ADD PUSH2 0x1B9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4D JUMPI PUSH2 0x1C4C PUSH2 0x2483 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C5B DUP5 DUP3 DUP6 ADD PUSH2 0x1BB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7A JUMPI PUSH2 0x1C79 PUSH2 0x2483 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C88 DUP5 DUP3 DUP6 ADD PUSH2 0x1BC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x2483 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC7 DUP6 DUP3 DUP7 ADD PUSH2 0x1BB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDA DUP2 PUSH2 0x2343 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CEB DUP3 PUSH2 0x21FC JUMP JUMPDEST PUSH2 0x1CF5 DUP2 DUP6 PUSH2 0x2212 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D05 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23C1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1A DUP2 PUSH2 0x238B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2B DUP3 PUSH2 0x2207 JUMP JUMPDEST PUSH2 0x1D35 DUP2 DUP6 PUSH2 0x221D JUMP JUMPDEST SWAP4 POP PUSH2 0x1D45 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23C1 JUMP JUMPDEST PUSH2 0x1D4E DUP2 PUSH2 0x2488 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D66 PUSH1 0x10 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D71 DUP3 PUSH2 0x2499 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D89 PUSH1 0x2A DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D94 DUP3 PUSH2 0x24C2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAC PUSH1 0x26 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB7 DUP3 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCF PUSH1 0xE DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDA DUP3 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF2 PUSH1 0xF DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFD DUP3 PUSH2 0x2589 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E15 PUSH1 0x26 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E20 DUP3 PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E38 PUSH1 0x26 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E43 DUP3 PUSH2 0x2601 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5B PUSH1 0x1F DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E66 DUP3 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7E PUSH1 0x20 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E89 DUP3 PUSH2 0x2679 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA1 PUSH1 0xB DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAC DUP3 PUSH2 0x26A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC4 PUSH1 0x1D DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECF DUP3 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 PUSH1 0x1A DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF2 DUP3 PUSH2 0x26F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0A PUSH1 0x17 DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F15 DUP3 PUSH2 0x271D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2D PUSH1 0xD DUP4 PUSH2 0x221D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F38 DUP3 PUSH2 0x2746 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F4C DUP2 PUSH2 0x2381 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5E DUP3 DUP5 PUSH2 0x1CE0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F99 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CD1 JUMP JUMPDEST PUSH2 0x1FA6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CD1 JUMP JUMPDEST PUSH2 0x1FB3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F43 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FD0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CD1 JUMP JUMPDEST PUSH2 0x1FDD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F43 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2019 DUP2 DUP5 PUSH2 0x1D20 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x203A DUP2 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x205A DUP2 PUSH2 0x1D7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x207A DUP2 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x209A DUP2 PUSH2 0x1DC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20BA DUP2 PUSH2 0x1DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20DA DUP2 PUSH2 0x1E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20FA DUP2 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211A DUP2 PUSH2 0x1E4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x213A DUP2 PUSH2 0x1E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215A DUP2 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x217A DUP2 PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x219A DUP2 PUSH2 0x1EDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21BA DUP2 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21DA DUP2 PUSH2 0x1F20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2239 DUP3 PUSH2 0x2381 JUMP JUMPDEST SWAP2 POP PUSH2 0x2244 DUP4 PUSH2 0x2381 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2279 JUMPI PUSH2 0x2278 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228F DUP3 PUSH2 0x2381 JUMP JUMPDEST SWAP2 POP PUSH2 0x229A DUP4 PUSH2 0x2381 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x2454 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C0 DUP3 PUSH2 0x2381 JUMP JUMPDEST SWAP2 POP PUSH2 0x22CB DUP4 PUSH2 0x2381 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2304 JUMPI PUSH2 0x2303 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231A DUP3 PUSH2 0x2381 JUMP JUMPDEST SWAP2 POP PUSH2 0x2325 DUP4 PUSH2 0x2381 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2338 JUMPI PUSH2 0x2337 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234E DUP3 PUSH2 0x2361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2396 DUP3 PUSH2 0x239D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A8 DUP3 PUSH2 0x23AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BA DUP3 PUSH2 0x2361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23DF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23C4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x23EE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23FF DUP3 PUSH2 0x2381 JUMP JUMPDEST SWAP2 POP PUSH2 0x240A DUP4 PUSH2 0x2381 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x241A JUMPI PUSH2 0x2419 PUSH2 0x2454 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420416464726573732E20416464726573732063616E27742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420415059000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2778 DUP2 PUSH2 0x2343 JUMP JUMPDEST DUP2 EQ PUSH2 0x2783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x278F DUP2 PUSH2 0x2355 JUMP JUMPDEST DUP2 EQ PUSH2 0x279A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x27A6 DUP2 PUSH2 0x2381 JUMP JUMPDEST DUP2 EQ PUSH2 0x27B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB GASPRICE 0xBC PUSH9 0x934819B2EA9A3B9877 0x2F 0xAD 0xFB 0xAE INVALID 0xD7 0xB0 NUMBER 0x21 CODECOPY DUP15 EXP AND SWAP4 SGT 0xBF PUSH12 0x89AA64736F6C634300080700 CALLER ",
							"sourceMap": "260:6665:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3819:916;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6673:122;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6010:603;;;:::i;:::-;;2763:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4743:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5810:159;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4954:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;972:26:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5484:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:266:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3251:521;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6803:119:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1005:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3819:916;3874:21;3898:7;:19;3906:10;3898:19;;;;;;;;;;;;;;;3874:43;;3947:1;3938:6;:10;3930:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4013:6;:19;;;4003:6;:29;;3995:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;4064:14;:12;:14::i;:::-;4089:27;4128:5;;;;;;;;;;;:15;;;4152:4;4128:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4119:6;:39;:81;;4170:5;;;;;;;;;;;:15;;;4194:4;4170:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4119:81;;;4161:6;4119:81;4089:111;;4211:24;4311:1;4295:12;;4238:54;4285:6;4238:42;4258:6;:21;;;4238:15;:19;;:42;;;;:::i;:::-;:46;;:54;;;;:::i;:::-;:69;;;;:::i;:::-;:74;:82;;4319:1;4238:82;;;4315:1;4238:82;4211:109;;;;4353:115;4377:90;4463:3;4377:81;4440:17;;4377:58;4415:19;4377:33;4393:16;4377:6;:11;;;:15;;:33;;;;:::i;:::-;:37;;:58;;;;:::i;:::-;:62;;:81;;;;:::i;:::-;:85;;:90;;;;:::i;:::-;4353:19;:23;;:115;;;;:::i;:::-;4331:137;;4493:36;4509:19;4493:11;;:15;;:36;;;;:::i;:::-;4479:11;:50;;;;4562:44;4586:19;4562:6;:19;;;:23;;:44;;;;:::i;:::-;4540:6;:19;;:66;;;;4617:51;4636:10;4648:19;4617:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;4686:41;4695:10;4707:19;4686:41;;;;;;;:::i;:::-;;;;;;;;3861:874;;;3819:916;:::o;6673:122::-;6718:7;6755;:19;6763:10;6755:19;;;;;;;;;;;;;;;:32;;;6748:39;;6673:122;:::o;6010:603::-;6056:14;:12;:14::i;:::-;6081:21;6105:7;:19;6113:10;6105:19;;;;;;;;;;;;;;;6081:43;;6135:21;6159:89;6190:57;6241:5;6190:46;6221:14;;6190:6;:26;;;:30;;:46;;;;:::i;:::-;:50;;:57;;;;:::i;:::-;6159:6;:26;;;:30;;:89;;;;:::i;:::-;6135:113;;6293:1;6277:13;:17;6269:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;6346:5;;;;;;;;;;;:15;;;6362:13;;;;;;;;;;;6346:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6330:13;:46;6326:111;;;6407:5;;;;;;;;;;;:15;;;6423:13;;;;;;;;;;;6407:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6391:46;;6326:111;6448:64;6471:13;;;;;;;;;;;6486:10;6498:13;6448:5;;;;;;;;;;;:22;;;;:64;;;;;;:::i;:::-;6552:1;6523:6;:26;;:30;;;;6571:34;6579:10;6591:13;6571:34;;;;;;;:::i;:::-;;;;;;;;6035:578;;6010:603::o;2763:424::-;2857:1;2847:7;:11;2839:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2943:7;2913:5;;;;;;;;;;;:15;;;2929:10;2913:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;2905:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3025:1;2987:7;:19;2995:10;2987:19;;;;;;;;;;;;;;;:34;;;:39;;2979:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3086:5;3059:7;:19;3067:10;3059:19;;;;;;;;;;;;;;;:24;;:32;;;;3139:15;3102:7;:19;3110:10;3102:19;;;;;;;;;;;;;;;:34;;:52;;;;3165:14;3171:7;3165:5;:14::i;:::-;2763:424;;:::o;4743:203::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4837:1:7::1;4824:10;:14;4816:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;4887:10;4875:9;:22;;;;4915:23;4927:10;4915:23;;;;;;:::i;:::-;;;;;;;;4743:203:::0;:::o;5810:159::-;5858:7;5922;:19;5930:10;5922:19;;;;;;;;;;;;;;;:39;;;5915:46;;5810:159;:::o;4954:248::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5065:1:7::1;5049:13;:17;5041:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5122:25;5140:6;5122:13;:17;;:25;;;;:::i;:::-;5107:12;:40;;;;5165:29;5180:13;5165:29;;;;;;:::i;:::-;;;;;;;;4954:248:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;972:26:7:-;;;;:::o;5484:267::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5606:1:7::1;5581:27;;:14;:27;;;5573:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;5680:14;5664:13;;:30;;;;;;;;;;;;;;;;;;5712:31;5728:14;5712:31;;;;;;:::i;:::-;;;;;;;;5484:267:::0;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;5210:266:7:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5328:1:7::1;5307:18;:22;5299:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5393:18;5373:17;:38;;;;5429:39;5449:18;5429:39;;;;;;:::i;:::-;;;;;;;;5210:266:::0;:::o;3251:521::-;3328:1;3318:7;:11;3310:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3414:7;3384:5;;;;;;;;;;;:15;;;3400:10;3384:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3376:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3460:14;:12;:14::i;:::-;3485:21;3509:7;:19;3517:10;3509:19;;;;;;;;;;;;;;;3485:43;;3539:58;3562:10;3582:4;3589:7;3539:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;3630:32;3654:7;3630:6;:19;;;:23;;:32;;;;:::i;:::-;3608:6;:19;;:54;;;;3687:24;3703:7;3687:11;;:15;;:24;;;;:::i;:::-;3673:11;:38;;;;3737:27;3744:10;3756:7;3737:27;;;;;;;:::i;:::-;;;;;;;;3289:483;3251:521;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6803:119:7:-;6848:7;6875;:19;6883:10;6875:19;;;;;;;;;;;;;;;:39;;;6868:46;;6803:119;:::o;1005:19::-;;;;;;;;;;;;;:::o;2013:742::-;2065:21;2089:7;:19;2097:10;2089:19;;;;;;;;;;;;;;;2065:43;;2140:6;:22;;;2122:15;:40;2119:78;;;2179:7;;;2119:78;2215:16;2234:61;2273:6;:21;;;2255:15;:39;;;;:::i;:::-;2234:20;:61::i;:::-;2215:80;;2306:17;2326:57;2379:3;2326:48;2364:9;;2326:33;2350:8;2326:6;:19;;;:23;;:33;;;;:::i;:::-;:37;;:48;;;;:::i;:::-;:52;;:57;;;;:::i;:::-;2306:77;;2413:1;2398:6;:11;;;:16;2394:222;;;2431:18;2452:26;2465:12;;2452:8;:12;;:26;;;;:::i;:::-;2431:47;;2505:99;2600:3;2505:90;2545:49;2559:34;2580:12;;2559:20;:34::i;:::-;2545:9;;:13;;:49;;;;:::i;:::-;2505:35;2529:10;2505:6;:19;;;:23;;:35;;;;:::i;:::-;:39;;:90;;;;:::i;:::-;:94;;:99;;;;:::i;:::-;2493:111;;2416:200;2394:222;2655:41;2686:9;2655:6;:26;;;:30;;:41;;;;:::i;:::-;2626:6;:26;;:70;;;;2732:15;2707:6;:22;;:40;;;;2044:711;;;2013:742;:::o;3108:96:4:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;290:177:6:-;373:86;393:5;423:23;;;448:2;452:5;400:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:19;:86::i;:::-;290:177;;;:::o;475:205::-;576:96;596:5;626:27;;;655:4;661:2;665:5;603:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:19;:96::i;:::-;475:205;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;2741:96:4:-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;1804:134:7:-;1874:7;1911:19;1923:6;1911:7;:11;;:19;;;;:::i;:::-;1904:26;;1804:134;;;:::o;2599:769:6:-;3031:23;3057:69;3085:4;3057:69;;;;;;;;;;;;;;;;;3065:5;3057:27;;;;:69;;;;;:::i;:::-;3031:95;;3161:1;3141:10;:17;:21;3137:224;;;3283:10;3272:30;;;;;;;;;;;;:::i;:::-;3264:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:224;2669:699;2599:769;;:::o;3861:223:2:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:474::-;2035:6;2043;2092:2;2080:9;2071:7;2067:23;2063:32;2060:119;;;2098:79;;:::i;:::-;2060:119;2218:1;2243:53;2288:7;2279:6;2268:9;2264:22;2243:53;:::i;:::-;2233:63;;2189:117;2345:2;2371:53;2416:7;2407:6;2396:9;2392:22;2371:53;:::i;:::-;2361:63;;2316:118;1967:474;;;;;:::o;2447:118::-;2534:24;2552:5;2534:24;:::i;:::-;2529:3;2522:37;2447:118;;:::o;2571:373::-;2675:3;2703:38;2735:5;2703:38;:::i;:::-;2757:88;2838:6;2833:3;2757:88;:::i;:::-;2750:95;;2854:52;2899:6;2894:3;2887:4;2880:5;2876:16;2854:52;:::i;:::-;2931:6;2926:3;2922:16;2915:23;;2679:265;2571:373;;;;:::o;2950:159::-;3051:51;3096:5;3051:51;:::i;:::-;3046:3;3039:64;2950:159;;:::o;3115:364::-;3203:3;3231:39;3264:5;3231:39;:::i;:::-;3286:71;3350:6;3345:3;3286:71;:::i;:::-;3279:78;;3366:52;3411:6;3406:3;3399:4;3392:5;3388:16;3366:52;:::i;:::-;3443:29;3465:6;3443:29;:::i;:::-;3438:3;3434:39;3427:46;;3207:272;3115:364;;;;:::o;3485:366::-;3627:3;3648:67;3712:2;3707:3;3648:67;:::i;:::-;3641:74;;3724:93;3813:3;3724:93;:::i;:::-;3842:2;3837:3;3833:12;3826:19;;3485:366;;;:::o;3857:::-;3999:3;4020:67;4084:2;4079:3;4020:67;:::i;:::-;4013:74;;4096:93;4185:3;4096:93;:::i;:::-;4214:2;4209:3;4205:12;4198:19;;3857:366;;;:::o;4229:::-;4371:3;4392:67;4456:2;4451:3;4392:67;:::i;:::-;4385:74;;4468:93;4557:3;4468:93;:::i;:::-;4586:2;4581:3;4577:12;4570:19;;4229:366;;;:::o;4601:::-;4743:3;4764:67;4828:2;4823:3;4764:67;:::i;:::-;4757:74;;4840:93;4929:3;4840:93;:::i;:::-;4958:2;4953:3;4949:12;4942:19;;4601:366;;;:::o;4973:::-;5115:3;5136:67;5200:2;5195:3;5136:67;:::i;:::-;5129:74;;5212:93;5301:3;5212:93;:::i;:::-;5330:2;5325:3;5321:12;5314:19;;4973:366;;;:::o;5345:::-;5487:3;5508:67;5572:2;5567:3;5508:67;:::i;:::-;5501:74;;5584:93;5673:3;5584:93;:::i;:::-;5702:2;5697:3;5693:12;5686:19;;5345:366;;;:::o;5717:::-;5859:3;5880:67;5944:2;5939:3;5880:67;:::i;:::-;5873:74;;5956:93;6045:3;5956:93;:::i;:::-;6074:2;6069:3;6065:12;6058:19;;5717:366;;;:::o;6089:::-;6231:3;6252:67;6316:2;6311:3;6252:67;:::i;:::-;6245:74;;6328:93;6417:3;6328:93;:::i;:::-;6446:2;6441:3;6437:12;6430:19;;6089:366;;;:::o;6461:::-;6603:3;6624:67;6688:2;6683:3;6624:67;:::i;:::-;6617:74;;6700:93;6789:3;6700:93;:::i;:::-;6818:2;6813:3;6809:12;6802:19;;6461:366;;;:::o;6833:::-;6975:3;6996:67;7060:2;7055:3;6996:67;:::i;:::-;6989:74;;7072:93;7161:3;7072:93;:::i;:::-;7190:2;7185:3;7181:12;7174:19;;6833:366;;;:::o;7205:::-;7347:3;7368:67;7432:2;7427:3;7368:67;:::i;:::-;7361:74;;7444:93;7533:3;7444:93;:::i;:::-;7562:2;7557:3;7553:12;7546:19;;7205:366;;;:::o;7577:::-;7719:3;7740:67;7804:2;7799:3;7740:67;:::i;:::-;7733:74;;7816:93;7905:3;7816:93;:::i;:::-;7934:2;7929:3;7925:12;7918:19;;7577:366;;;:::o;7949:::-;8091:3;8112:67;8176:2;8171:3;8112:67;:::i;:::-;8105:74;;8188:93;8277:3;8188:93;:::i;:::-;8306:2;8301:3;8297:12;8290:19;;7949:366;;;:::o;8321:::-;8463:3;8484:67;8548:2;8543:3;8484:67;:::i;:::-;8477:74;;8560:93;8649:3;8560:93;:::i;:::-;8678:2;8673:3;8669:12;8662:19;;8321:366;;;:::o;8693:118::-;8780:24;8798:5;8780:24;:::i;:::-;8775:3;8768:37;8693:118;;:::o;8817:271::-;8947:3;8969:93;9058:3;9049:6;8969:93;:::i;:::-;8962:100;;9079:3;9072:10;;8817:271;;;;:::o;9094:222::-;9187:4;9225:2;9214:9;9210:18;9202:26;;9238:71;9306:1;9295:9;9291:17;9282:6;9238:71;:::i;:::-;9094:222;;;;:::o;9322:442::-;9471:4;9509:2;9498:9;9494:18;9486:26;;9522:71;9590:1;9579:9;9575:17;9566:6;9522:71;:::i;:::-;9603:72;9671:2;9660:9;9656:18;9647:6;9603:72;:::i;:::-;9685;9753:2;9742:9;9738:18;9729:6;9685:72;:::i;:::-;9322:442;;;;;;:::o;9770:332::-;9891:4;9929:2;9918:9;9914:18;9906:26;;9942:71;10010:1;9999:9;9995:17;9986:6;9942:71;:::i;:::-;10023:72;10091:2;10080:9;10076:18;10067:6;10023:72;:::i;:::-;9770:332;;;;;:::o;10108:250::-;10215:4;10253:2;10242:9;10238:18;10230:26;;10266:85;10348:1;10337:9;10333:17;10324:6;10266:85;:::i;:::-;10108:250;;;;:::o;10364:313::-;10477:4;10515:2;10504:9;10500:18;10492:26;;10564:9;10558:4;10554:20;10550:1;10539:9;10535:17;10528:47;10592:78;10665:4;10656:6;10592:78;:::i;:::-;10584:86;;10364:313;;;;:::o;10683:419::-;10849:4;10887:2;10876:9;10872:18;10864:26;;10936:9;10930:4;10926:20;10922:1;10911:9;10907:17;10900:47;10964:131;11090:4;10964:131;:::i;:::-;10956:139;;10683:419;;;:::o;11108:::-;11274:4;11312:2;11301:9;11297:18;11289:26;;11361:9;11355:4;11351:20;11347:1;11336:9;11332:17;11325:47;11389:131;11515:4;11389:131;:::i;:::-;11381:139;;11108:419;;;:::o;11533:::-;11699:4;11737:2;11726:9;11722:18;11714:26;;11786:9;11780:4;11776:20;11772:1;11761:9;11757:17;11750:47;11814:131;11940:4;11814:131;:::i;:::-;11806:139;;11533:419;;;:::o;11958:::-;12124:4;12162:2;12151:9;12147:18;12139:26;;12211:9;12205:4;12201:20;12197:1;12186:9;12182:17;12175:47;12239:131;12365:4;12239:131;:::i;:::-;12231:139;;11958:419;;;:::o;12383:::-;12549:4;12587:2;12576:9;12572:18;12564:26;;12636:9;12630:4;12626:20;12622:1;12611:9;12607:17;12600:47;12664:131;12790:4;12664:131;:::i;:::-;12656:139;;12383:419;;;:::o;12808:::-;12974:4;13012:2;13001:9;12997:18;12989:26;;13061:9;13055:4;13051:20;13047:1;13036:9;13032:17;13025:47;13089:131;13215:4;13089:131;:::i;:::-;13081:139;;12808:419;;;:::o;13233:::-;13399:4;13437:2;13426:9;13422:18;13414:26;;13486:9;13480:4;13476:20;13472:1;13461:9;13457:17;13450:47;13514:131;13640:4;13514:131;:::i;:::-;13506:139;;13233:419;;;:::o;13658:::-;13824:4;13862:2;13851:9;13847:18;13839:26;;13911:9;13905:4;13901:20;13897:1;13886:9;13882:17;13875:47;13939:131;14065:4;13939:131;:::i;:::-;13931:139;;13658:419;;;:::o;14083:::-;14249:4;14287:2;14276:9;14272:18;14264:26;;14336:9;14330:4;14326:20;14322:1;14311:9;14307:17;14300:47;14364:131;14490:4;14364:131;:::i;:::-;14356:139;;14083:419;;;:::o;14508:::-;14674:4;14712:2;14701:9;14697:18;14689:26;;14761:9;14755:4;14751:20;14747:1;14736:9;14732:17;14725:47;14789:131;14915:4;14789:131;:::i;:::-;14781:139;;14508:419;;;:::o;14933:::-;15099:4;15137:2;15126:9;15122:18;15114:26;;15186:9;15180:4;15176:20;15172:1;15161:9;15157:17;15150:47;15214:131;15340:4;15214:131;:::i;:::-;15206:139;;14933:419;;;:::o;15358:::-;15524:4;15562:2;15551:9;15547:18;15539:26;;15611:9;15605:4;15601:20;15597:1;15586:9;15582:17;15575:47;15639:131;15765:4;15639:131;:::i;:::-;15631:139;;15358:419;;;:::o;15783:::-;15949:4;15987:2;15976:9;15972:18;15964:26;;16036:9;16030:4;16026:20;16022:1;16011:9;16007:17;16000:47;16064:131;16190:4;16064:131;:::i;:::-;16056:139;;15783:419;;;:::o;16208:::-;16374:4;16412:2;16401:9;16397:18;16389:26;;16461:9;16455:4;16451:20;16447:1;16436:9;16432:17;16425:47;16489:131;16615:4;16489:131;:::i;:::-;16481:139;;16208:419;;;:::o;16633:222::-;16726:4;16764:2;16753:9;16749:18;16741:26;;16777:71;16845:1;16834:9;16830:17;16821:6;16777:71;:::i;:::-;16633:222;;;;:::o;16942:98::-;16993:6;17027:5;17021:12;17011:22;;16942:98;;;:::o;17046:99::-;17098:6;17132:5;17126:12;17116:22;;17046:99;;;:::o;17151:147::-;17252:11;17289:3;17274:18;;17151:147;;;;:::o;17304:169::-;17388:11;17422:6;17417:3;17410:19;17462:4;17457:3;17453:14;17438:29;;17304:169;;;;:::o;17479:305::-;17519:3;17538:20;17556:1;17538:20;:::i;:::-;17533:25;;17572:20;17590:1;17572:20;:::i;:::-;17567:25;;17726:1;17658:66;17654:74;17651:1;17648:81;17645:107;;;17732:18;;:::i;:::-;17645:107;17776:1;17773;17769:9;17762:16;;17479:305;;;;:::o;17790:185::-;17830:1;17847:20;17865:1;17847:20;:::i;:::-;17842:25;;17881:20;17899:1;17881:20;:::i;:::-;17876:25;;17920:1;17910:35;;17925:18;;:::i;:::-;17910:35;17967:1;17964;17960:9;17955:14;;17790:185;;;;:::o;17981:348::-;18021:7;18044:20;18062:1;18044:20;:::i;:::-;18039:25;;18078:20;18096:1;18078:20;:::i;:::-;18073:25;;18266:1;18198:66;18194:74;18191:1;18188:81;18183:1;18176:9;18169:17;18165:105;18162:131;;;18273:18;;:::i;:::-;18162:131;18321:1;18318;18314:9;18303:20;;17981:348;;;;:::o;18335:191::-;18375:4;18395:20;18413:1;18395:20;:::i;:::-;18390:25;;18429:20;18447:1;18429:20;:::i;:::-;18424:25;;18468:1;18465;18462:8;18459:34;;;18473:18;;:::i;:::-;18459:34;18518:1;18515;18511:9;18503:17;;18335:191;;;;:::o;18532:96::-;18569:7;18598:24;18616:5;18598:24;:::i;:::-;18587:35;;18532:96;;;:::o;18634:90::-;18668:7;18711:5;18704:13;18697:21;18686:32;;18634:90;;;:::o;18730:126::-;18767:7;18807:42;18800:5;18796:54;18785:65;;18730:126;;;:::o;18862:77::-;18899:7;18928:5;18917:16;;18862:77;;;:::o;18945:140::-;19009:9;19042:37;19073:5;19042:37;:::i;:::-;19029:50;;18945:140;;;:::o;19091:126::-;19141:9;19174:37;19205:5;19174:37;:::i;:::-;19161:50;;19091:126;;;:::o;19223:113::-;19273:9;19306:24;19324:5;19306:24;:::i;:::-;19293:37;;19223:113;;;:::o;19342:307::-;19410:1;19420:113;19434:6;19431:1;19428:13;19420:113;;;19519:1;19514:3;19510:11;19504:18;19500:1;19495:3;19491:11;19484:39;19456:2;19453:1;19449:10;19444:15;;19420:113;;;19551:6;19548:1;19545:13;19542:101;;;19631:1;19622:6;19617:3;19613:16;19606:27;19542:101;19391:258;19342:307;;;:::o;19655:176::-;19687:1;19704:20;19722:1;19704:20;:::i;:::-;19699:25;;19738:20;19756:1;19738:20;:::i;:::-;19733:25;;19777:1;19767:35;;19782:18;;:::i;:::-;19767:35;19823:1;19820;19816:9;19811:14;;19655:176;;;;:::o;19837:180::-;19885:77;19882:1;19875:88;19982:4;19979:1;19972:15;20006:4;20003:1;19996:15;20023:180;20071:77;20068:1;20061:88;20168:4;20165:1;20158:15;20192:4;20189:1;20182:15;20332:117;20441:1;20438;20431:12;20455:102;20496:6;20547:2;20543:7;20538:2;20531:5;20527:14;20523:28;20513:38;;20455:102;;;:::o;20563:166::-;20703:18;20699:1;20691:6;20687:14;20680:42;20563:166;:::o;20735:229::-;20875:34;20871:1;20863:6;20859:14;20852:58;20944:12;20939:2;20931:6;20927:15;20920:37;20735:229;:::o;20970:225::-;21110:34;21106:1;21098:6;21094:14;21087:58;21179:8;21174:2;21166:6;21162:15;21155:33;20970:225;:::o;21201:164::-;21341:16;21337:1;21329:6;21325:14;21318:40;21201:164;:::o;21371:165::-;21511:17;21507:1;21499:6;21495:14;21488:41;21371:165;:::o;21542:225::-;21682:34;21678:1;21670:6;21666:14;21659:58;21751:8;21746:2;21738:6;21734:15;21727:33;21542:225;:::o;21773:::-;21913:34;21909:1;21901:6;21897:14;21890:58;21982:8;21977:2;21969:6;21965:15;21958:33;21773:225;:::o;22004:181::-;22144:33;22140:1;22132:6;22128:14;22121:57;22004:181;:::o;22191:182::-;22331:34;22327:1;22319:6;22315:14;22308:58;22191:182;:::o;22379:161::-;22519:13;22515:1;22507:6;22503:14;22496:37;22379:161;:::o;22546:179::-;22686:31;22682:1;22674:6;22670:14;22663:55;22546:179;:::o;22731:176::-;22871:28;22867:1;22859:6;22855:14;22848:52;22731:176;:::o;22913:173::-;23053:25;23049:1;23041:6;23037:14;23030:49;22913:173;:::o;23092:163::-;23232:15;23228:1;23220:6;23216:14;23209:39;23092:163;:::o;23261:122::-;23334:24;23352:5;23334:24;:::i;:::-;23327:5;23324:35;23314:63;;23373:1;23370;23363:12;23314:63;23261:122;:::o;23389:116::-;23459:21;23474:5;23459:21;:::i;:::-;23452:5;23449:32;23439:60;;23495:1;23492;23485:12;23439:60;23389:116;:::o;23511:122::-;23584:24;23602:5;23584:24;:::i;:::-;23577:5;23574:35;23564:63;;23623:1;23620;23613:12;23564:63;23511:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2043600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"harvest()": "infinite",
								"owner()": "2589",
								"renounceOwnership()": "30463",
								"rewardAmount()": "2598",
								"rewardToHarvest()": "2577",
								"setBountyWallet(address)": "infinite",
								"setEventPeriod(uint256)": "infinite",
								"setFixedAPY(uint256)": "infinite",
								"setUnstakingFeeRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakedAmount()": "2578",
								"startStaking(uint256,uint256)": "infinite",
								"token()": "2688",
								"totalStaked()": "2452",
								"transferOwnership(address)": "30767",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Init()": "infinite",
								"calDaysFromTimestamp(uint256)": "infinite",
								"updateReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 6925,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1543,
									"end": 1549,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1543,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1543,
									"end": 1547,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1543,
									"end": 1547,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1543,
									"end": 1549,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1543,
									"end": 1549,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1543,
									"end": 1549,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1543,
									"end": 1549,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1543,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1576,
									"end": 1590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1573,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1560,
									"end": 1573,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1616,
									"end": 1622,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1606,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1601,
									"end": 1606,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1623,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1639,
									"end": 1796,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1639,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1690,
									"name": "PUSH",
									"source": 7,
									"value": "7D"
								},
								{
									"begin": 1675,
									"end": 1684,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1675,
									"end": 1690,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1675,
									"end": 1690,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1675,
									"end": 1690,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1675,
									"end": 1690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1725,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1701,
									"end": 1718,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1701,
									"end": 1725,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1725,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1725,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1753,
									"end": 1756,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 1736,
									"end": 1750,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1736,
									"end": 1756,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1736,
									"end": 1756,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1736,
									"end": 1756,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1736,
									"end": 1756,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "PUSH",
									"source": 7,
									"value": "93A80"
								},
								{
									"begin": 1767,
									"end": 1779,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1767,
									"end": 1788,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1788,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1788,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1788,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1639,
									"end": 1796,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 6925,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb3abc68934819b2ea9a3b98772fadfbaefed7b04321398e0a169313bf6b89aa64736f6c63430008070033",
									".code": [
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "F7B2A7BE"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "8A9D3839"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "50F19C87"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "50F19C87"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "5D2EC65D"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "692642E7"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "373D6132"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "4641257D"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 6925,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6613,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6010,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 6010,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6010,
											"end": 6613,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6010,
											"end": 6613,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 6010,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6613,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 972,
											"end": 998,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3874,
											"end": 3895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3916,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3917,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3874,
											"end": 3917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3874,
											"end": 3917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3948,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3930,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4019,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4032,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4013,
											"end": 4032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4032,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4032,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4032,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3995,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4064,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 4064,
											"end": 4078,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4064,
											"end": 4078,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4064,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4143,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4143,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 4152,
											"end": 4156,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4158,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4119,
											"end": 4200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 4194,
											"end": 4198,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4119,
											"end": 4200,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4200,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4119,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4161,
											"end": 4167,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4200,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4119,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4312,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4307,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4295,
											"end": 4307,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4285,
											"end": 4291,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4258,
											"end": 4264,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4279,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4258,
											"end": 4279,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4279,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4238,
											"end": 4257,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4238,
											"end": 4284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4292,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4292,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4292,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4238,
											"end": 4292,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4238,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4238,
											"end": 4307,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4238,
											"end": 4307,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4238,
											"end": 4307,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4238,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4312,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4238,
											"end": 4320,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4320,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4238,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4238,
											"end": 4320,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4320,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4238,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4320,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4238,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4320,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4211,
											"end": 4320,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4377,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4463,
											"end": 4466,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 4377,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4440,
											"end": 4457,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4440,
											"end": 4457,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4415,
											"end": 4434,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4393,
											"end": 4409,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4388,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4377,
											"end": 4388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4388,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4377,
											"end": 4392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4377,
											"end": 4414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4435,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4435,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4435,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4435,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4377,
											"end": 4435,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4377,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4377,
											"end": 4439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4458,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4458,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4458,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4377,
											"end": 4458,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4377,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4377,
											"end": 4462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4467,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4467,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4467,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4467,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4377,
											"end": 4467,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4377,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4372,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4353,
											"end": 4376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4468,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4353,
											"end": 4468,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4468,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4468,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4353,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4331,
											"end": 4468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4331,
											"end": 4468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4509,
											"end": 4528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4493,
											"end": 4508,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4529,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4493,
											"end": 4529,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4529,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4529,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4493,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4490,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4479,
											"end": 4529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4529,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4586,
											"end": 4605,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4568,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4581,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4562,
											"end": 4581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4581,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4562,
											"end": 4585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4606,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4562,
											"end": 4606,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4606,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4562,
											"end": 4606,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4562,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4546,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4559,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4540,
											"end": 4559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4606,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4606,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4636,
											"end": 4646,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4648,
											"end": 4667,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4635,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4617,
											"end": 4635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 4617,
											"end": 4635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "PUSH",
											"source": 7,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 4695,
											"end": 4705,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4726,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 4735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 4735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 4735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 4735,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6762,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6763,
											"end": 6773,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6774,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6787,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6755,
											"end": 6787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6787,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6748,
											"end": 6787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6748,
											"end": 6787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6795,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6010,
											"end": 6613,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6010,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 6056,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 6056,
											"end": 6070,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6056,
											"end": 6070,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 6056,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6112,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6123,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6156,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6159,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 6190,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 6241,
											"end": 6246,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 6190,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6221,
											"end": 6235,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6221,
											"end": 6235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6196,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6190,
											"end": 6216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6216,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 6190,
											"end": 6220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6236,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6190,
											"end": 6236,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6236,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6190,
											"end": 6236,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6190,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6190,
											"end": 6240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6247,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6247,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6190,
											"end": 6247,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6247,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6190,
											"end": 6247,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 6190,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6165,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6248,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6248,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6159,
											"end": 6248,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6248,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6159,
											"end": 6248,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 6159,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6135,
											"end": 6248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6269,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6361,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6361,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6361,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6362,
											"end": 6375,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6362,
											"end": 6375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6375,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6375,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6362,
											"end": 6375,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6375,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6375,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6375,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6330,
											"end": 6343,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6330,
											"end": 6376,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6326,
											"end": 6437,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6326,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6326,
											"end": 6437,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6423,
											"end": 6436,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6423,
											"end": 6436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6436,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6436,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6423,
											"end": 6436,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6436,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6436,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6423,
											"end": 6436,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6407,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6326,
											"end": 6437,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6326,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6496,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6511,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6448,
											"end": 6453,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6470,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6448,
											"end": 6470,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6448,
											"end": 6470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6512,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6512,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6512,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6448,
											"end": 6512,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6512,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6448,
											"end": 6512,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 6448,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6523,
											"end": 6529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6523,
											"end": 6549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6523,
											"end": 6549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6523,
											"end": 6553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6523,
											"end": 6553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6523,
											"end": 6553,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6523,
											"end": 6553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "PUSH",
											"source": 7,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 6579,
											"end": 6589,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6591,
											"end": 6604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6605,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6613,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2847,
											"end": 2858,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2839,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2950,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2929,
											"end": 2939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2913,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2950,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2905,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3026,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3005,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3006,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3021,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2987,
											"end": 3021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3021,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3026,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3026,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2979,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3086,
											"end": 3091,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3066,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3077,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3091,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3091,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3154,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3109,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3120,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3121,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3136,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3102,
											"end": 3136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3154,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3165,
											"end": 3179,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3165,
											"end": 3179,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3165,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 3187,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4824,
											"end": 4838,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 4897,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 4884,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4875,
											"end": 4897,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 4897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 4897,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 4897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "PUSH",
											"source": 7,
											"value": "B8F51888A0746F534A064D0D08F74852A939D6CD181760E1CEDC7A8396D9E22F"
										},
										{
											"begin": 4927,
											"end": 4937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4946,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5929,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5961,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5961,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5961,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5969,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5049,
											"end": 5062,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5041,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 5122,
											"end": 5135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5122,
											"end": 5139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5147,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5122,
											"end": 5147,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5147,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5122,
											"end": 5147,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5122,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5107,
											"end": 5147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5147,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH",
											"source": 7,
											"value": "189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C"
										},
										{
											"begin": 5180,
											"end": 5193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5202,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 972,
											"end": 998,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 998,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5595,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5573,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5677,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5664,
											"end": 5677,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "PUSH",
											"source": 7,
											"value": "EDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87"
										},
										{
											"begin": 5728,
											"end": 5742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5751,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5329,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 5299,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5390,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81"
										},
										{
											"begin": 5449,
											"end": 5467,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5476,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3318,
											"end": 3329,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3421,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3399,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3384,
											"end": 3399,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3399,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3384,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3421,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3376,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3460,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3460,
											"end": 3474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3460,
											"end": 3474,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3460,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3528,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3562,
											"end": 3572,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3586,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3589,
											"end": 3596,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3597,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3597,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3597,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3597,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3597,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3597,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3539,
											"end": 3597,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3539,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3654,
											"end": 3661,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3630,
											"end": 3653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3662,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3662,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3662,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3662,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3662,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3630,
											"end": 3662,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3630,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3608,
											"end": 3627,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3608,
											"end": 3627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3608,
											"end": 3662,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3608,
											"end": 3662,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3608,
											"end": 3662,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3608,
											"end": 3662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3703,
											"end": 3710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3687,
											"end": 3698,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3687,
											"end": 3698,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3687,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3687,
											"end": 3702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3687,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3673,
											"end": 3684,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3673,
											"end": 3711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3673,
											"end": 3711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3673,
											"end": 3711,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3673,
											"end": 3711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "PUSH",
											"source": 7,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3744,
											"end": 3754,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3763,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3772,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6848,
											"end": 6855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6882,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6893,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6894,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6914,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6922,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1024,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2013,
											"end": 2755,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2013,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2096,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2162,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2140,
											"end": 2162,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2162,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2122,
											"end": 2162,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2197,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2119,
											"end": 2197,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2179,
											"end": 2186,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2179,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2179,
											"end": 2186,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2197,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2119,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2231,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2273,
											"end": 2279,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2273,
											"end": 2294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2294,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2270,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2234,
											"end": 2295,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2234,
											"end": 2295,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2234,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2379,
											"end": 2382,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2326,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2364,
											"end": 2373,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2364,
											"end": 2373,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2350,
											"end": 2358,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2332,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2345,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2326,
											"end": 2345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2345,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2326,
											"end": 2349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2359,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2326,
											"end": 2359,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2359,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2326,
											"end": 2359,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2326,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2326,
											"end": 2363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2374,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2326,
											"end": 2374,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2374,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2326,
											"end": 2374,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2326,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2326,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2383,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2383,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2326,
											"end": 2383,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2383,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2326,
											"end": 2383,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2326,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2414,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2409,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2398,
											"end": 2409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2409,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2414,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2616,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2394,
											"end": 2616,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2465,
											"end": 2477,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2465,
											"end": 2477,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2452,
											"end": 2460,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2452,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2452,
											"end": 2464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2452,
											"end": 2478,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2452,
											"end": 2478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2452,
											"end": 2478,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2452,
											"end": 2478,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2452,
											"end": 2478,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2452,
											"end": 2478,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2452,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2600,
											"end": 2603,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2505,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2545,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2580,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2580,
											"end": 2592,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2545,
											"end": 2558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2594,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2545,
											"end": 2594,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2594,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2545,
											"end": 2594,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2545,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2529,
											"end": 2539,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2511,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2524,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2505,
											"end": 2524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2524,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2540,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2505,
											"end": 2540,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2540,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2540,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2505,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2505,
											"end": 2544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2595,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2505,
											"end": 2595,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2595,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2595,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2505,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2505,
											"end": 2599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2505,
											"end": 2604,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2505,
											"end": 2604,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2604,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2505,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2616,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2616,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2394,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2681,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2655,
											"end": 2685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2632,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2696,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2747,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2713,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2729,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2707,
											"end": 2729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2747,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2755,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2013,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2755,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 452,
											"end": 457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 655,
											"end": 659,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 661,
											"end": 663,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1804,
											"end": 1938,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1804,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 1911,
											"end": 1918,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1911,
											"end": 1922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1930,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1930,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1911,
											"end": 1930,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1930,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 1930,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1911,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1938,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3085,
											"end": 3089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3070,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2094,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2277,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2529,
											"end": 2532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2559,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 2838,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2885,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3203,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3264,
											"end": 3269,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3345,
											"end": 3348,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3403,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3441,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 3712,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3707,
											"end": 3710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4002,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 4079,
											"end": 4082,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 4185,
											"end": 4188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4205,
											"end": 4217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4451,
											"end": 4454,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 4557,
											"end": 4560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4588,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4828,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 4823,
											"end": 4826,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 4956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 5195,
											"end": 5198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5487,
											"end": 5490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 5572,
											"end": 5574,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5567,
											"end": 5570,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5673,
											"end": 5676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5702,
											"end": 5704,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5697,
											"end": 5700,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 5944,
											"end": 5946,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5939,
											"end": 5942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6076,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 6417,
											"end": 6420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6448,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6441,
											"end": 6444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6603,
											"end": 6606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6683,
											"end": 6686,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6818,
											"end": 6820,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6813,
											"end": 6816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 6978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 7055,
											"end": 7058,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 7161,
											"end": 7164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7192,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 7432,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7557,
											"end": 7560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7719,
											"end": 7722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 7799,
											"end": 7802,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 7905,
											"end": 7908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 7937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8094,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 8277,
											"end": 8280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8297,
											"end": 8309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8463,
											"end": 8466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 8548,
											"end": 8550,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 8543,
											"end": 8546,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 8649,
											"end": 8652,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8678,
											"end": 8680,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8673,
											"end": 8676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8669,
											"end": 8681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8693,
											"end": 8811,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 8693,
											"end": 8811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8780,
											"end": 8804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 8798,
											"end": 8803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8780,
											"end": 8804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 8780,
											"end": 8804,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8780,
											"end": 8804,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 8780,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8775,
											"end": 8778,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8768,
											"end": 8805,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 8811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 8811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 8811,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8817,
											"end": 9088,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 8817,
											"end": 9088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8947,
											"end": 8950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 9058,
											"end": 9061,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9049,
											"end": 9055,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8969,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8969,
											"end": 9062,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8969,
											"end": 9062,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8969,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 9062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 9062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9072,
											"end": 9082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9072,
											"end": 9082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8817,
											"end": 9088,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8817,
											"end": 9088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8817,
											"end": 9088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8817,
											"end": 9088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8817,
											"end": 9088,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9094,
											"end": 9316,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 9094,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9187,
											"end": 9191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9225,
											"end": 9227,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9223,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9210,
											"end": 9228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 9306,
											"end": 9307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9295,
											"end": 9304,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9282,
											"end": 9288,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9094,
											"end": 9316,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9094,
											"end": 9316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9094,
											"end": 9316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9094,
											"end": 9316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9094,
											"end": 9316,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9322,
											"end": 9764,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 9322,
											"end": 9764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9471,
											"end": 9475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9509,
											"end": 9511,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9498,
											"end": 9507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9494,
											"end": 9512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9486,
											"end": 9512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9486,
											"end": 9512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9522,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 9590,
											"end": 9591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9579,
											"end": 9588,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9592,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9566,
											"end": 9572,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9522,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 9522,
											"end": 9593,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9522,
											"end": 9593,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 9522,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9603,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 9671,
											"end": 9673,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9660,
											"end": 9669,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9656,
											"end": 9674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9647,
											"end": 9653,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9603,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 9603,
											"end": 9675,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9603,
											"end": 9675,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 9603,
											"end": 9675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9685,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 9753,
											"end": 9755,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9742,
											"end": 9751,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9729,
											"end": 9735,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9685,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 9685,
											"end": 9757,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9685,
											"end": 9757,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 9685,
											"end": 9757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9764,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9764,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9764,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9770,
											"end": 10102,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 9770,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9891,
											"end": 9895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9931,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9918,
											"end": 9927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9914,
											"end": 9932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9906,
											"end": 9932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9906,
											"end": 9932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9942,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 10010,
											"end": 10011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9995,
											"end": 10012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9986,
											"end": 9992,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9942,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 9942,
											"end": 10013,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9942,
											"end": 10013,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 9942,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 10091,
											"end": 10093,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10080,
											"end": 10089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10076,
											"end": 10094,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 10023,
											"end": 10095,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10023,
											"end": 10095,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 10023,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9770,
											"end": 10102,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9770,
											"end": 10102,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9770,
											"end": 10102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9770,
											"end": 10102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9770,
											"end": 10102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9770,
											"end": 10102,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10108,
											"end": 10358,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 10108,
											"end": 10358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10253,
											"end": 10255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10251,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10238,
											"end": 10256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10256,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10266,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 10348,
											"end": 10349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10324,
											"end": 10330,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10266,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 10266,
											"end": 10351,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10266,
											"end": 10351,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 10266,
											"end": 10351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10108,
											"end": 10358,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10108,
											"end": 10358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10108,
											"end": 10358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10108,
											"end": 10358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10108,
											"end": 10358,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10364,
											"end": 10677,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 10364,
											"end": 10677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10515,
											"end": 10517,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10504,
											"end": 10513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10492,
											"end": 10518,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10492,
											"end": 10518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10564,
											"end": 10573,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10558,
											"end": 10562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10554,
											"end": 10574,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10550,
											"end": 10551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10539,
											"end": 10548,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10535,
											"end": 10552,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10575,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 10665,
											"end": 10669,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10656,
											"end": 10662,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 10592,
											"end": 10670,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10592,
											"end": 10670,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 10592,
											"end": 10670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10584,
											"end": 10670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10584,
											"end": 10670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10677,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10677,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10887,
											"end": 10889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10872,
											"end": 10890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10864,
											"end": 10890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10864,
											"end": 10890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 10934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10922,
											"end": 10923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10911,
											"end": 10920,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10907,
											"end": 10924,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10900,
											"end": 10947,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 11090,
											"end": 11094,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10956,
											"end": 11095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10956,
											"end": 11095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11108,
											"end": 11527,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 11108,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11274,
											"end": 11278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11314,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11301,
											"end": 11310,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11297,
											"end": 11315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11289,
											"end": 11315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11289,
											"end": 11315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11361,
											"end": 11370,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11351,
											"end": 11371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11347,
											"end": 11348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11332,
											"end": 11349,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11325,
											"end": 11372,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11389,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 11515,
											"end": 11519,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11389,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 11389,
											"end": 11520,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11389,
											"end": 11520,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 11389,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11381,
											"end": 11520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11381,
											"end": 11520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11527,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11527,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11533,
											"end": 11952,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 11533,
											"end": 11952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11699,
											"end": 11703,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11737,
											"end": 11739,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11726,
											"end": 11735,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11722,
											"end": 11740,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11714,
											"end": 11740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11714,
											"end": 11740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11786,
											"end": 11795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11780,
											"end": 11784,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11776,
											"end": 11796,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11761,
											"end": 11770,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11757,
											"end": 11774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11750,
											"end": 11797,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11814,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 11940,
											"end": 11944,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11814,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 11814,
											"end": 11945,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11814,
											"end": 11945,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 11814,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11806,
											"end": 11945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11806,
											"end": 11945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11533,
											"end": 11952,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11533,
											"end": 11952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11533,
											"end": 11952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11533,
											"end": 11952,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11958,
											"end": 12377,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11958,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12124,
											"end": 12128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12162,
											"end": 12164,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12151,
											"end": 12160,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12147,
											"end": 12165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12139,
											"end": 12165,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12139,
											"end": 12165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12205,
											"end": 12209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12201,
											"end": 12221,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12197,
											"end": 12198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12186,
											"end": 12195,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12182,
											"end": 12199,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12175,
											"end": 12222,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12239,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 12365,
											"end": 12369,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12239,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 12239,
											"end": 12370,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12239,
											"end": 12370,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 12239,
											"end": 12370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12231,
											"end": 12370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12231,
											"end": 12370,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11958,
											"end": 12377,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11958,
											"end": 12377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11958,
											"end": 12377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11958,
											"end": 12377,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12383,
											"end": 12802,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 12383,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12549,
											"end": 12553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12587,
											"end": 12589,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12576,
											"end": 12585,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12564,
											"end": 12590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12564,
											"end": 12590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12636,
											"end": 12645,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12630,
											"end": 12634,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12626,
											"end": 12646,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12622,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12611,
											"end": 12620,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12607,
											"end": 12624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12600,
											"end": 12647,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12664,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 12790,
											"end": 12794,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12664,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 12664,
											"end": 12795,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12664,
											"end": 12795,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 12664,
											"end": 12795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12656,
											"end": 12795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12656,
											"end": 12795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12383,
											"end": 12802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12383,
											"end": 12802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12383,
											"end": 12802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12383,
											"end": 12802,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12808,
											"end": 13227,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 12808,
											"end": 13227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12974,
											"end": 12978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13012,
											"end": 13014,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13001,
											"end": 13010,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12997,
											"end": 13015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12989,
											"end": 13015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12989,
											"end": 13015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13061,
											"end": 13070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13055,
											"end": 13059,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13051,
											"end": 13071,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13047,
											"end": 13048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13045,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13032,
											"end": 13049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13025,
											"end": 13072,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13089,
											"end": 13220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 13215,
											"end": 13219,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13089,
											"end": 13220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 13089,
											"end": 13220,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13089,
											"end": 13220,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 13089,
											"end": 13220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13081,
											"end": 13220,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13081,
											"end": 13220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12808,
											"end": 13227,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12808,
											"end": 13227,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12808,
											"end": 13227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12808,
											"end": 13227,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13233,
											"end": 13652,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 13233,
											"end": 13652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13399,
											"end": 13403,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13437,
											"end": 13439,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13426,
											"end": 13435,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13422,
											"end": 13440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13414,
											"end": 13440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13414,
											"end": 13440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13486,
											"end": 13495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13480,
											"end": 13484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13476,
											"end": 13496,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13472,
											"end": 13473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13461,
											"end": 13470,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13457,
											"end": 13474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13450,
											"end": 13497,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13514,
											"end": 13645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 13640,
											"end": 13644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13514,
											"end": 13645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 13514,
											"end": 13645,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13514,
											"end": 13645,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 13514,
											"end": 13645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13506,
											"end": 13645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13506,
											"end": 13645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13233,
											"end": 13652,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13233,
											"end": 13652,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13233,
											"end": 13652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13233,
											"end": 13652,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13658,
											"end": 14077,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 13658,
											"end": 14077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13824,
											"end": 13828,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13862,
											"end": 13864,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13851,
											"end": 13860,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13847,
											"end": 13865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13839,
											"end": 13865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13839,
											"end": 13865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13911,
											"end": 13920,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13905,
											"end": 13909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13901,
											"end": 13921,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13897,
											"end": 13898,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13886,
											"end": 13895,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13882,
											"end": 13899,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13875,
											"end": 13922,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13939,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 14065,
											"end": 14069,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13939,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 13939,
											"end": 14070,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13939,
											"end": 14070,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 13939,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13931,
											"end": 14070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13931,
											"end": 14070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13658,
											"end": 14077,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13658,
											"end": 14077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13658,
											"end": 14077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13658,
											"end": 14077,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14083,
											"end": 14502,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 14083,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14249,
											"end": 14253,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14287,
											"end": 14289,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14276,
											"end": 14285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14264,
											"end": 14290,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14264,
											"end": 14290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14336,
											"end": 14345,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14330,
											"end": 14334,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14326,
											"end": 14346,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14322,
											"end": 14323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14311,
											"end": 14320,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14307,
											"end": 14324,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14300,
											"end": 14347,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14364,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 14490,
											"end": 14494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14364,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 14364,
											"end": 14495,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14364,
											"end": 14495,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 14364,
											"end": 14495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14356,
											"end": 14495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14356,
											"end": 14495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14083,
											"end": 14502,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14083,
											"end": 14502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14083,
											"end": 14502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14083,
											"end": 14502,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14508,
											"end": 14927,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 14508,
											"end": 14927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14674,
											"end": 14678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14712,
											"end": 14714,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14701,
											"end": 14710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14697,
											"end": 14715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14689,
											"end": 14715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14689,
											"end": 14715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14761,
											"end": 14770,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14755,
											"end": 14759,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14751,
											"end": 14771,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14747,
											"end": 14748,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14736,
											"end": 14745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14732,
											"end": 14749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14725,
											"end": 14772,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14789,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 14915,
											"end": 14919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14789,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 14789,
											"end": 14920,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14789,
											"end": 14920,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 14789,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14781,
											"end": 14920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14781,
											"end": 14920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14508,
											"end": 14927,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14508,
											"end": 14927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14508,
											"end": 14927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14508,
											"end": 14927,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14933,
											"end": 15352,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 14933,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15099,
											"end": 15103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15137,
											"end": 15139,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15126,
											"end": 15135,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15122,
											"end": 15140,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15114,
											"end": 15140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15114,
											"end": 15140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15186,
											"end": 15195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15180,
											"end": 15184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15176,
											"end": 15196,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15172,
											"end": 15173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15157,
											"end": 15174,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15150,
											"end": 15197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15214,
											"end": 15345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 15340,
											"end": 15344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15214,
											"end": 15345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 15214,
											"end": 15345,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15214,
											"end": 15345,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 15214,
											"end": 15345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15206,
											"end": 15345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15206,
											"end": 15345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14933,
											"end": 15352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14933,
											"end": 15352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14933,
											"end": 15352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14933,
											"end": 15352,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15358,
											"end": 15777,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 15358,
											"end": 15777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15524,
											"end": 15528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15562,
											"end": 15564,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15551,
											"end": 15560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15547,
											"end": 15565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15539,
											"end": 15565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15539,
											"end": 15565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15611,
											"end": 15620,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15605,
											"end": 15609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15601,
											"end": 15621,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15597,
											"end": 15598,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15586,
											"end": 15595,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15582,
											"end": 15599,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15575,
											"end": 15622,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15639,
											"end": 15770,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 15765,
											"end": 15769,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15639,
											"end": 15770,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 15639,
											"end": 15770,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15639,
											"end": 15770,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 15639,
											"end": 15770,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15631,
											"end": 15770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15631,
											"end": 15770,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15358,
											"end": 15777,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15358,
											"end": 15777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15358,
											"end": 15777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15358,
											"end": 15777,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15783,
											"end": 16202,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 15783,
											"end": 16202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15949,
											"end": 15953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15987,
											"end": 15989,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15976,
											"end": 15985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15972,
											"end": 15990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15964,
											"end": 15990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15964,
											"end": 15990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16036,
											"end": 16045,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16030,
											"end": 16034,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16026,
											"end": 16046,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16022,
											"end": 16023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16011,
											"end": 16020,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16007,
											"end": 16024,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16000,
											"end": 16047,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16064,
											"end": 16195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 16190,
											"end": 16194,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16064,
											"end": 16195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 16064,
											"end": 16195,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16064,
											"end": 16195,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 16064,
											"end": 16195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16056,
											"end": 16195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16056,
											"end": 16195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15783,
											"end": 16202,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15783,
											"end": 16202,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15783,
											"end": 16202,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15783,
											"end": 16202,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16208,
											"end": 16627,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 16208,
											"end": 16627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16412,
											"end": 16414,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16401,
											"end": 16410,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16397,
											"end": 16415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16461,
											"end": 16470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16455,
											"end": 16459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16451,
											"end": 16471,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16447,
											"end": 16448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16436,
											"end": 16445,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16432,
											"end": 16449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16425,
											"end": 16472,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16489,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 16615,
											"end": 16619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16489,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 16489,
											"end": 16620,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16489,
											"end": 16620,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 16489,
											"end": 16620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16481,
											"end": 16620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16481,
											"end": 16620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16208,
											"end": 16627,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16208,
											"end": 16627,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16208,
											"end": 16627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16208,
											"end": 16627,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16633,
											"end": 16855,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 16633,
											"end": 16855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16726,
											"end": 16730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16764,
											"end": 16766,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16753,
											"end": 16762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16749,
											"end": 16767,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16741,
											"end": 16767,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16741,
											"end": 16767,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16777,
											"end": 16848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 16845,
											"end": 16846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16834,
											"end": 16843,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16830,
											"end": 16847,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16821,
											"end": 16827,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16777,
											"end": 16848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 16777,
											"end": 16848,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16777,
											"end": 16848,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 16777,
											"end": 16848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16633,
											"end": 16855,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16633,
											"end": 16855,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16633,
											"end": 16855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16633,
											"end": 16855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16633,
											"end": 16855,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16942,
											"end": 17040,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 16942,
											"end": 17040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16993,
											"end": 16999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17027,
											"end": 17032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17021,
											"end": 17033,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17011,
											"end": 17033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17011,
											"end": 17033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16942,
											"end": 17040,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16942,
											"end": 17040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16942,
											"end": 17040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16942,
											"end": 17040,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17046,
											"end": 17145,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 17046,
											"end": 17145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17098,
											"end": 17104,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17132,
											"end": 17137,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17126,
											"end": 17138,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17116,
											"end": 17138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17116,
											"end": 17138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17046,
											"end": 17145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17046,
											"end": 17145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17046,
											"end": 17145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17046,
											"end": 17145,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17151,
											"end": 17298,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 17151,
											"end": 17298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17252,
											"end": 17263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17289,
											"end": 17292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17274,
											"end": 17292,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17274,
											"end": 17292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17151,
											"end": 17298,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17151,
											"end": 17298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17151,
											"end": 17298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17151,
											"end": 17298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17151,
											"end": 17298,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17304,
											"end": 17473,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 17304,
											"end": 17473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17388,
											"end": 17399,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17422,
											"end": 17428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17417,
											"end": 17420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17410,
											"end": 17429,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17462,
											"end": 17466,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17457,
											"end": 17460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17453,
											"end": 17467,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17438,
											"end": 17467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17438,
											"end": 17467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17304,
											"end": 17473,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17304,
											"end": 17473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17304,
											"end": 17473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17304,
											"end": 17473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17304,
											"end": 17473,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17479,
											"end": 17784,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 17479,
											"end": 17784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17519,
											"end": 17522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17538,
											"end": 17558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 17556,
											"end": 17557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17538,
											"end": 17558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 17538,
											"end": 17558,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17538,
											"end": 17558,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 17538,
											"end": 17558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17533,
											"end": 17558,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17533,
											"end": 17558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17572,
											"end": 17592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 17590,
											"end": 17591,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17572,
											"end": 17592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 17572,
											"end": 17592,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17572,
											"end": 17592,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 17572,
											"end": 17592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17567,
											"end": 17592,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17567,
											"end": 17592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17726,
											"end": 17727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17658,
											"end": 17724,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17654,
											"end": 17728,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17651,
											"end": 17652,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17648,
											"end": 17729,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17645,
											"end": 17752,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17645,
											"end": 17752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 17645,
											"end": 17752,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17645,
											"end": 17752,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 17645,
											"end": 17752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17776,
											"end": 17777,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17773,
											"end": 17774,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17769,
											"end": 17778,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17762,
											"end": 17778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17762,
											"end": 17778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17479,
											"end": 17784,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17479,
											"end": 17784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17479,
											"end": 17784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17479,
											"end": 17784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17479,
											"end": 17784,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17790,
											"end": 17975,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 17790,
											"end": 17975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17830,
											"end": 17831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17847,
											"end": 17867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 17865,
											"end": 17866,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17847,
											"end": 17867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 17847,
											"end": 17867,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17847,
											"end": 17867,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 17847,
											"end": 17867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17842,
											"end": 17867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17842,
											"end": 17867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17881,
											"end": 17901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 17899,
											"end": 17900,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17881,
											"end": 17901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 17881,
											"end": 17901,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17881,
											"end": 17901,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 17881,
											"end": 17901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17876,
											"end": 17901,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17876,
											"end": 17901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17920,
											"end": 17921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17910,
											"end": 17945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 17910,
											"end": 17945,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17925,
											"end": 17943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 17925,
											"end": 17943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 17925,
											"end": 17943,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17925,
											"end": 17943,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 17925,
											"end": 17943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17910,
											"end": 17945,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 17910,
											"end": 17945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 17968,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17964,
											"end": 17965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17960,
											"end": 17969,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 17955,
											"end": 17969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17955,
											"end": 17969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17790,
											"end": 17975,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17790,
											"end": 17975,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17790,
											"end": 17975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17790,
											"end": 17975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17790,
											"end": 17975,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17981,
											"end": 18329,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 17981,
											"end": 18329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18021,
											"end": 18028,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18044,
											"end": 18064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 18062,
											"end": 18063,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18044,
											"end": 18064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 18044,
											"end": 18064,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18044,
											"end": 18064,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 18044,
											"end": 18064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18039,
											"end": 18064,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18039,
											"end": 18064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18078,
											"end": 18098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 18096,
											"end": 18097,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18078,
											"end": 18098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 18078,
											"end": 18098,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18078,
											"end": 18098,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 18078,
											"end": 18098,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18073,
											"end": 18098,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18073,
											"end": 18098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18266,
											"end": 18267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18198,
											"end": 18264,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18194,
											"end": 18268,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 18191,
											"end": 18192,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18188,
											"end": 18269,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18183,
											"end": 18184,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18176,
											"end": 18185,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18169,
											"end": 18186,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18165,
											"end": 18270,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18162,
											"end": 18293,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18162,
											"end": 18293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 18162,
											"end": 18293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18162,
											"end": 18293,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 18162,
											"end": 18293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18321,
											"end": 18322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18318,
											"end": 18319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18314,
											"end": 18323,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18303,
											"end": 18323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18303,
											"end": 18323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17981,
											"end": 18329,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17981,
											"end": 18329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17981,
											"end": 18329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17981,
											"end": 18329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17981,
											"end": 18329,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18335,
											"end": 18526,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 18335,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18375,
											"end": 18379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18395,
											"end": 18415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 18413,
											"end": 18414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18395,
											"end": 18415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 18395,
											"end": 18415,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18395,
											"end": 18415,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 18395,
											"end": 18415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18390,
											"end": 18415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18390,
											"end": 18415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 18447,
											"end": 18448,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 18429,
											"end": 18449,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18429,
											"end": 18449,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 18429,
											"end": 18449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18424,
											"end": 18449,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18424,
											"end": 18449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18468,
											"end": 18469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18465,
											"end": 18466,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18462,
											"end": 18470,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18459,
											"end": 18493,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18459,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 18459,
											"end": 18493,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18473,
											"end": 18491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 18473,
											"end": 18491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 18473,
											"end": 18491,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18473,
											"end": 18491,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 18473,
											"end": 18491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18459,
											"end": 18493,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 18459,
											"end": 18493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18518,
											"end": 18519,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18515,
											"end": 18516,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18511,
											"end": 18520,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18503,
											"end": 18520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18503,
											"end": 18520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18335,
											"end": 18526,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18335,
											"end": 18526,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18335,
											"end": 18526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18335,
											"end": 18526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18335,
											"end": 18526,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18532,
											"end": 18628,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 18532,
											"end": 18628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18569,
											"end": 18576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18598,
											"end": 18622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 18616,
											"end": 18621,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18598,
											"end": 18622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 18598,
											"end": 18622,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18598,
											"end": 18622,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 18598,
											"end": 18622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18587,
											"end": 18622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18587,
											"end": 18622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18532,
											"end": 18628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18532,
											"end": 18628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18532,
											"end": 18628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18532,
											"end": 18628,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18634,
											"end": 18724,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 18634,
											"end": 18724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18668,
											"end": 18675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18711,
											"end": 18716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18704,
											"end": 18717,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18697,
											"end": 18718,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 18718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 18718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18634,
											"end": 18724,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18634,
											"end": 18724,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18634,
											"end": 18724,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18634,
											"end": 18724,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18730,
											"end": 18856,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 18730,
											"end": 18856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18767,
											"end": 18774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18807,
											"end": 18849,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18800,
											"end": 18805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18796,
											"end": 18850,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18785,
											"end": 18850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18785,
											"end": 18850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18730,
											"end": 18856,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18730,
											"end": 18856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18730,
											"end": 18856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18730,
											"end": 18856,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18862,
											"end": 18939,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 18862,
											"end": 18939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18899,
											"end": 18906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18928,
											"end": 18933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18917,
											"end": 18933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18917,
											"end": 18933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18862,
											"end": 18939,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18862,
											"end": 18939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18862,
											"end": 18939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18862,
											"end": 18939,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18945,
											"end": 19085,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 18945,
											"end": 19085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19009,
											"end": 19018,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19042,
											"end": 19079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 19073,
											"end": 19078,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19042,
											"end": 19079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 19042,
											"end": 19079,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19042,
											"end": 19079,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 19042,
											"end": 19079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18945,
											"end": 19085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18945,
											"end": 19085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18945,
											"end": 19085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18945,
											"end": 19085,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19091,
											"end": 19217,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 19091,
											"end": 19217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19141,
											"end": 19150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19174,
											"end": 19211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 19205,
											"end": 19210,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19174,
											"end": 19211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 19174,
											"end": 19211,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19174,
											"end": 19211,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 19174,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19161,
											"end": 19211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19161,
											"end": 19211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19091,
											"end": 19217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19091,
											"end": 19217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19091,
											"end": 19217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19091,
											"end": 19217,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19223,
											"end": 19336,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 19223,
											"end": 19336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19273,
											"end": 19282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19306,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 19324,
											"end": 19329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19306,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 19306,
											"end": 19330,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19306,
											"end": 19330,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 19306,
											"end": 19330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19293,
											"end": 19330,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19293,
											"end": 19330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19223,
											"end": 19336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19223,
											"end": 19336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19223,
											"end": 19336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19223,
											"end": 19336,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19342,
											"end": 19649,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 19342,
											"end": 19649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19410,
											"end": 19411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19420,
											"end": 19533,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 19420,
											"end": 19533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19434,
											"end": 19440,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19431,
											"end": 19432,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19428,
											"end": 19441,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19420,
											"end": 19533,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19420,
											"end": 19533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 19420,
											"end": 19533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19519,
											"end": 19520,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19514,
											"end": 19517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19510,
											"end": 19521,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19504,
											"end": 19522,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19500,
											"end": 19501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19495,
											"end": 19498,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19491,
											"end": 19502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19484,
											"end": 19523,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19456,
											"end": 19458,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19453,
											"end": 19454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19449,
											"end": 19459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19444,
											"end": 19459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19444,
											"end": 19459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19420,
											"end": 19533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 19420,
											"end": 19533,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19420,
											"end": 19533,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 19420,
											"end": 19533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19551,
											"end": 19557,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19548,
											"end": 19549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19545,
											"end": 19558,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19542,
											"end": 19643,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19542,
											"end": 19643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 19542,
											"end": 19643,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19631,
											"end": 19632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19622,
											"end": 19628,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19617,
											"end": 19620,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19613,
											"end": 19629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19606,
											"end": 19633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19542,
											"end": 19643,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 19542,
											"end": 19643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19391,
											"end": 19649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19342,
											"end": 19649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19342,
											"end": 19649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19342,
											"end": 19649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19342,
											"end": 19649,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19655,
											"end": 19831,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 19655,
											"end": 19831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19687,
											"end": 19688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19704,
											"end": 19724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 19722,
											"end": 19723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19704,
											"end": 19724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 19704,
											"end": 19724,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19704,
											"end": 19724,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 19704,
											"end": 19724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19699,
											"end": 19724,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19699,
											"end": 19724,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19738,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 19756,
											"end": 19757,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19738,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 19738,
											"end": 19758,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19738,
											"end": 19758,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 19738,
											"end": 19758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19733,
											"end": 19758,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19733,
											"end": 19758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19777,
											"end": 19778,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19767,
											"end": 19802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 19767,
											"end": 19802,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19782,
											"end": 19800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 19782,
											"end": 19800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 19782,
											"end": 19800,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19782,
											"end": 19800,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 19782,
											"end": 19800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19767,
											"end": 19802,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 19767,
											"end": 19802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19823,
											"end": 19824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19820,
											"end": 19821,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19816,
											"end": 19825,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 19811,
											"end": 19825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19811,
											"end": 19825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19655,
											"end": 19831,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19655,
											"end": 19831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19655,
											"end": 19831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19655,
											"end": 19831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19655,
											"end": 19831,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19837,
											"end": 20017,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 19837,
											"end": 20017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19885,
											"end": 19962,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19882,
											"end": 19883,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19875,
											"end": 19963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19982,
											"end": 19986,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 19979,
											"end": 19980,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19972,
											"end": 19987,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20006,
											"end": 20010,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 20003,
											"end": 20004,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19996,
											"end": 20011,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20023,
											"end": 20203,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 20023,
											"end": 20203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20071,
											"end": 20148,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20068,
											"end": 20069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20061,
											"end": 20149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20168,
											"end": 20172,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 20165,
											"end": 20166,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20158,
											"end": 20173,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20192,
											"end": 20196,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 20189,
											"end": 20190,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20182,
											"end": 20197,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20332,
											"end": 20449,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 20332,
											"end": 20449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20441,
											"end": 20442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20438,
											"end": 20439,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20431,
											"end": 20443,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20455,
											"end": 20557,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 20455,
											"end": 20557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20496,
											"end": 20502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20547,
											"end": 20549,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 20543,
											"end": 20550,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 20538,
											"end": 20540,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 20531,
											"end": 20536,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20527,
											"end": 20541,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20523,
											"end": 20551,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20513,
											"end": 20551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20513,
											"end": 20551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20455,
											"end": 20557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20455,
											"end": 20557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20455,
											"end": 20557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20455,
											"end": 20557,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20563,
											"end": 20729,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 20563,
											"end": 20729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20703,
											"end": 20721,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 20699,
											"end": 20700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20691,
											"end": 20697,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20687,
											"end": 20701,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20680,
											"end": 20722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20563,
											"end": 20729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20563,
											"end": 20729,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20735,
											"end": 20964,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 20735,
											"end": 20964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20875,
											"end": 20909,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 20871,
											"end": 20872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20863,
											"end": 20869,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20859,
											"end": 20873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20852,
											"end": 20910,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20944,
											"end": 20956,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 20939,
											"end": 20941,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20931,
											"end": 20937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20927,
											"end": 20942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20920,
											"end": 20957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20735,
											"end": 20964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20735,
											"end": 20964,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20970,
											"end": 21195,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 20970,
											"end": 21195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21110,
											"end": 21144,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 21106,
											"end": 21107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21098,
											"end": 21104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21094,
											"end": 21108,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21087,
											"end": 21145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21187,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21174,
											"end": 21176,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21166,
											"end": 21172,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21162,
											"end": 21177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21155,
											"end": 21188,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20970,
											"end": 21195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20970,
											"end": 21195,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21201,
											"end": 21365,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 21201,
											"end": 21365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21341,
											"end": 21357,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 21337,
											"end": 21338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21329,
											"end": 21335,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21325,
											"end": 21339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21318,
											"end": 21358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21201,
											"end": 21365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21201,
											"end": 21365,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21371,
											"end": 21536,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 21371,
											"end": 21536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21511,
											"end": 21528,
											"name": "PUSH",
											"source": 8,
											"value": "416C726561647920737461727465640000000000000000000000000000000000"
										},
										{
											"begin": 21507,
											"end": 21508,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21499,
											"end": 21505,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21495,
											"end": 21509,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21488,
											"end": 21529,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21371,
											"end": 21536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21371,
											"end": 21536,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21542,
											"end": 21767,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 21542,
											"end": 21767,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21682,
											"end": 21716,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 21678,
											"end": 21679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21670,
											"end": 21676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21666,
											"end": 21680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 21717,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21751,
											"end": 21759,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21746,
											"end": 21748,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21738,
											"end": 21744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21734,
											"end": 21749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21760,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21542,
											"end": 21767,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21542,
											"end": 21767,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21773,
											"end": 21998,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 21773,
											"end": 21998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21913,
											"end": 21947,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420416464726573732E20416464726573732063616E27742062"
										},
										{
											"begin": 21909,
											"end": 21910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21901,
											"end": 21907,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21897,
											"end": 21911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21890,
											"end": 21948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21982,
											"end": 21990,
											"name": "PUSH",
											"source": 8,
											"value": "65207A65726F0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21977,
											"end": 21979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21969,
											"end": 21975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21965,
											"end": 21980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21958,
											"end": 21991,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21773,
											"end": 21998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21773,
											"end": 21998,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22004,
											"end": 22185,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 22004,
											"end": 22185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22144,
											"end": 22177,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 22140,
											"end": 22141,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22132,
											"end": 22138,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22128,
											"end": 22142,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22121,
											"end": 22178,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22004,
											"end": 22185,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22004,
											"end": 22185,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22191,
											"end": 22373,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 22191,
											"end": 22373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22331,
											"end": 22365,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 22327,
											"end": 22328,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22319,
											"end": 22325,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22315,
											"end": 22329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22308,
											"end": 22366,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22191,
											"end": 22373,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22191,
											"end": 22373,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22379,
											"end": 22540,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 22379,
											"end": 22540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22519,
											"end": 22532,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420415059000000000000000000000000000000000000000000"
										},
										{
											"begin": 22515,
											"end": 22516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22507,
											"end": 22513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22503,
											"end": 22517,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22496,
											"end": 22533,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22379,
											"end": 22540,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22379,
											"end": 22540,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22546,
											"end": 22725,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 22546,
											"end": 22725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22686,
											"end": 22717,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 22682,
											"end": 22683,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22674,
											"end": 22680,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22670,
											"end": 22684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22663,
											"end": 22718,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22546,
											"end": 22725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22546,
											"end": 22725,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22731,
											"end": 22907,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 22731,
											"end": 22907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22871,
											"end": 22899,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420556E7374616B696E67204665652052617465000000000000"
										},
										{
											"begin": 22867,
											"end": 22868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22859,
											"end": 22865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22855,
											"end": 22869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22848,
											"end": 22900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22731,
											"end": 22907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22731,
											"end": 22907,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22913,
											"end": 23086,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 22913,
											"end": 23086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23053,
											"end": 23078,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204C6F636B7570204475726174696F6E000000000000000000"
										},
										{
											"begin": 23049,
											"end": 23050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23041,
											"end": 23047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23037,
											"end": 23051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23030,
											"end": 23079,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22913,
											"end": 23086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22913,
											"end": 23086,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23092,
											"end": 23255,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 23092,
											"end": 23255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23232,
											"end": 23247,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742100000000000000000000000000000000000000"
										},
										{
											"begin": 23228,
											"end": 23229,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23220,
											"end": 23226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23216,
											"end": 23230,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23209,
											"end": 23248,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23092,
											"end": 23255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23092,
											"end": 23255,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23261,
											"end": 23383,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 23261,
											"end": 23383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23334,
											"end": 23358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 23352,
											"end": 23357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23334,
											"end": 23358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 23334,
											"end": 23358,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23334,
											"end": 23358,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 23334,
											"end": 23358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23327,
											"end": 23332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23324,
											"end": 23359,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23314,
											"end": 23377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 23314,
											"end": 23377,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23373,
											"end": 23374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23370,
											"end": 23371,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23363,
											"end": 23375,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 23314,
											"end": 23377,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 23314,
											"end": 23377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23261,
											"end": 23383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23261,
											"end": 23383,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23389,
											"end": 23505,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 23389,
											"end": 23505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23459,
											"end": 23480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 23474,
											"end": 23479,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23459,
											"end": 23480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 23459,
											"end": 23480,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23459,
											"end": 23480,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 23459,
											"end": 23480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23452,
											"end": 23457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23449,
											"end": 23481,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 23439,
											"end": 23499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23495,
											"end": 23496,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23492,
											"end": 23493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23485,
											"end": 23497,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 23439,
											"end": 23499,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 23439,
											"end": 23499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23389,
											"end": 23505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23389,
											"end": 23505,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23511,
											"end": 23633,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 23511,
											"end": 23633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23584,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 23602,
											"end": 23607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23584,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 23584,
											"end": 23608,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23584,
											"end": 23608,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 23584,
											"end": 23608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23577,
											"end": 23582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23574,
											"end": 23609,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23564,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 23564,
											"end": 23627,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23623,
											"end": 23624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23620,
											"end": 23621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23613,
											"end": 23625,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 23564,
											"end": 23627,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 23564,
											"end": 23627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23511,
											"end": 23633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23511,
											"end": 23633,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"harvest()": "4641257d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardAmount()": "f7b2a7be",
							"rewardToHarvest()": "5d2ec65d",
							"setBountyWallet(address)": "8a9d3839",
							"setEventPeriod(uint256)": "692642e7",
							"setFixedAPY(uint256)": "50f19c87",
							"setUnstakingFeeRate(uint256)": "91e07e7a",
							"stake(uint256)": "a694fc3a",
							"stakedAmount()": "373d6132",
							"startStaking(uint256,uint256)": "4b77dd9e",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"__bountyWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardToClaim\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bountyWallet\",\"type\":\"address\"}],\"name\":\"SetBountyWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupDuration\",\"type\":\"uint256\"}],\"name\":\"SetEventPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fixedAPY\",\"type\":\"uint256\"}],\"name\":\"SetFixedAPY\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"SetUnstakingFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__bountyWallet\",\"type\":\"address\"}],\"name\":\"setBountyWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__eventPeriod\",\"type\":\"uint256\"}],\"name\":\"setEventPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__fixedAPY\",\"type\":\"uint256\"}],\"name\":\"setFixedAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"setUnstakingFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"startStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakingPlatform\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0x2b0363bf25c0c7e719095fbf2bb3f098388a068163a9305d6466a3c9487263dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://098f49dcd3fd9d463440616ae9487c255bab7733a617b0e3a26cf6860c2818e6\",\"dweb:/ipfs/QmRYDNdEgY9nqKneAjhaZfjJXjGyjKcxrBhJH1Mrtbtx8B\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							499
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 500,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								499
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 182,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 182,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 182,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 182,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 182,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 182,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 172,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 181,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 193,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 198,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 477,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 211,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													220,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 221,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 477,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 244,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															271
														],
														"referencedDeclaration": 271,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 477,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 269,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 477,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 283,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 289,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 477,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 318,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 317,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													324,
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 323,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 325,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 327,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 337,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 334,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 304,
												"id": 339,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 477,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 351,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															358,
															393
														],
														"referencedDeclaration": 393,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 356,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 477,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 371,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													378,
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 388,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 391,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 477,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 403,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															445
														],
														"referencedDeclaration": 445,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 477,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 424,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 423,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 440,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 441,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 438,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 443,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 477,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 477,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							499
						]
					},
					"id": 500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 484,
												"id": 487,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 499,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 493,
												"id": 496,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 499,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 500,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							811
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "SafeMath",
							"nameLocation": "475:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															515
														],
														"declarations": [
															{
																"constant": false,
																"id": 515,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 532,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 519,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 513,
															"id": 526,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 529,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 530,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 513,
														"id": 531,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 811,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 545,
															"id": 552,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 545,
														"id": 559,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 811,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 602,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 581,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 580,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 602,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 585,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 588,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 589,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 597,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 596,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 599,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 573,
														"id": 601,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 811,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 630,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 615,
															"id": 622,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 625,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 626,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 615,
														"id": 629,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 811,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 658,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 643,
															"id": 650,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 654,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 656,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 643,
														"id": 657,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 811,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 673,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 811,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 686,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 811,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 703,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 811,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 718,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 811,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 733,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 811,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 749,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 751,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 747,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 746,
														"id": 757,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 811,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 776,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 772,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 778,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 771,
														"id": 782,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 811,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 801,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 797,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 803,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 796,
														"id": 807,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 811,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 812,
							"src": "467:6301:4",
							"usedErrors": []
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							912
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "IBEP20",
							"nameLocation": "72:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "86:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "169:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "206:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:5"
									},
									"scope": 912,
									"src": "160:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "223:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "291:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "325:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:7:5"
									},
									"scope": 912,
									"src": "282:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "340:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "406:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "438:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:15:5"
									},
									"scope": 912,
									"src": "397:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "461:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "525:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "555:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:5"
									},
									"scope": 912,
									"src": "516:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "578:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "647:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "681:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:9:5"
									},
									"scope": 912,
									"src": "638:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "698:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "787:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "805:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "797:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:17:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "837:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:9:5"
									},
									"scope": 912,
									"src": "778:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "854:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1084:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1101:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1093:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1120:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1112:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:35:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1146:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:6:5"
									},
									"scope": 912,
									"src": "1075:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "1160:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1445:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1463:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1455:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1479:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1471:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:33:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 912,
									"src": "1436:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1528:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2198:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:33:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:6:5"
									},
									"scope": 912,
									"src": "2189:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2271:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2590:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2611:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2627:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2619:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2638:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:51:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2672:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2672:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:6:5"
									},
									"scope": 912,
									"src": "2581:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2686:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 902,
									"name": "Transfer",
									"nameLocation": "2861:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2886:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2870:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2908:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2892:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2912:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:57:5"
									},
									"src": "2855:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2935:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 911,
									"name": "Approval",
									"nameLocation": "3098:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3107:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3146:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3130:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:63:5"
									},
									"src": "3092:78:5"
								}
							],
							"scope": 913,
							"src": "62:3111:5",
							"usedErrors": []
						}
					],
					"src": "35:3138:5"
				},
				"id": 5
			},
			"contracts/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"IBEP20": [
							912
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 812,
							"src": "60:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 478,
							"src": "119:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 913,
							"src": "172:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130
							],
							"name": "SafeBEP20",
							"nameLocation": "206:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 920,
									"libraryName": {
										"id": 918,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "229:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "223:27:6",
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 923,
									"libraryName": {
										"id": 921,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "262:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "256:26:6",
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "362:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "393:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 937,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "423:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "423:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "423:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 940,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "448:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "452:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "400:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "400:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "400:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "373:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "373:86:6"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "299:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "319:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "312:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "312:6:6"
													},
													"referencedDeclaration": 912,
													"src": "312:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "334:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "326:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "346:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:41:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:6"
									},
									"scope": 1130,
									"src": "290:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "565:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "596:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 962,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "626:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "626:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "626:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "655:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 966,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "661:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 960,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "603:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 958,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "576:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "576:96:6"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "484:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "501:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 947,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "501:6:6"
													},
													"referencedDeclaration": 912,
													"src": "501:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "515:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "537:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "529:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "549:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "541:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:55:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:6"
									},
									"scope": 1130,
									"src": "475:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1025:546:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1319:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1328:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1318:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 992,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1359:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1351:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 990,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1351:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1351:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 994,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "1366:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "1335:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$912",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 871,
																				"src": "1335:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1335:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1335:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1334:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1318:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1310:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:152:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1310:152:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1493:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1007,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "1523:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1523:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1523:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1010,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "1556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1500:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1500:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1473:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1473:90:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "688:255:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "958:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "977:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "970:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "970:6:6"
													},
													"referencedDeclaration": 912,
													"src": "970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1009:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1001:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:46:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:6"
									},
									"scope": 1130,
									"src": "949:622:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1665:200:6",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1684:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1676:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1676:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1743:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1723:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1715:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1034,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1730:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1699:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1699:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1699:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "1699:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1810:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1810:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1810:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1047,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1834:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1843:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1787:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1787:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1760:97:6"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1588:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1610:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1610:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1632:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1624:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1641:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:46:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:6"
									},
									"scope": 1130,
									"src": "1579:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1959:245:6",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1978:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1090,
														"src": "1970:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1970:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2017:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2009:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2009:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1071,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2024:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1993:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1993:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1993:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1993:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1970:118:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1082,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "2149:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "2149:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2149:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1085,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "2182:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1080,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2126:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2126:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2126:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1078,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2099:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2099:97:6"
											}
										]
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "1882:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1904:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1904:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1926:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1918:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1943:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1935:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:46:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:6"
									},
									"scope": 1130,
									"src": "1873:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2669:699:6",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3044:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "3031:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3031:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1107,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3057:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3057:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3057:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "3057:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3031:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1111,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3141:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3161:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3141:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "3137:224:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "3164:197:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1118,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "3283:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3296:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1119,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3296:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1121,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3295:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1116,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3272:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3272:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3272:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3304:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1115,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3264:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3264:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3264:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2216:377:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2608:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2635:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2628:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1093,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "2628:6:6"
													},
													"referencedDeclaration": 912,
													"src": "2628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2655:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2642:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2642:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:33:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:6"
									},
									"scope": 1130,
									"src": "2599:769:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1131,
							"src": "198:3173:6",
							"usedErrors": []
						}
					],
					"src": "33:3338:6"
				},
				"id": 6
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"Context": [
							499
						],
						"IBEP20": [
							912
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						],
						"StakingPlatform": [
							1817
						]
					},
					"id": 1818,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1818,
							"sourceUnit": 105,
							"src": "60:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1818,
							"sourceUnit": 183,
							"src": "114:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1818,
							"sourceUnit": 812,
							"src": "172:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1818,
							"sourceUnit": 1131,
							"src": "231:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1137,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "288:7:7"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1817,
							"linearizedBaseContracts": [
								1817,
								104,
								499
							],
							"name": "StakingPlatform",
							"nameLocation": "269:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1141,
									"libraryName": {
										"id": 1139,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "311:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "305:27:7",
									"typeName": {
										"id": 1140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "324:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1145,
									"libraryName": {
										"id": 1142,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "344:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "338:27:7",
									"typeName": {
										"id": 1144,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1143,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "358:6:7"
										},
										"referencedDeclaration": 912,
										"src": "358:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "StakingPlatform.Staker",
									"id": 1156,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "stakerCurrentReward",
											"nameLocation": "432:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "424:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "424:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "470:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "462:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "462:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "mode",
											"nameLocation": "501:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "493:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "493:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "stakeStartTime",
											"nameLocation": "524:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "516:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "516:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "lastUpdatedTime",
											"nameLocation": "557:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "549:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "549:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "406:6:7",
									"nodeType": "StructDefinition",
									"scope": 1817,
									"src": "399:181:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1158,
									"mutability": "mutable",
									"name": "_unstakingFeeRate",
									"nameLocation": "701:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "685:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "685:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1160,
									"mutability": "mutable",
									"name": "_eventPeriod",
									"nameLocation": "741:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "725:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "725:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1162,
									"mutability": "mutable",
									"name": "_fixedAPY",
									"nameLocation": "776:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "760:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "760:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1164,
									"mutability": "mutable",
									"name": "_rewardFeeRate",
									"nameLocation": "808:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "792:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "792:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1166,
									"mutability": "mutable",
									"name": "_bountyWallet",
									"nameLocation": "845:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "829:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1165,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "829:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1171,
									"mutability": "mutable",
									"name": "_staker",
									"nameLocation": "902:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "867:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
										"typeString": "mapping(address => struct StakingPlatform.Staker)"
									},
									"typeName": {
										"id": 1170,
										"keyType": {
											"id": 1167,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "875:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "867:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
											"typeString": "mapping(address => struct StakingPlatform.Staker)"
										},
										"valueType": {
											"id": 1169,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1168,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1156,
												"src": "886:6:7"
											},
											"referencedDeclaration": 1156,
											"src": "886:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
												"typeString": "struct StakingPlatform.Staker"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1173,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "987:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "972:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1172,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "972:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1176,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1019:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "1005:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$912",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1175,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1174,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "1005:6:7"
										},
										"referencedDeclaration": 912,
										"src": "1005:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1182,
									"name": "Staked",
									"nameLocation": "1118:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1133:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "1125:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1149:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "1141:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:32:7"
									},
									"src": "1112:45:7"
								},
								{
									"anonymous": false,
									"id": 1188,
									"name": "Harvest",
									"nameLocation": "1169:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1185:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1177:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToClaim",
												"nameLocation": "1201:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1193:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:39:7"
									},
									"src": "1163:53:7"
								},
								{
									"anonymous": false,
									"id": 1194,
									"name": "Withdraw",
									"nameLocation": "1228:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1245:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1237:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1261:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1253:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:32:7"
									},
									"src": "1222:47:7"
								},
								{
									"anonymous": false,
									"id": 1198,
									"name": "SetFixedAPY",
									"nameLocation": "1281:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "fixedAPY",
												"nameLocation": "1301:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1293:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:18:7"
									},
									"src": "1275:36:7"
								},
								{
									"anonymous": false,
									"id": 1202,
									"name": "SetEventPeriod",
									"nameLocation": "1323:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockupDuration",
												"nameLocation": "1346:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1338:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:24:7"
									},
									"src": "1317:45:7"
								},
								{
									"anonymous": false,
									"id": 1206,
									"name": "SetUnstakingFeeRate",
									"nameLocation": "1374:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakingFeeRate",
												"nameLocation": "1402:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1394:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:26:7"
									},
									"src": "1368:52:7"
								},
								{
									"anonymous": false,
									"id": 1210,
									"name": "SetBountyWallet",
									"nameLocation": "1432:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"indexed": false,
												"mutability": "mutable",
												"name": "bountyWallet",
												"nameLocation": "1456:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "1448:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1447:22:7"
									},
									"src": "1426:44:7"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "1530:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1217,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "1543:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1543:6:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "1543:6:7"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "_bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "1560:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "__bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "1576:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1560:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1560:30:7"
											},
											{
												"expression": {
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "1601:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1226,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "1616:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1225,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1609:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$912_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1609:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"src": "1601:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "1601:22:7"
											}
										]
									},
									"id": 1231,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1498:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1490:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "__bountyWallet",
												"nameLocation": "1514:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1506:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:40:7"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1530:0:7"
									},
									"scope": 1817,
									"src": "1478:153:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "1664:132:7",
										"statements": [
											{
												"expression": {
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1234,
														"name": "_fixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1675:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313235",
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1687:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_125_by_1",
															"typeString": "int_const 125"
														},
														"value": "125"
													},
													"src": "1675:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "1675:15:7"
											},
											{
												"expression": {
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1238,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "1701:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "1701:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "1701:24:7"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1242,
														"name": "_rewardFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1736:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1753:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1736:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "1736:20:7"
											},
											{
												"expression": {
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "1767:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:6:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "1767:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "1767:21:7"
											}
										]
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Init",
									"nameLocation": "1648:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:7"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:0:7"
									},
									"scope": 1817,
									"src": "1639:157:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "1883:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1923:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"id": 1258,
															"name": "timedur",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "1911:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "1911:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1911:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1262,
												"nodeType": "Return",
												"src": "1904:26:7"
											}
										]
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calDaysFromTimestamp",
									"nameLocation": "1813:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "timedur",
												"nameLocation": "1842:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1834:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:17:7"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1874:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:9:7"
									},
									"scope": 1817,
									"src": "1804:134:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "2044:711:7",
										"statements": [
											{
												"assignments": [
													1269
												],
												"declarations": [
													{
														"constant": false,
														"id": 1269,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "2080:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "2065:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1268,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1267,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "2065:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "2065:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"baseExpression": {
														"id": 1270,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "2089:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1273,
													"indexExpression": {
														"expression": {
															"id": 1271,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2097:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2097:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2089:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2065:43:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1275,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2122:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2122:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1277,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2140:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1278,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastUpdatedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2140:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2122:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1282,
												"nodeType": "IfStatement",
												"src": "2119:78:7",
												"trueBody": {
													"id": 1281,
													"nodeType": "Block",
													"src": "2164:33:7",
													"statements": [
														{
															"functionReturnParameters": 1266,
															"id": 1280,
															"nodeType": "Return",
															"src": "2179:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1284
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "duration",
														"nameLocation": "2223:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "2215:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2215:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1292,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1286,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2255:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2255:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 1288,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "2273:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakeStartTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1153,
																"src": "2273:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2255:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1285,
														"name": "calDaysFromTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "2234:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2215:80:7"
											},
											{
												"assignments": [
													1294
												],
												"declarations": [
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "2314:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "2306:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2306:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1301,
																	"name": "_fixedAPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "2364:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1298,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "2350:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1295,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1269,
																				"src": "2326:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakedAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1149,
																			"src": "2326:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "2326:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2326:33:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 705,
																"src": "2326:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2326:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2326:52:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2326:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2306:77:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1307,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2398:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "2398:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2413:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2398:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1338,
												"nodeType": "IfStatement",
												"src": "2394:222:7",
												"trueBody": {
													"id": 1337,
													"nodeType": "Block",
													"src": "2416:200:7",
													"statements": [
														{
															"assignments": [
																1312
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1312,
																	"mutability": "mutable",
																	"name": "eventCount",
																	"nameLocation": "2439:10:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1337,
																	"src": "2431:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1311,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2431:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1317,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1315,
																		"name": "_eventPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "2465:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1313,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "2452:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "2452:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2452:26:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2431:47:7"
														},
														{
															"expression": {
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1318,
																	"name": "newReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "2493:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "316534",
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2600:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "1e4"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 1328,
																									"name": "_eventPeriod",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1160,
																									"src": "2580:12:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1327,
																								"name": "calDaysFromTimestamp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1264,
																								"src": "2559:20:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1329,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2559:34:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1325,
																							"name": "_fixedAPY",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1162,
																							"src": "2545:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1326,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 705,
																						"src": "2545:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1330,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2545:49:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1322,
																							"name": "eventCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1312,
																							"src": "2529:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1319,
																								"name": "staker",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1269,
																								"src": "2505:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																									"typeString": "struct StakingPlatform.Staker storage pointer"
																								}
																							},
																							"id": 1320,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "stakedAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1149,
																							"src": "2505:19:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1321,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 705,
																						"src": "2505:23:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2505:35:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 705,
																				"src": "2505:39:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2505:90:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 720,
																		"src": "2505:94:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2505:99:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2493:111:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1336,
															"nodeType": "ExpressionStatement",
															"src": "2493:111:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1339,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2626:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "2626:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1345,
																"name": "newReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "2686:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1342,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "2655:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakerCurrentReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1147,
																"src": "2655:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "2655:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2655:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2626:70:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "2626:70:7"
											},
											{
												"expression": {
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1349,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2707:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdatedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2707:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1352,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2732:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2732:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2707:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "2707:40:7"
											}
										]
									},
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "2022:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:2:7"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2044:0:7"
									},
									"scope": 1817,
									"src": "2013:742:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "2826:361:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "2847:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2857:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2847:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2860:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2839:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2839:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "2839:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1374,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2929:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2929:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1372,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1176,
																		"src": "2913:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "2913:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2913:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1377,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "2943:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2913:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2952:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2905:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2905:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "2905:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1383,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "2987:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1386,
																	"indexExpression": {
																		"expression": {
																			"id": 1384,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2995:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2995:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2987:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakeStartTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1153,
																"src": "2987:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3025:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2987:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792073746172746564",
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3028:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															},
															"value": "Already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															}
														],
														"id": 1382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2979:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2979:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "2979:67:7"
											},
											{
												"expression": {
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1393,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "3059:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1396,
															"indexExpression": {
																"expression": {
																	"id": 1394,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3067:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3067:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3059:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "3059:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1398,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "3086:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3059:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "3059:32:7"
											},
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1401,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "3102:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1404,
															"indexExpression": {
																"expression": {
																	"id": 1402,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3110:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3102:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1153,
														"src": "3102:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1406,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3139:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3139:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "3102:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1411,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "3171:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1410,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "3165:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3165:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "3165:14:7"
											}
										]
									},
									"functionSelector": "4b77dd9e",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startStaking",
									"nameLocation": "2772:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2793:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2785:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "2810:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2802:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2784:32:7"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2826:0:7"
									},
									"scope": 1817,
									"src": "2763:424:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "3289:483:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1421,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "3318:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3328:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3318:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3331:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3310:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3310:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "3310:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1430,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3400:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3400:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1428,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1176,
																		"src": "3384:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "3384:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3384:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1433,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "3414:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3384:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3423:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3376:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3376:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "3376:63:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1438,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "3460:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3460:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "3460:14:7"
											},
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3500:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "3485:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1442,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1441,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "3485:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "3485:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"initialValue": {
													"baseExpression": {
														"id": 1444,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "3509:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1447,
													"indexExpression": {
														"expression": {
															"id": 1445,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3517:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3517:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3509:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3485:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1452,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3562:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3562:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1456,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3582:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																		"typeString": "contract StakingPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																		"typeString": "contract StakingPlatform"
																	}
																],
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3574:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1454,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3574:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3574:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1458,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "3589:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1449,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "3539:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "3539:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3539:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "3539:58:7"
											},
											{
												"expression": {
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1461,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "3608:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "3608:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1467,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "3654:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1464,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "3630:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "3630:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3630:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3630:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3608:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "3608:54:7"
											},
											{
												"expression": {
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1471,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "3673:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1474,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "3703:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1472,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "3687:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3687:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3687:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3673:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "3673:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1479,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3744:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3744:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1481,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "3756:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1478,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "3737:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3737:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "EmitStatement",
												"src": "3732:32:7"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3260:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3274:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3266:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3266:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3265:17:7"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:7"
									},
									"scope": 1817,
									"src": "3251:521:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "3861:874:7",
										"statements": [
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3889:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "3874:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1491,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1490,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "3874:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "3874:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1497,
												"initialValue": {
													"baseExpression": {
														"id": 1493,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "3898:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1496,
													"indexExpression": {
														"expression": {
															"id": 1494,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3906:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3906:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3898:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3874:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1499,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "3938:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3947:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3938:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3950:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3930:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3930:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "3930:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1506,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "4003:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1507,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "4013:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "4013:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4003:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4034:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3995:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3995:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "3995:56:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1513,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "4064:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4064:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "4064:14:7"
											},
											{
												"assignments": [
													1517
												],
												"declarations": [
													{
														"constant": false,
														"id": 1517,
														"mutability": "mutable",
														"name": "amountTobeWithdrawn",
														"nameLocation": "4097:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "4089:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4089:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1536,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1518,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "4119:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1523,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4152:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4144:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1521,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4144:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4144:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1519,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "4128:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "4128:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4128:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4119:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1532,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4194:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4186:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4186:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4186:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1528,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "4170:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "4170:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4170:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4119:81:7",
													"trueExpression": {
														"id": 1527,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "4161:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4089:111:7"
											},
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "isLockupTimeOver",
														"nameLocation": "4219:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "4211:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4211:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4285:6:7",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1542,
																					"name": "staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1492,
																					"src": "4258:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																						"typeString": "struct StakingPlatform.Staker storage pointer"
																					}
																				},
																				"id": 1543,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakeStartTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1153,
																				"src": "4258:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 1539,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "4238:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "4238:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 690,
																			"src": "4238:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4238:42:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "4238:46:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4238:54:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1548,
																"name": "_eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "4295:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4238:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4311:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4238:74:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "31",
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4319:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4238:82:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4315:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4211:109:7"
											},
											{
												"expression": {
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1556,
														"name": "amountTobeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "4331:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "316534",
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4463:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "1e4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1568,
																				"name": "_unstakingFeeRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1158,
																				"src": "4440:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1565,
																						"name": "amountTobeWithdrawn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1517,
																						"src": "4415:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1562,
																								"name": "isLockupTimeOver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1538,
																								"src": "4393:16:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"id": 1559,
																									"name": "staker",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1492,
																									"src": "4377:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																										"typeString": "struct StakingPlatform.Staker storage pointer"
																									}
																								},
																								"id": 1560,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mode",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1151,
																								"src": "4377:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1561,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 705,
																							"src": "4377:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1563,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4377:33:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1564,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 705,
																					"src": "4377:37:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4377:58:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 705,
																			"src": "4377:62:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4377:81:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "4377:85:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4377:90:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1557,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4353:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4353:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4353:115:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4331:137:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "4331:137:7"
											},
											{
												"expression": {
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1576,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "4479:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1579,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4509:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1577,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "4493:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4493:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4493:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4479:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "4479:50:7"
											},
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1583,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "4540:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "4540:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1589,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4586:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1586,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "4562:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "4562:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4562:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4562:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4540:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "4540:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1596,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4636:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4636:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1598,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "4648:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1593,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "4617:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "4617:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "4617:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1602,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4695:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4695:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1604,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "4707:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1601,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "4686:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4686:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "EmitStatement",
												"src": "4681:46:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "3828:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3845:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "3837:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3837:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3836:16:7"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3861:0:7"
									},
									"scope": 1817,
									"src": "3819:916:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "4803:143:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1616,
																"name": "__fixedAPY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "4824:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4837:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4824:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420415059",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4840:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																"typeString": "literal_string \"Invalid APY\""
															},
															"value": "Invalid APY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																"typeString": "literal_string \"Invalid APY\""
															}
														],
														"id": 1615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4816:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4816:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "4816:38:7"
											},
											{
												"expression": {
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1622,
														"name": "_fixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "4875:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1623,
														"name": "__fixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "4887:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4875:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "4875:22:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1627,
															"name": "__fixedAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "4927:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1626,
														"name": "SetFixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "4915:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4915:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "EmitStatement",
												"src": "4910:28:7"
											}
										]
									},
									"functionSelector": "50f19c87",
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1613,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1612,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4793:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4793:9:7"
										}
									],
									"name": "setFixedAPY",
									"nameLocation": "4752:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "__fixedAPY",
												"nameLocation": "4772:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "4764:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4763:20:7"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4803:0:7"
									},
									"scope": 1817,
									"src": "4743:203:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "5020:182:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "5049:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5065:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5049:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5068:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															},
															"value": "Invalid Lockup Duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															}
														],
														"id": 1638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5041:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5041:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "5041:53:7"
											},
											{
												"expression": {
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1645,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "5107:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5140:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 1646,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "5122:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 705,
															"src": "5122:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5122:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5107:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "5107:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1653,
															"name": "__eventPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "5180:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1652,
														"name": "SetEventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "5165:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5165:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "EmitStatement",
												"src": "5160:34:7"
											}
										]
									},
									"functionSelector": "692642e7",
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1636,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1635,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5010:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5010:9:7"
										}
									],
									"name": "setEventPeriod",
									"nameLocation": "4963:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "__eventPeriod",
												"nameLocation": "4986:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "4978:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4977:23:7"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5020:0:7"
									},
									"scope": 1817,
									"src": "4954:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "5286:190:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1665,
																"name": "__unstakingFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "5307:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5328:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5307:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5331:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															},
															"value": "Invalid Unstaking Fee Rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															}
														],
														"id": 1664,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5299:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5299:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "5299:61:7"
											},
											{
												"expression": {
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1671,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "5373:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1672,
														"name": "__unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "5393:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5373:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "5373:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1676,
															"name": "__unstakingFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "5449:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1675,
														"name": "SetUnstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "5429:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5429:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "EmitStatement",
												"src": "5424:44:7"
											}
										]
									},
									"functionSelector": "91e07e7a",
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1662,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1661,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5276:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5276:9:7"
										}
									],
									"name": "setUnstakingFeeRate",
									"nameLocation": "5219:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "__unstakingFeeRate",
												"nameLocation": "5247:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "5239:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:28:7"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5286:0:7"
									},
									"scope": 1817,
									"src": "5210:266:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "5552:199:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1688,
																"name": "__bountyWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "5581:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5606:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5598:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1689,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5598:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5598:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5581:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420416464726573732e20416464726573732063616e2774206265207a65726f",
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5610:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																"typeString": "literal_string \"Invalid Address. Address can't be zero\""
															},
															"value": "Invalid Address. Address can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																"typeString": "literal_string \"Invalid Address. Address can't be zero\""
															}
														],
														"id": 1687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5573:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5573:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "5573:78:7"
											},
											{
												"expression": {
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1697,
														"name": "_bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "5664:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1698,
														"name": "__bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "5680:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5664:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "5664:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1702,
															"name": "__bountyWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "5728:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1701,
														"name": "SetBountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "5712:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5712:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1704,
												"nodeType": "EmitStatement",
												"src": "5707:36:7"
											}
										]
									},
									"functionSelector": "8a9d3839",
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1685,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1684,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5542:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5542:9:7"
										}
									],
									"name": "setBountyWallet",
									"nameLocation": "5493:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "__bountyWallet",
												"nameLocation": "5517:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "5509:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5509:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5508:24:7"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5552:0:7"
									},
									"scope": 1817,
									"src": "5484:267:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "5866:103:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1711,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "5922:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1714,
														"indexExpression": {
															"expression": {
																"id": 1712,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5930:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5930:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5922:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "5922:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1710,
												"id": 1716,
												"nodeType": "Return",
												"src": "5915:46:7"
											}
										]
									},
									"functionSelector": "5d2ec65d",
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToHarvest",
									"nameLocation": "5819:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:2:7"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "5858:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5858:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5857:9:7"
									},
									"scope": 1817,
									"src": "5810:159:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "6035:578:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1721,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "6056:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6056:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "6056:14:7"
											},
											{
												"assignments": [
													1726
												],
												"declarations": [
													{
														"constant": false,
														"id": 1726,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "6096:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "6081:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1725,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1724,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "6081:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "6081:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1731,
												"initialValue": {
													"baseExpression": {
														"id": 1727,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "6105:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1730,
													"indexExpression": {
														"expression": {
															"id": 1728,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6113:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6113:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6105:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6081:43:7"
											},
											{
												"assignments": [
													1733
												],
												"declarations": [
													{
														"constant": false,
														"id": 1733,
														"mutability": "mutable",
														"name": "rewardToClaim",
														"nameLocation": "6143:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "6135:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6135:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1748,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6241:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "34",
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6245:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	},
																	"src": "6241:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1740,
																			"name": "_rewardFeeRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1164,
																			"src": "6221:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1737,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "6190:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakerCurrentReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1147,
																			"src": "6190:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "6190:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6190:46:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "6190:50:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6190:57:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1734,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "6159:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakerCurrentReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1147,
															"src": "6159:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "6159:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6159:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6135:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1750,
																"name": "rewardToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "6277:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6293:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6277:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6296:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 1749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6269:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6269:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "6269:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1756,
														"name": "rewardToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "6330:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"id": 1759,
																"name": "_bountyWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "6362:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1757,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "6346:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "6346:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6346:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6330:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1769,
												"nodeType": "IfStatement",
												"src": "6326:111:7",
												"trueBody": {
													"expression": {
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1762,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "6391:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 1765,
																	"name": "_bountyWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "6423:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1763,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "6407:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "6407:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6407:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6391:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1768,
													"nodeType": "ExpressionStatement",
													"src": "6391:46:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1773,
															"name": "_bountyWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "6471:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1774,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6486:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6486:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1776,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "6498:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1770,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "6448:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "6448:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6448:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "6448:64:7"
											},
											{
												"expression": {
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1779,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "6523:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "6523:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6552:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6523:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "6523:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1786,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6579:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6579:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1788,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "6591:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1785,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "6571:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6571:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1790,
												"nodeType": "EmitStatement",
												"src": "6566:39:7"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "6019:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6026:2:7"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6035:0:7"
									},
									"scope": 1817,
									"src": "6010:603:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "6727:68:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1797,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "6755:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1800,
														"indexExpression": {
															"expression": {
																"id": 1798,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6763:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6763:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6755:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "6755:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1802,
												"nodeType": "Return",
												"src": "6748:39:7"
											}
										]
									},
									"functionSelector": "373d6132",
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "6682:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6694:2:7"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "6718:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6718:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6717:9:7"
									},
									"scope": 1817,
									"src": "6673:122:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "6857:65:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1809,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "6875:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1812,
														"indexExpression": {
															"expression": {
																"id": 1810,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6883:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6883:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6875:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "6875:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1808,
												"id": 1814,
												"nodeType": "Return",
												"src": "6868:46:7"
											}
										]
									},
									"functionSelector": "f7b2a7be",
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardAmount",
									"nameLocation": "6812:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6824:2:7"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "6848:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6848:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6847:9:7"
									},
									"scope": 1817,
									"src": "6803:119:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1818,
							"src": "260:6665:7",
							"usedErrors": []
						}
					],
					"src": "33:6894:7"
				},
				"id": 7
			}
		}
	}
}