{
	"id": "9933463f325448cbc4d38572d91362e5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./SafeBEP20.sol\";\r\n\r\ncontract StakingPlatform is Ownable {\r\n\r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    // args for _stakers\r\n    struct Staker {\r\n        uint256 stakerCurrentReward;\r\n        uint256 stakedAmount;\r\n        uint256 mode;\r\n        uint256 stakeStartTime;\r\n        uint256 lastUpdatedBlockNumber;\r\n        uint256 staked;\r\n    }   \r\n    \r\n    // refer to CRSFANS token. Address: 0x7AD8A62451f79399c940fC1A6FE96358a80B1931\r\n    \r\n    uint256 private _unstakingFeeRate;\r\n    uint256 private _eventPeriod;\r\n    uint256 private _rewardRate;\r\n    uint256 private _rewardFeeRate;\r\n    address private _bountyWallet;\r\n    uint256 private _lockupPeriod;\r\n\r\n    mapping(address => Staker) private _staker;\r\n\r\n    // Total amount of token staked in staking pool.\r\n    uint256 public totalStaked;\r\n    IBEP20 public token;\r\n    \r\n    // Events triggered when start, stake, unstake(withdraw), get reward.\r\n    event Staked(address staker, uint256 amount);\r\n    event Harvest(address staker, uint256 rewardToClaim);\r\n    event Withdraw(address staker, uint256 amount);\r\n    event SetRewardRate(uint256 rewardRate);\r\n    event SetEventPeriod(uint256 lockupDuration);\r\n    event SetUnstakingFeeRate(uint256 unstakingFeeRate);\r\n    event SetBountyWallet(address bountyWallet);\r\n\r\n    constructor(address _token, address __bountyWallet) {\r\n        \r\n        Init();\r\n        _bountyWallet = __bountyWallet;\r\n        token = IBEP20(_token);\r\n    }\r\n\r\n    function Init() internal {\r\n        \r\n        _rewardRate = 200; // per day\r\n        _unstakingFeeRate = 1500;\r\n        _rewardFeeRate = 100;\r\n        _eventPeriod = 7 days;\r\n        _lockupPeriod = 90 days;\r\n    }\r\n\r\n    function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r\n        \r\n        return timedur.div(1 days);\r\n    }\r\n\r\n    // Update rewards for _stakers according to deposited amount.\r\n    function updateReward() private{\r\n        \r\n        Staker storage staker = _staker[msg.sender];\r\n        uint256 newReward = staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4);\r\n        staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward);\r\n        staker.lastUpdatedBlockNumber = block.number;\r\n    }\r\n    \r\n    function startStaking(uint256 _amount, uint256 _mode) external {\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked != 0x55, \"Already started\");\r\n\r\n        _staker[msg.sender].mode = _mode;\r\n        _staker[msg.sender].stakeStartTime = block.timestamp;\r\n        _staker[msg.sender].staked = 0x55;\r\n        stake(_amount);\r\n    }\r\n\r\n    // Staker tries to stake specific amount of token.\r\n    function stake(uint256 _amount) public{\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\");\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n        staker.stakedAmount = staker.stakedAmount.add(_amount);\r\n        totalStaked = totalStaked.add(_amount);\r\n        \r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    // Withdraw some of token staked.\r\n    function withdraw(uint256 amount) external{\r\n        \r\n        Staker storage staker = _staker[msg.sender];\r\n\r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        require(amount <= staker.stakedAmount, \"Invalid amount\");\r\n\r\n        updateReward();\r\n        uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this));\r\n        uint256 during = block.timestamp.sub(staker.stakeStartTime).div(1 days);\r\n        uint256 fee = 100;\r\n        bool isLockupTimeOver = staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r\n            block.timestamp >= staker.stakeStartTime.add(_lockupPeriod);\r\n        if (!isLockupTimeOver) {\r\n            fee = _unstakingFeeRate;\r\n        }\r\n        amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4));\r\n        totalStaked = totalStaked.sub(amountTobeWithdrawn);\r\n        staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn);\r\n        token.safeTransfer(msg.sender, amountTobeWithdrawn);\r\n\r\n        emit Withdraw(msg.sender, amountTobeWithdrawn);\r\n        // return block.timestamp.sub(staker.stakeStartTime);\r\n    }\r\n    \r\n    function setRewardRate(uint256 __rewardRate) external onlyOwner {\r\n        \r\n        require(__rewardRate > 0, \"Invalid value\");\r\n        \r\n        _rewardRate = __rewardRate;\r\n\r\n        emit SetRewardRate(__rewardRate);\r\n    }\r\n\r\n    function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r\n        \r\n        require(__eventPeriod > 0, \"Invalid Lockup Duration\");\r\n\r\n        _eventPeriod = __eventPeriod.mul(1 days);\r\n\r\n        emit SetEventPeriod(__eventPeriod);\r\n    }\r\n\r\n    function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r\n        \r\n        require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\");\r\n\r\n        _unstakingFeeRate = __unstakingFeeRate;\r\n\r\n        emit SetUnstakingFeeRate(__unstakingFeeRate);\r\n    }\r\n\r\n    function setBountyWallet(address __bountyWallet) external onlyOwner {\r\n        \r\n        require(__bountyWallet > address(0), \"Invalid Address. Address can't be zero\");\r\n\r\n        _bountyWallet = __bountyWallet;\r\n\r\n        emit SetBountyWallet(__bountyWallet);\r\n    }\r\n\r\n    function setLockupTime(uint256 lockupTime) external onlyOwner {\r\n\r\n        require(lockupTime > 0, \"Can't be zero\");\r\n\r\n        _lockupPeriod = lockupTime;\r\n    }\r\n\r\n    // Amount of reward staker can be guaranteed.\r\n    function rewardToHarvest() public view returns (uint256){\r\n        \r\n        // updateReward();\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n\r\n    // Get reward of msg.sender\r\n    function harvest() public{\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4));\r\n        \r\n        require(rewardToClaim > 0, \"Nothing to claim\");\r\n        if (rewardToClaim > token.balanceOf(_bountyWallet))\r\n            rewardToClaim = token.balanceOf(_bountyWallet);\r\n        token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim);\r\n        staker.stakerCurrentReward = 0;\r\n\r\n        emit Harvest(msg.sender, rewardToClaim);\r\n    }\r\n\r\n    // Amount of token staked in staking pool.\r\n    function stakedAmount() public view returns (uint256) {\r\n        \r\n        return _staker[msg.sender].stakedAmount;\r\n    }\r\n    \r\n    function rewardAmount() public view returns (uint256) {\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n}\r\n"
			},
			"contracts/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"./IBEP20.sol\";\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n    \r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n        \r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
									".code": [
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"StakingPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "__bountyWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardToClaim",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "bountyWallet",
									"type": "address"
								}
							],
							"name": "SetBountyWallet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockupDuration",
									"type": "uint256"
								}
							],
							"name": "SetEventPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "SetRewardRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "SetUnstakingFeeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToHarvest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "__bountyWallet",
									"type": "address"
								}
							],
							"name": "setBountyWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__eventPeriod",
									"type": "uint256"
								}
							],
							"name": "setEventPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lockupTime",
									"type": "uint256"
								}
							],
							"name": "setLockupTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__rewardRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "setUnstakingFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "startStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":260:7296  contract StakingPlatform is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":1552:1713  constructor(address _token, address __bountyWallet) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Staking.sol\":1625:1631  Init() */\n  tag_12\n    /* \"contracts/Staking.sol\":1625:1629  Init */\n  shl(0x20, tag_13)\n    /* \"contracts/Staking.sol\":1625:1631  Init() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Staking.sol\":1658:1672  __bountyWallet */\n  dup1\n    /* \"contracts/Staking.sol\":1642:1655  _bountyWallet */\n  0x05\n  0x00\n    /* \"contracts/Staking.sol\":1642:1672  _bountyWallet = __bountyWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1698:1704  _token */\n  dup2\n    /* \"contracts/Staking.sol\":1683:1688  token */\n  0x09\n  0x00\n    /* \"contracts/Staking.sol\":1683:1705  token = IBEP20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1552:1713  constructor(address _token, address __bountyWallet) {\r... */\n  pop\n  pop\n    /* \"contracts/Staking.sol\":260:7296  contract StakingPlatform is Ownable {\r... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":1721:1935  function Init() internal {\r... */\ntag_13:\n    /* \"contracts/Staking.sol\":1781:1784  200 */\n  0xc8\n    /* \"contracts/Staking.sol\":1767:1778  _rewardRate */\n  0x03\n    /* \"contracts/Staking.sol\":1767:1784  _rewardRate = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1826:1830  1500 */\n  0x05dc\n    /* \"contracts/Staking.sol\":1806:1823  _unstakingFeeRate */\n  0x01\n    /* \"contracts/Staking.sol\":1806:1830  _unstakingFeeRate = 1500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1858:1861  100 */\n  0x64\n    /* \"contracts/Staking.sol\":1841:1855  _rewardFeeRate */\n  0x04\n    /* \"contracts/Staking.sol\":1841:1861  _rewardFeeRate = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1887:1893  7 days */\n  0x093a80\n    /* \"contracts/Staking.sol\":1872:1884  _eventPeriod */\n  0x02\n    /* \"contracts/Staking.sol\":1872:1893  _eventPeriod = 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1920:1927  90 days */\n  0x76a700\n    /* \"contracts/Staking.sol\":1904:1917  _lockupPeriod */\n  0x06\n    /* \"contracts/Staking.sol\":1904:1927  _lockupPeriod = 90 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1721:1935  function Init() internal {\r... */\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_19:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_21\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":260:379   */\ntag_24:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_27\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_19\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_28\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_31:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_33\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_34:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_26:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_22:\n    /* \"#utility.yul\":1303:1327   */\n  tag_40\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_31\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_41:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":260:7296  contract StakingPlatform is Ownable {\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":260:7296  contract StakingPlatform is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9e447fc6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf7b2a7be\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x817b1cd2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8a9d3839\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91e07e7a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x4b77dd9e\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x4b77dd9e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5d2ec65d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x692642e7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x373d6132\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4b62b70b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":3724:4900  function withdraw(uint256 amount) external{\r... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/Staking.sol\":7040:7162  function stakedAmount() public view returns (uint256) {\r... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":6381:6984  function harvest() public{\r... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/Staking.sol\":5960:6122  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/Staking.sol\":2542:3013  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Staking.sol\":6181:6340  function rewardToHarvest() public view returns (uint256){\r... */\n    tag_8:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5147:5395  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/Staking.sol\":1042:1068  uint256 public totalStaked */\n    tag_11:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5685:5952  function setBountyWallet(address __bountyWallet) external onlyOwner {\r... */\n    tag_12:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5403:5677  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_14:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/Staking.sol\":4912:5139  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n    tag_15:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/Staking.sol\":3077:3677  function stake(uint256 _amount) public{\r... */\n    tag_16:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/Staking.sol\":7174:7293  function rewardAmount() public view returns (uint256) {\r... */\n    tag_18:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1075:1094  IBEP20 public token */\n    tag_19:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":3724:4900  function withdraw(uint256 amount) external{\r... */\n    tag_26:\n        /* \"contracts/Staking.sol\":3787:3808  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":3811:3818  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":3811:3830  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3819:3829  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3811:3830  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3787:3830  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3860:3861  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3851:3857  amount */\n      dup3\n        /* \"contracts/Staking.sol\":3851:3861  amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3843:3897  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/Staking.sol\":3926:3932  staker */\n      dup1\n        /* \"contracts/Staking.sol\":3926:3945  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":3916:3922  amount */\n      dup3\n        /* \"contracts/Staking.sol\":3916:3945  amount <= staker.stakedAmount */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":3908:3964  require(amount <= staker.stakedAmount, \"Invalid amount\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"contracts/Staking.sol\":3977:3991  updateReward() */\n      tag_85\n        /* \"contracts/Staking.sol\":3977:3989  updateReward */\n      tag_86\n        /* \"contracts/Staking.sol\":3977:3991  updateReward() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/Staking.sol\":4002:4029  uint256 amountTobeWithdrawn */\n      0x00\n        /* \"contracts/Staking.sol\":4041:4046  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4041:4056  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":4065:4069  this */\n      address\n        /* \"contracts/Staking.sol\":4041:4071  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"contracts/Staking.sol\":4032:4038  amount */\n      dup4\n        /* \"contracts/Staking.sol\":4032:4071  amount < token.balanceOf(address(this)) */\n      lt\n        /* \"contracts/Staking.sol\":4032:4113  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      tag_93\n      jumpi\n        /* \"contracts/Staking.sol\":4083:4088  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4083:4098  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":4107:4111  this */\n      address\n        /* \"contracts/Staking.sol\":4083:4113  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_94:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_98:\n        /* \"contracts/Staking.sol\":4032:4113  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      jump(tag_99)\n    tag_93:\n        /* \"contracts/Staking.sol\":4074:4080  amount */\n      dup3\n        /* \"contracts/Staking.sol\":4032:4113  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n    tag_99:\n        /* \"contracts/Staking.sol\":4002:4113  uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4124:4138  uint256 during */\n      0x00\n        /* \"contracts/Staking.sol\":4141:4195  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      tag_100\n        /* \"contracts/Staking.sol\":4188:4194  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":4141:4183  block.timestamp.sub(staker.stakeStartTime) */\n      tag_101\n        /* \"contracts/Staking.sol\":4161:4167  staker */\n      dup6\n        /* \"contracts/Staking.sol\":4161:4182  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":4141:4156  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4141:4160  block.timestamp.sub */\n      tag_102\n      swap1\n        /* \"contracts/Staking.sol\":4141:4183  block.timestamp.sub(staker.stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"contracts/Staking.sol\":4141:4187  block.timestamp.sub(staker.stakeStartTime).div */\n      tag_103\n      swap1\n        /* \"contracts/Staking.sol\":4141:4195  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"contracts/Staking.sol\":4124:4195  uint256 during = block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4206:4217  uint256 fee */\n      0x00\n        /* \"contracts/Staking.sol\":4220:4223  100 */\n      0x64\n        /* \"contracts/Staking.sol\":4206:4223  uint256 fee = 100 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4234:4255  bool isLockupTimeOver */\n      0x00\n        /* \"contracts/Staking.sol\":4273:4274  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4258:4264  staker */\n      dup6\n        /* \"contracts/Staking.sol\":4258:4269  staker.mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4258:4274  staker.mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":4258:4392  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      tag_104\n      jumpi\n        /* \"contracts/Staking.sol\":4352:4392  staker.stakeStartTime.add(_lockupPeriod) */\n      tag_105\n        /* \"contracts/Staking.sol\":4378:4391  _lockupPeriod */\n      sload(0x06)\n        /* \"contracts/Staking.sol\":4352:4358  staker */\n      dup7\n        /* \"contracts/Staking.sol\":4352:4373  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":4352:4377  staker.stakeStartTime.add */\n      tag_106\n      swap1\n        /* \"contracts/Staking.sol\":4352:4392  staker.stakeStartTime.add(_lockupPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/Staking.sol\":4333:4348  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4333:4392  block.timestamp >= staker.stakeStartTime.add(_lockupPeriod) */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":4258:4392  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      jump(tag_107)\n    tag_104:\n        /* \"contracts/Staking.sol\":4302:4303  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4286:4298  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":4277:4283  during */\n      dup5\n        /* \"contracts/Staking.sol\":4277:4298  during % _eventPeriod */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"contracts/Staking.sol\":4277:4303  during % _eventPeriod == 0 */\n      eq\n        /* \"contracts/Staking.sol\":4277:4317  during % _eventPeriod == 0 && during > 0 */\n      dup1\n      iszero\n      tag_110\n      jumpi\n      pop\n        /* \"contracts/Staking.sol\":4316:4317  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4307:4313  during */\n      dup4\n        /* \"contracts/Staking.sol\":4307:4317  during > 0 */\n      gt\n        /* \"contracts/Staking.sol\":4277:4317  during % _eventPeriod == 0 && during > 0 */\n    tag_110:\n        /* \"contracts/Staking.sol\":4258:4392  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n    tag_107:\n        /* \"contracts/Staking.sol\":4234:4392  bool isLockupTimeOver = staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4408:4424  isLockupTimeOver */\n      dup1\n        /* \"contracts/Staking.sol\":4403:4476  if (!isLockupTimeOver) {\r... */\n      tag_111\n      jumpi\n        /* \"contracts/Staking.sol\":4447:4464  _unstakingFeeRate */\n      sload(0x01)\n        /* \"contracts/Staking.sol\":4441:4464  fee = _unstakingFeeRate */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":4403:4476  if (!isLockupTimeOver) {\r... */\n    tag_111:\n        /* \"contracts/Staking.sol\":4508:4570  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      tag_112\n        /* \"contracts/Staking.sol\":4532:4569  amountTobeWithdrawn.mul(fee).div(1e4) */\n      tag_113\n        /* \"contracts/Staking.sol\":4565:4568  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":4532:4560  amountTobeWithdrawn.mul(fee) */\n      tag_114\n        /* \"contracts/Staking.sol\":4556:4559  fee */\n      dup6\n        /* \"contracts/Staking.sol\":4532:4551  amountTobeWithdrawn */\n      dup9\n        /* \"contracts/Staking.sol\":4532:4555  amountTobeWithdrawn.mul */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":4532:4560  amountTobeWithdrawn.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"contracts/Staking.sol\":4532:4564  amountTobeWithdrawn.mul(fee).div */\n      tag_103\n      swap1\n        /* \"contracts/Staking.sol\":4532:4569  amountTobeWithdrawn.mul(fee).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_113:\n        /* \"contracts/Staking.sol\":4508:4527  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":4508:4531  amountTobeWithdrawn.sub */\n      tag_102\n      swap1\n        /* \"contracts/Staking.sol\":4508:4570  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/Staking.sol\":4486:4570  amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap4\n      pop\n        /* \"contracts/Staking.sol\":4595:4631  totalStaked.sub(amountTobeWithdrawn) */\n      tag_116\n        /* \"contracts/Staking.sol\":4611:4630  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":4595:4606  totalStaked */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":4595:4610  totalStaked.sub */\n      tag_102\n      swap1\n        /* \"contracts/Staking.sol\":4595:4631  totalStaked.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"contracts/Staking.sol\":4581:4592  totalStaked */\n      0x08\n        /* \"contracts/Staking.sol\":4581:4631  totalStaked = totalStaked.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4664:4708  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      tag_117\n        /* \"contracts/Staking.sol\":4688:4707  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":4664:4670  staker */\n      dup7\n        /* \"contracts/Staking.sol\":4664:4683  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4664:4687  staker.stakedAmount.sub */\n      tag_102\n      swap1\n        /* \"contracts/Staking.sol\":4664:4708  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"contracts/Staking.sol\":4642:4648  staker */\n      dup6\n        /* \"contracts/Staking.sol\":4642:4661  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":4642:4708  staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4719:4770  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      tag_118\n        /* \"contracts/Staking.sol\":4738:4748  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4750:4769  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":4719:4724  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4719:4737  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_119\n      swap1\n        /* \"contracts/Staking.sol\":4719:4770  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/Staking.sol\":4788:4829  Withdraw(msg.sender, amountTobeWithdrawn) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/Staking.sol\":4797:4807  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4809:4828  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":4788:4829  Withdraw(msg.sender, amountTobeWithdrawn) */\n      mload(0x40)\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3766:4900  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":3724:4900  function withdraw(uint256 amount) external{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7040:7162  function stakedAmount() public view returns (uint256) {\r... */\n    tag_28:\n        /* \"contracts/Staking.sol\":7085:7092  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":7122:7129  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":7122:7141  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":7130:7140  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7122:7141  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":7122:7154  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":7115:7154  return _staker[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7040:7162  function stakedAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":6381:6984  function harvest() public{\r... */\n    tag_32:\n        /* \"contracts/Staking.sol\":6427:6441  updateReward() */\n      tag_124\n        /* \"contracts/Staking.sol\":6427:6439  updateReward */\n      tag_86\n        /* \"contracts/Staking.sol\":6427:6441  updateReward() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/Staking.sol\":6452:6473  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":6476:6483  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":6476:6495  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6484:6494  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6476:6495  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6452:6495  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6506:6527  uint256 rewardToClaim */\n      0x00\n        /* \"contracts/Staking.sol\":6530:6619  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      tag_125\n        /* \"contracts/Staking.sol\":6561:6618  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      tag_126\n        /* \"contracts/Staking.sol\":6612:6617  10**4 */\n      0x2710\n        /* \"contracts/Staking.sol\":6561:6607  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      tag_127\n        /* \"contracts/Staking.sol\":6592:6606  _rewardFeeRate */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":6561:6567  staker */\n      dup7\n        /* \"contracts/Staking.sol\":6561:6587  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6561:6591  staker.stakerCurrentReward.mul */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":6561:6607  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/Staking.sol\":6561:6611  staker.stakerCurrentReward.mul(_rewardFeeRate).div */\n      tag_103\n      swap1\n        /* \"contracts/Staking.sol\":6561:6618  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"contracts/Staking.sol\":6530:6536  staker */\n      dup4\n        /* \"contracts/Staking.sol\":6530:6556  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6530:6560  staker.stakerCurrentReward.sub */\n      tag_102\n      swap1\n        /* \"contracts/Staking.sol\":6530:6619  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"contracts/Staking.sol\":6506:6619  uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6664:6665  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6648:6661  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":6648:6665  rewardToClaim > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6640:6686  require(rewardToClaim > 0, \"Nothing to claim\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/Staking.sol\":6717:6722  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6717:6732  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":6733:6746  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6717:6747  token.balanceOf(_bountyWallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_131:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_135:\n        /* \"contracts/Staking.sol\":6701:6714  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":6701:6747  rewardToClaim > token.balanceOf(_bountyWallet) */\n      gt\n        /* \"contracts/Staking.sol\":6697:6808  if (rewardToClaim > token.balanceOf(_bountyWallet))\r... */\n      iszero\n      tag_136\n      jumpi\n        /* \"contracts/Staking.sol\":6778:6783  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6778:6793  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":6794:6807  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6778:6808  token.balanceOf(_bountyWallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_137:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_141:\n        /* \"contracts/Staking.sol\":6762:6808  rewardToClaim = token.balanceOf(_bountyWallet) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6697:6808  if (rewardToClaim > token.balanceOf(_bountyWallet))\r... */\n    tag_136:\n        /* \"contracts/Staking.sol\":6819:6883  token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim) */\n      tag_142\n        /* \"contracts/Staking.sol\":6842:6855  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6857:6867  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6869:6882  rewardToClaim */\n      dup4\n        /* \"contracts/Staking.sol\":6819:6824  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6819:6841  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_143\n      swap1\n        /* \"contracts/Staking.sol\":6819:6883  token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/Staking.sol\":6923:6924  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6894:6900  staker */\n      dup3\n        /* \"contracts/Staking.sol\":6894:6920  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":6894:6924  staker.stakerCurrentReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6942:6976  Harvest(msg.sender, rewardToClaim) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"contracts/Staking.sol\":6950:6960  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6962:6975  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":6942:6976  Harvest(msg.sender, rewardToClaim) */\n      mload(0x40)\n      tag_144\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6406:6984  {\r... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":6381:6984  function harvest() public{\r... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":5960:6122  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/Staking.sol\":6056:6057  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6043:6053  lockupTime */\n      dup2\n        /* \"contracts/Staking.sol\":6043:6057  lockupTime > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6035:6075  require(lockupTime > 0, \"Can't be zero\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/Staking.sol\":6104:6114  lockupTime */\n      dup1\n        /* \"contracts/Staking.sol\":6088:6101  _lockupPeriod */\n      0x06\n        /* \"contracts/Staking.sol\":6088:6114  _lockupPeriod = lockupTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5960:6122  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":2542:3013  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n    tag_39:\n        /* \"contracts/Staking.sol\":2644:2645  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2634:2641  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2634:2645  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2626:2681  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_81\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/Staking.sol\":2730:2737  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":2700:2705  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":2700:2715  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":2716:2726  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2700:2727  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_159:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_163:\n        /* \"contracts/Staking.sol\":2700:2737  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":2692:2755  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/Staking.sol\":2804:2808  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":2774:2781  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2774:2793  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2782:2792  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2774:2793  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2774:2800  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":2774:2808  _staker[msg.sender].staked != 0x55 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":2766:2828  require(_staker[msg.sender].staked != 0x55, \"Already started\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/Staking.sol\":2868:2873  _mode */\n      dup1\n        /* \"contracts/Staking.sol\":2841:2848  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2841:2860  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2849:2859  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2841:2860  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2841:2865  _staker[msg.sender].mode */\n      0x02\n      add\n        /* \"contracts/Staking.sol\":2841:2873  _staker[msg.sender].mode = _mode */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2921:2936  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2884:2891  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2884:2903  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2892:2902  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2884:2903  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2884:2918  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n        /* \"contracts/Staking.sol\":2884:2936  _staker[msg.sender].stakeStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2976:2980  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":2947:2954  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2947:2966  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2955:2965  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2947:2966  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2947:2973  _staker[msg.sender].staked */\n      0x05\n      add\n        /* \"contracts/Staking.sol\":2947:2980  _staker[msg.sender].staked = 0x55 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2991:3005  stake(_amount) */\n      tag_170\n        /* \"contracts/Staking.sol\":2997:3004  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2991:2996  stake */\n      tag_67\n        /* \"contracts/Staking.sol\":2991:3005  stake(_amount) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/Staking.sol\":2542:3013  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6181:6340  function rewardToHarvest() public view returns (uint256){\r... */\n    tag_41:\n        /* \"contracts/Staking.sol\":6229:6236  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":6293:6300  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":6293:6312  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6301:6311  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6293:6312  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6293:6332  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6286:6332  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6181:6340  function rewardToHarvest() public view returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5147:5395  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_151\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/Staking.sol\":5258:5259  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5242:5255  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":5242:5259  __eventPeriod > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5234:5287  require(__eventPeriod > 0, \"Invalid Lockup Duration\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/Staking.sol\":5315:5340  __eventPeriod.mul(1 days) */\n      tag_181\n        /* \"contracts/Staking.sol\":5333:5339  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":5315:5328  __eventPeriod */\n      dup3\n        /* \"contracts/Staking.sol\":5315:5332  __eventPeriod.mul */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":5315:5340  __eventPeriod.mul(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"contracts/Staking.sol\":5300:5312  _eventPeriod */\n      0x02\n        /* \"contracts/Staking.sol\":5300:5340  _eventPeriod = __eventPeriod.mul(1 days) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5358:5387  SetEventPeriod(__eventPeriod) */\n      0x189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c\n        /* \"contracts/Staking.sol\":5373:5386  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":5358:5387  SetEventPeriod(__eventPeriod) */\n      mload(0x40)\n      tag_182\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5147:5395  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_151\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":1042:1068  uint256 public totalStaked */\n    tag_49:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":5685:5952  function setBountyWallet(address __bountyWallet) external onlyOwner {\r... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_151\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contracts/Staking.sol\":5807:5808  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5782:5809  __bountyWallet > address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":5782:5796  __bountyWallet */\n      dup2\n        /* \"contracts/Staking.sol\":5782:5809  __bountyWallet > address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"contracts/Staking.sol\":5774:5852  require(__bountyWallet > address(0), \"Invalid Address. Address can't be zero\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/Staking.sol\":5881:5895  __bountyWallet */\n      dup1\n        /* \"contracts/Staking.sol\":5865:5878  _bountyWallet */\n      0x05\n      0x00\n        /* \"contracts/Staking.sol\":5865:5895  _bountyWallet = __bountyWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5913:5944  SetBountyWallet(__bountyWallet) */\n      0xeda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a87\n        /* \"contracts/Staking.sol\":5929:5943  __bountyWallet */\n      dup2\n        /* \"contracts/Staking.sol\":5913:5944  SetBountyWallet(__bountyWallet) */\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5685:5952  function setBountyWallet(address __bountyWallet) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5403:5677  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_151\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"contracts/Staking.sol\":5529:5530  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5508:5526  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":5508:5530  __unstakingFeeRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5500:5561  require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/Staking.sol\":5594:5612  __unstakingFeeRate */\n      dup1\n        /* \"contracts/Staking.sol\":5574:5591  _unstakingFeeRate */\n      0x01\n        /* \"contracts/Staking.sol\":5574:5612  _unstakingFeeRate = __unstakingFeeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5630:5669  SetUnstakingFeeRate(__unstakingFeeRate) */\n      0x150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81\n        /* \"contracts/Staking.sol\":5650:5668  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":5630:5669  SetUnstakingFeeRate(__unstakingFeeRate) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5403:5677  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4912:5139  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_151\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/Staking.sol\":5020:5021  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5005:5017  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":5005:5021  __rewardRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":4997:5039  require(__rewardRate > 0, \"Invalid value\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/Staking.sol\":5074:5086  __rewardRate */\n      dup1\n        /* \"contracts/Staking.sol\":5060:5071  _rewardRate */\n      0x03\n        /* \"contracts/Staking.sol\":5060:5086  _rewardRate = __rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5104:5131  SetRewardRate(__rewardRate) */\n      0x1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f\n        /* \"contracts/Staking.sol\":5118:5130  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":5104:5131  SetRewardRate(__rewardRate) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":4912:5139  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":3077:3677  function stake(uint256 _amount) public{\r... */\n    tag_67:\n        /* \"contracts/Staking.sol\":3154:3155  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3144:3151  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":3144:3155  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3136:3191  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_81\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"contracts/Staking.sol\":3240:3247  _amount */\n      dup1\n        /* \"contracts/Staking.sol\":3210:3215  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3210:3225  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3226:3236  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3210:3237  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_225:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_229\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_229:\n        /* \"contracts/Staking.sol\":3210:3247  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":3202:3265  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_166\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"contracts/Staking.sol\":3314:3318  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":3284:3291  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":3284:3303  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3292:3302  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3284:3303  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3284:3310  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":3284:3318  _staker[msg.sender].staked == 0x55 */\n      eq\n        /* \"contracts/Staking.sol\":3276:3344  require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"contracts/Staking.sol\":3365:3379  updateReward() */\n      tag_235\n        /* \"contracts/Staking.sol\":3365:3377  updateReward */\n      tag_86\n        /* \"contracts/Staking.sol\":3365:3379  updateReward() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/Staking.sol\":3390:3411  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":3414:3421  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":3414:3433  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3422:3432  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3414:3433  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3390:3433  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3444:3502  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_236\n        /* \"contracts/Staking.sol\":3467:3477  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3487:3491  this */\n      address\n        /* \"contracts/Staking.sol\":3494:3501  _amount */\n      dup5\n        /* \"contracts/Staking.sol\":3444:3449  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3444:3466  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_143\n      swap1\n        /* \"contracts/Staking.sol\":3444:3502  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"contracts/Staking.sol\":3535:3567  staker.stakedAmount.add(_amount) */\n      tag_237\n        /* \"contracts/Staking.sol\":3559:3566  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3535:3541  staker */\n      dup3\n        /* \"contracts/Staking.sol\":3535:3554  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":3535:3558  staker.stakedAmount.add */\n      tag_106\n      swap1\n        /* \"contracts/Staking.sol\":3535:3567  staker.stakedAmount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"contracts/Staking.sol\":3513:3519  staker */\n      dup2\n        /* \"contracts/Staking.sol\":3513:3532  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":3513:3567  staker.stakedAmount = staker.stakedAmount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3592:3616  totalStaked.add(_amount) */\n      tag_238\n        /* \"contracts/Staking.sol\":3608:3615  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3592:3603  totalStaked */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":3592:3607  totalStaked.add */\n      tag_106\n      swap1\n        /* \"contracts/Staking.sol\":3592:3616  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/Staking.sol\":3578:3589  totalStaked */\n      0x08\n        /* \"contracts/Staking.sol\":3578:3616  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3642:3669  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staking.sol\":3649:3659  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3661:3668  _amount */\n      dup4\n        /* \"contracts/Staking.sol\":3642:3669  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_239\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3115:3677  {\r... */\n      pop\n        /* \"contracts/Staking.sol\":3077:3677  function stake(uint256 _amount) public{\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_151\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7174:7293  function rewardAmount() public view returns (uint256) {\r... */\n    tag_72:\n        /* \"contracts/Staking.sol\":7219:7226  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":7246:7253  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":7246:7265  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":7254:7264  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7246:7265  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":7246:7285  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":7239:7285  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7174:7293  function rewardAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1075:1094  IBEP20 public token */\n    tag_75:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":2152:2530  function updateReward() private{\r... */\n    tag_86:\n        /* \"contracts/Staking.sol\":2204:2225  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":2228:2235  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2228:2247  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2236:2246  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2228:2247  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2204:2247  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2258:2275  uint256 newReward */\n      0x00\n        /* \"contracts/Staking.sol\":2278:2386  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      tag_252\n        /* \"contracts/Staking.sol\":2382:2385  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2278:2377  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      tag_253\n        /* \"contracts/Staking.sol\":2365:2376  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2278:2360  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)) */\n      tag_254\n        /* \"contracts/Staking.sol\":2302:2359  block.number.sub(staker.lastUpdatedBlockNumber).div(8640) */\n      tag_255\n        /* \"contracts/Staking.sol\":2354:2358  8640 */\n      0x21c0\n        /* \"contracts/Staking.sol\":2302:2349  block.number.sub(staker.lastUpdatedBlockNumber) */\n      tag_256\n        /* \"contracts/Staking.sol\":2319:2325  staker */\n      dup10\n        /* \"contracts/Staking.sol\":2319:2348  staker.lastUpdatedBlockNumber */\n      0x04\n      add\n      sload\n        /* \"contracts/Staking.sol\":2302:2314  block.number */\n      number\n        /* \"contracts/Staking.sol\":2302:2318  block.number.sub */\n      tag_102\n      swap1\n        /* \"contracts/Staking.sol\":2302:2349  block.number.sub(staker.lastUpdatedBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"contracts/Staking.sol\":2302:2353  block.number.sub(staker.lastUpdatedBlockNumber).div */\n      tag_103\n      swap1\n        /* \"contracts/Staking.sol\":2302:2359  block.number.sub(staker.lastUpdatedBlockNumber).div(8640) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/Staking.sol\":2278:2284  staker */\n      dup8\n        /* \"contracts/Staking.sol\":2278:2297  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2278:2301  staker.stakedAmount.mul */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":2278:2360  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/Staking.sol\":2278:2364  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":2278:2377  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"contracts/Staking.sol\":2278:2381  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div */\n      tag_103\n      swap1\n        /* \"contracts/Staking.sol\":2278:2386  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/Staking.sol\":2258:2386  uint256 newReward = staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2426:2467  staker.stakerCurrentReward.add(newReward) */\n      tag_257\n        /* \"contracts/Staking.sol\":2457:2466  newReward */\n      dup2\n        /* \"contracts/Staking.sol\":2426:2432  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2426:2452  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":2426:2456  staker.stakerCurrentReward.add */\n      tag_106\n      swap1\n        /* \"contracts/Staking.sol\":2426:2467  staker.stakerCurrentReward.add(newReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"contracts/Staking.sol\":2397:2403  staker */\n      dup3\n        /* \"contracts/Staking.sol\":2397:2423  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":2397:2467  staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2510:2522  block.number */\n      number\n        /* \"contracts/Staking.sol\":2478:2484  staker */\n      dup3\n        /* \"contracts/Staking.sol\":2478:2507  staker.lastUpdatedBlockNumber */\n      0x04\n      add\n        /* \"contracts/Staking.sol\":2478:2522  staker.lastUpdatedBlockNumber = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2183:2530  {\r... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":2152:2530  function updateReward() private{\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_259\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_265\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_268\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n    tag_119:\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_271\n        /* \"contracts/SafeBEP20.sol\":393:398  token */\n      dup4\n        /* \"contracts/SafeBEP20.sol\":423:446  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SafeBEP20.sol\":448:450  to */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":452:457  value */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":400:458  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_272\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":373:392  _callOptionalReturn */\n      tag_273\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n    tag_143:\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_275\n        /* \"contracts/SafeBEP20.sol\":596:601  token */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":626:653  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SafeBEP20.sol\":655:659  from */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":661:663  to */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":665:670  value */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":603:671  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_276\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":576:595  _callOptionalReturn */\n      tag_273\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_275:\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n    tag_273:\n        /* \"contracts/SafeBEP20.sol\":3031:3054  bytes memory returndata */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_281\n        /* \"contracts/SafeBEP20.sol\":3085:3089  data */\n      dup3\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeBEP20.sol\":3065:3070  token */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":3057:3084  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_282\n      swap1\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"contracts/SafeBEP20.sol\":3031:3126  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/SafeBEP20.sol\":3161:3162  0 */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3141:3151  returndata */\n      dup2\n        /* \"contracts/SafeBEP20.sol\":3141:3158  returndata.length */\n      mload\n        /* \"contracts/SafeBEP20.sol\":3141:3162  returndata.length > 0 */\n      gt\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_283\n      jumpi\n        /* \"contracts/SafeBEP20.sol\":3283:3293  returndata */\n      dup1\n        /* \"contracts/SafeBEP20.sol\":3272:3302  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"contracts/SafeBEP20.sol\":3264:3349  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_283:\n        /* \"contracts/SafeBEP20.sol\":2669:3368  {\r... */\n      pop\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_290\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_291\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_296\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_297\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_301\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_305\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_304)\n    tag_305:\n      0x60\n      swap2\n      pop\n    tag_304:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_306\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_307\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_309)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_309:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_317:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_319\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_321:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_323\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_324\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_325:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_327\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_328\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_329:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_331\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_328\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_53:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_334\n      tag_335\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":665:784   */\n    tag_333:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_336\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_317\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_285:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_339\n      tag_335\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":1008:1127   */\n    tag_338:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_340\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_321\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_25:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_343\n      tag_335\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":1351:1470   */\n    tag_342:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_344\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_325\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_92:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_347\n      tag_335\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1697:1816   */\n    tag_346:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_348\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_329\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2441   */\n    tag_38:\n        /* \"#utility.yul\":2035:2041   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup1\n        /* \"#utility.yul\":2092:2094   */\n      0x40\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2071:2078   */\n      dup6\n        /* \"#utility.yul\":2067:2090   */\n      sub\n        /* \"#utility.yul\":2063:2095   */\n      slt\n        /* \"#utility.yul\":2060:2179   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":2098:2177   */\n      tag_351\n      tag_335\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2060:2179   */\n    tag_350:\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2243:2296   */\n      tag_352\n        /* \"#utility.yul\":2288:2295   */\n      dup6\n        /* \"#utility.yul\":2279:2285   */\n      dup3\n        /* \"#utility.yul\":2268:2277   */\n      dup7\n        /* \"#utility.yul\":2264:2286   */\n      add\n        /* \"#utility.yul\":2243:2296   */\n      tag_325\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2233:2296   */\n      swap3\n      pop\n        /* \"#utility.yul\":2189:2306   */\n      pop\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"#utility.yul\":2371:2424   */\n      tag_353\n        /* \"#utility.yul\":2416:2423   */\n      dup6\n        /* \"#utility.yul\":2407:2413   */\n      dup3\n        /* \"#utility.yul\":2396:2405   */\n      dup7\n        /* \"#utility.yul\":2392:2414   */\n      add\n        /* \"#utility.yul\":2371:2424   */\n      tag_325\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2361:2424   */\n      swap2\n      pop\n        /* \"#utility.yul\":2316:2434   */\n      pop\n        /* \"#utility.yul\":1967:2441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2447:2565   */\n    tag_354:\n        /* \"#utility.yul\":2534:2558   */\n      tag_356\n        /* \"#utility.yul\":2552:2557   */\n      dup2\n        /* \"#utility.yul\":2534:2558   */\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":2529:2532   */\n      dup3\n        /* \"#utility.yul\":2522:2559   */\n      mstore\n        /* \"#utility.yul\":2447:2565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2944   */\n    tag_358:\n        /* \"#utility.yul\":2675:2678   */\n      0x00\n        /* \"#utility.yul\":2703:2741   */\n      tag_360\n        /* \"#utility.yul\":2735:2740   */\n      dup3\n        /* \"#utility.yul\":2703:2741   */\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2757:2845   */\n      tag_362\n        /* \"#utility.yul\":2838:2844   */\n      dup2\n        /* \"#utility.yul\":2833:2836   */\n      dup6\n        /* \"#utility.yul\":2757:2845   */\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":2750:2845   */\n      swap4\n      pop\n        /* \"#utility.yul\":2854:2906   */\n      tag_364\n        /* \"#utility.yul\":2899:2905   */\n      dup2\n        /* \"#utility.yul\":2894:2897   */\n      dup6\n        /* \"#utility.yul\":2887:2891   */\n      0x20\n        /* \"#utility.yul\":2880:2885   */\n      dup7\n        /* \"#utility.yul\":2876:2892   */\n      add\n        /* \"#utility.yul\":2854:2906   */\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":2931:2937   */\n      dup1\n        /* \"#utility.yul\":2926:2929   */\n      dup5\n        /* \"#utility.yul\":2922:2938   */\n      add\n        /* \"#utility.yul\":2915:2938   */\n      swap2\n      pop\n        /* \"#utility.yul\":2679:2944   */\n      pop\n        /* \"#utility.yul\":2571:2944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2950:3109   */\n    tag_366:\n        /* \"#utility.yul\":3051:3102   */\n      tag_368\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3051:3102   */\n      tag_369\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3046:3049   */\n      dup3\n        /* \"#utility.yul\":3039:3103   */\n      mstore\n        /* \"#utility.yul\":2950:3109   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3479   */\n    tag_370:\n        /* \"#utility.yul\":3203:3206   */\n      0x00\n        /* \"#utility.yul\":3231:3270   */\n      tag_372\n        /* \"#utility.yul\":3264:3269   */\n      dup3\n        /* \"#utility.yul\":3231:3270   */\n      tag_373\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":3286:3357   */\n      tag_374\n        /* \"#utility.yul\":3350:3356   */\n      dup2\n        /* \"#utility.yul\":3345:3348   */\n      dup6\n        /* \"#utility.yul\":3286:3357   */\n      tag_375\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3279:3357   */\n      swap4\n      pop\n        /* \"#utility.yul\":3366:3418   */\n      tag_376\n        /* \"#utility.yul\":3411:3417   */\n      dup2\n        /* \"#utility.yul\":3406:3409   */\n      dup6\n        /* \"#utility.yul\":3399:3403   */\n      0x20\n        /* \"#utility.yul\":3392:3397   */\n      dup7\n        /* \"#utility.yul\":3388:3404   */\n      add\n        /* \"#utility.yul\":3366:3418   */\n      tag_365\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3443:3472   */\n      tag_377\n        /* \"#utility.yul\":3465:3471   */\n      dup2\n        /* \"#utility.yul\":3443:3472   */\n      tag_378\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3438:3441   */\n      dup5\n        /* \"#utility.yul\":3434:3473   */\n      add\n        /* \"#utility.yul\":3427:3473   */\n      swap2\n      pop\n        /* \"#utility.yul\":3207:3479   */\n      pop\n        /* \"#utility.yul\":3115:3479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3485:3851   */\n    tag_379:\n        /* \"#utility.yul\":3627:3630   */\n      0x00\n        /* \"#utility.yul\":3648:3715   */\n      tag_381\n        /* \"#utility.yul\":3712:3714   */\n      0x10\n        /* \"#utility.yul\":3707:3710   */\n      dup4\n        /* \"#utility.yul\":3648:3715   */\n      tag_375\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3641:3715   */\n      swap2\n      pop\n        /* \"#utility.yul\":3724:3817   */\n      tag_382\n        /* \"#utility.yul\":3813:3816   */\n      dup3\n        /* \"#utility.yul\":3724:3817   */\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3842:3844   */\n      0x20\n        /* \"#utility.yul\":3837:3840   */\n      dup3\n        /* \"#utility.yul\":3833:3845   */\n      add\n        /* \"#utility.yul\":3826:3845   */\n      swap1\n      pop\n        /* \"#utility.yul\":3485:3851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3857:4223   */\n    tag_384:\n        /* \"#utility.yul\":3999:4002   */\n      0x00\n        /* \"#utility.yul\":4020:4087   */\n      tag_386\n        /* \"#utility.yul\":4084:4086   */\n      0x15\n        /* \"#utility.yul\":4079:4082   */\n      dup4\n        /* \"#utility.yul\":4020:4087   */\n      tag_375\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":4013:4087   */\n      swap2\n      pop\n        /* \"#utility.yul\":4096:4189   */\n      tag_387\n        /* \"#utility.yul\":4185:4188   */\n      dup3\n        /* \"#utility.yul\":4096:4189   */\n      tag_388\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"#utility.yul\":4209:4212   */\n      dup3\n        /* \"#utility.yul\":4205:4217   */\n      add\n        /* \"#utility.yul\":4198:4217   */\n      swap1\n      pop\n        /* \"#utility.yul\":3857:4223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4229:4595   */\n    tag_389:\n        /* \"#utility.yul\":4371:4374   */\n      0x00\n        /* \"#utility.yul\":4392:4459   */\n      tag_391\n        /* \"#utility.yul\":4456:4458   */\n      0x2a\n        /* \"#utility.yul\":4451:4454   */\n      dup4\n        /* \"#utility.yul\":4392:4459   */\n      tag_375\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4385:4459   */\n      swap2\n      pop\n        /* \"#utility.yul\":4468:4561   */\n      tag_392\n        /* \"#utility.yul\":4557:4560   */\n      dup3\n        /* \"#utility.yul\":4468:4561   */\n      tag_393\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4586:4588   */\n      0x40\n        /* \"#utility.yul\":4581:4584   */\n      dup3\n        /* \"#utility.yul\":4577:4589   */\n      add\n        /* \"#utility.yul\":4570:4589   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4601:4967   */\n    tag_394:\n        /* \"#utility.yul\":4743:4746   */\n      0x00\n        /* \"#utility.yul\":4764:4831   */\n      tag_396\n        /* \"#utility.yul\":4828:4830   */\n      0x26\n        /* \"#utility.yul\":4823:4826   */\n      dup4\n        /* \"#utility.yul\":4764:4831   */\n      tag_375\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4757:4831   */\n      swap2\n      pop\n        /* \"#utility.yul\":4840:4933   */\n      tag_397\n        /* \"#utility.yul\":4929:4932   */\n      dup3\n        /* \"#utility.yul\":4840:4933   */\n      tag_398\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4958:4960   */\n      0x40\n        /* \"#utility.yul\":4953:4956   */\n      dup3\n        /* \"#utility.yul\":4949:4961   */\n      add\n        /* \"#utility.yul\":4942:4961   */\n      swap1\n      pop\n        /* \"#utility.yul\":4601:4967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4973:5339   */\n    tag_399:\n        /* \"#utility.yul\":5115:5118   */\n      0x00\n        /* \"#utility.yul\":5136:5203   */\n      tag_401\n        /* \"#utility.yul\":5200:5202   */\n      0x0e\n        /* \"#utility.yul\":5195:5198   */\n      dup4\n        /* \"#utility.yul\":5136:5203   */\n      tag_375\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5129:5203   */\n      swap2\n      pop\n        /* \"#utility.yul\":5212:5305   */\n      tag_402\n        /* \"#utility.yul\":5301:5304   */\n      dup3\n        /* \"#utility.yul\":5212:5305   */\n      tag_403\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5330:5332   */\n      0x20\n        /* \"#utility.yul\":5325:5328   */\n      dup3\n        /* \"#utility.yul\":5321:5333   */\n      add\n        /* \"#utility.yul\":5314:5333   */\n      swap1\n      pop\n        /* \"#utility.yul\":4973:5339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5345:5711   */\n    tag_404:\n        /* \"#utility.yul\":5487:5490   */\n      0x00\n        /* \"#utility.yul\":5508:5575   */\n      tag_406\n        /* \"#utility.yul\":5572:5574   */\n      0x0f\n        /* \"#utility.yul\":5567:5570   */\n      dup4\n        /* \"#utility.yul\":5508:5575   */\n      tag_375\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5501:5575   */\n      swap2\n      pop\n        /* \"#utility.yul\":5584:5677   */\n      tag_407\n        /* \"#utility.yul\":5673:5676   */\n      dup3\n        /* \"#utility.yul\":5584:5677   */\n      tag_408\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":5702:5704   */\n      0x20\n        /* \"#utility.yul\":5697:5700   */\n      dup3\n        /* \"#utility.yul\":5693:5705   */\n      add\n        /* \"#utility.yul\":5686:5705   */\n      swap1\n      pop\n        /* \"#utility.yul\":5345:5711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5717:6083   */\n    tag_409:\n        /* \"#utility.yul\":5859:5862   */\n      0x00\n        /* \"#utility.yul\":5880:5947   */\n      tag_411\n        /* \"#utility.yul\":5944:5946   */\n      0x26\n        /* \"#utility.yul\":5939:5942   */\n      dup4\n        /* \"#utility.yul\":5880:5947   */\n      tag_375\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5873:5947   */\n      swap2\n      pop\n        /* \"#utility.yul\":5956:6049   */\n      tag_412\n        /* \"#utility.yul\":6045:6048   */\n      dup3\n        /* \"#utility.yul\":5956:6049   */\n      tag_413\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":6074:6076   */\n      0x40\n        /* \"#utility.yul\":6069:6072   */\n      dup3\n        /* \"#utility.yul\":6065:6077   */\n      add\n        /* \"#utility.yul\":6058:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5717:6083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6089:6455   */\n    tag_414:\n        /* \"#utility.yul\":6231:6234   */\n      0x00\n        /* \"#utility.yul\":6252:6319   */\n      tag_416\n        /* \"#utility.yul\":6316:6318   */\n      0x26\n        /* \"#utility.yul\":6311:6314   */\n      dup4\n        /* \"#utility.yul\":6252:6319   */\n      tag_375\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6245:6319   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6421   */\n      tag_417\n        /* \"#utility.yul\":6417:6420   */\n      dup3\n        /* \"#utility.yul\":6328:6421   */\n      tag_418\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":6446:6448   */\n      0x40\n        /* \"#utility.yul\":6441:6444   */\n      dup3\n        /* \"#utility.yul\":6437:6449   */\n      add\n        /* \"#utility.yul\":6430:6449   */\n      swap1\n      pop\n        /* \"#utility.yul\":6089:6455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6461:6827   */\n    tag_419:\n        /* \"#utility.yul\":6603:6606   */\n      0x00\n        /* \"#utility.yul\":6624:6691   */\n      tag_421\n        /* \"#utility.yul\":6688:6690   */\n      0x1f\n        /* \"#utility.yul\":6683:6686   */\n      dup4\n        /* \"#utility.yul\":6624:6691   */\n      tag_375\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":6617:6691   */\n      swap2\n      pop\n        /* \"#utility.yul\":6700:6793   */\n      tag_422\n        /* \"#utility.yul\":6789:6792   */\n      dup3\n        /* \"#utility.yul\":6700:6793   */\n      tag_423\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6818:6820   */\n      0x20\n        /* \"#utility.yul\":6813:6816   */\n      dup3\n        /* \"#utility.yul\":6809:6821   */\n      add\n        /* \"#utility.yul\":6802:6821   */\n      swap1\n      pop\n        /* \"#utility.yul\":6461:6827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6833:7199   */\n    tag_424:\n        /* \"#utility.yul\":6975:6978   */\n      0x00\n        /* \"#utility.yul\":6996:7063   */\n      tag_426\n        /* \"#utility.yul\":7060:7062   */\n      0x20\n        /* \"#utility.yul\":7055:7058   */\n      dup4\n        /* \"#utility.yul\":6996:7063   */\n      tag_375\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6989:7063   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7165   */\n      tag_427\n        /* \"#utility.yul\":7161:7164   */\n      dup3\n        /* \"#utility.yul\":7072:7165   */\n      tag_428\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7190:7192   */\n      0x20\n        /* \"#utility.yul\":7185:7188   */\n      dup3\n        /* \"#utility.yul\":7181:7193   */\n      add\n        /* \"#utility.yul\":7174:7193   */\n      swap1\n      pop\n        /* \"#utility.yul\":6833:7199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7205:7571   */\n    tag_429:\n        /* \"#utility.yul\":7347:7350   */\n      0x00\n        /* \"#utility.yul\":7368:7435   */\n      tag_431\n        /* \"#utility.yul\":7432:7434   */\n      0x0d\n        /* \"#utility.yul\":7427:7430   */\n      dup4\n        /* \"#utility.yul\":7368:7435   */\n      tag_375\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7361:7435   */\n      swap2\n      pop\n        /* \"#utility.yul\":7444:7537   */\n      tag_432\n        /* \"#utility.yul\":7533:7536   */\n      dup3\n        /* \"#utility.yul\":7444:7537   */\n      tag_433\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7557:7560   */\n      dup3\n        /* \"#utility.yul\":7553:7565   */\n      add\n        /* \"#utility.yul\":7546:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7205:7571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7577:7943   */\n    tag_434:\n        /* \"#utility.yul\":7719:7722   */\n      0x00\n        /* \"#utility.yul\":7740:7807   */\n      tag_436\n        /* \"#utility.yul\":7804:7806   */\n      0x1d\n        /* \"#utility.yul\":7799:7802   */\n      dup4\n        /* \"#utility.yul\":7740:7807   */\n      tag_375\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":7733:7807   */\n      swap2\n      pop\n        /* \"#utility.yul\":7816:7909   */\n      tag_437\n        /* \"#utility.yul\":7905:7908   */\n      dup3\n        /* \"#utility.yul\":7816:7909   */\n      tag_438\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7934:7936   */\n      0x20\n        /* \"#utility.yul\":7929:7932   */\n      dup3\n        /* \"#utility.yul\":7925:7937   */\n      add\n        /* \"#utility.yul\":7918:7937   */\n      swap1\n      pop\n        /* \"#utility.yul\":7577:7943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7949:8315   */\n    tag_439:\n        /* \"#utility.yul\":8091:8094   */\n      0x00\n        /* \"#utility.yul\":8112:8179   */\n      tag_441\n        /* \"#utility.yul\":8176:8178   */\n      0x1a\n        /* \"#utility.yul\":8171:8174   */\n      dup4\n        /* \"#utility.yul\":8112:8179   */\n      tag_375\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8105:8179   */\n      swap2\n      pop\n        /* \"#utility.yul\":8188:8281   */\n      tag_442\n        /* \"#utility.yul\":8277:8280   */\n      dup3\n        /* \"#utility.yul\":8188:8281   */\n      tag_443\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":8306:8308   */\n      0x20\n        /* \"#utility.yul\":8301:8304   */\n      dup3\n        /* \"#utility.yul\":8297:8309   */\n      add\n        /* \"#utility.yul\":8290:8309   */\n      swap1\n      pop\n        /* \"#utility.yul\":7949:8315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8321:8687   */\n    tag_444:\n        /* \"#utility.yul\":8463:8466   */\n      0x00\n        /* \"#utility.yul\":8484:8551   */\n      tag_446\n        /* \"#utility.yul\":8548:8550   */\n      0x17\n        /* \"#utility.yul\":8543:8546   */\n      dup4\n        /* \"#utility.yul\":8484:8551   */\n      tag_375\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":8477:8551   */\n      swap2\n      pop\n        /* \"#utility.yul\":8560:8653   */\n      tag_447\n        /* \"#utility.yul\":8649:8652   */\n      dup3\n        /* \"#utility.yul\":8560:8653   */\n      tag_448\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":8678:8680   */\n      0x20\n        /* \"#utility.yul\":8673:8676   */\n      dup3\n        /* \"#utility.yul\":8669:8681   */\n      add\n        /* \"#utility.yul\":8662:8681   */\n      swap1\n      pop\n        /* \"#utility.yul\":8321:8687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8693:9059   */\n    tag_449:\n        /* \"#utility.yul\":8835:8838   */\n      0x00\n        /* \"#utility.yul\":8856:8923   */\n      tag_451\n        /* \"#utility.yul\":8920:8922   */\n      0x0d\n        /* \"#utility.yul\":8915:8918   */\n      dup4\n        /* \"#utility.yul\":8856:8923   */\n      tag_375\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8849:8923   */\n      swap2\n      pop\n        /* \"#utility.yul\":8932:9025   */\n      tag_452\n        /* \"#utility.yul\":9021:9024   */\n      dup3\n        /* \"#utility.yul\":8932:9025   */\n      tag_453\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":9050:9052   */\n      0x20\n        /* \"#utility.yul\":9045:9048   */\n      dup3\n        /* \"#utility.yul\":9041:9053   */\n      add\n        /* \"#utility.yul\":9034:9053   */\n      swap1\n      pop\n        /* \"#utility.yul\":8693:9059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9065:9431   */\n    tag_454:\n        /* \"#utility.yul\":9207:9210   */\n      0x00\n        /* \"#utility.yul\":9228:9295   */\n      tag_456\n        /* \"#utility.yul\":9292:9294   */\n      0x0d\n        /* \"#utility.yul\":9287:9290   */\n      dup4\n        /* \"#utility.yul\":9228:9295   */\n      tag_375\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":9221:9295   */\n      swap2\n      pop\n        /* \"#utility.yul\":9304:9397   */\n      tag_457\n        /* \"#utility.yul\":9393:9396   */\n      dup3\n        /* \"#utility.yul\":9304:9397   */\n      tag_458\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9422:9424   */\n      0x20\n        /* \"#utility.yul\":9417:9420   */\n      dup3\n        /* \"#utility.yul\":9413:9425   */\n      add\n        /* \"#utility.yul\":9406:9425   */\n      swap1\n      pop\n        /* \"#utility.yul\":9065:9431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9437:9555   */\n    tag_459:\n        /* \"#utility.yul\":9524:9548   */\n      tag_461\n        /* \"#utility.yul\":9542:9547   */\n      dup2\n        /* \"#utility.yul\":9524:9548   */\n      tag_462\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9519:9522   */\n      dup3\n        /* \"#utility.yul\":9512:9549   */\n      mstore\n        /* \"#utility.yul\":9437:9555   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9561:9832   */\n    tag_302:\n        /* \"#utility.yul\":9691:9694   */\n      0x00\n        /* \"#utility.yul\":9713:9806   */\n      tag_464\n        /* \"#utility.yul\":9802:9805   */\n      dup3\n        /* \"#utility.yul\":9793:9799   */\n      dup5\n        /* \"#utility.yul\":9713:9806   */\n      tag_358\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9706:9806   */\n      swap2\n      pop\n        /* \"#utility.yul\":9823:9826   */\n      dup2\n        /* \"#utility.yul\":9816:9826   */\n      swap1\n      pop\n        /* \"#utility.yul\":9561:9832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9838:10060   */\n    tag_58:\n        /* \"#utility.yul\":9931:9935   */\n      0x00\n        /* \"#utility.yul\":9969:9971   */\n      0x20\n        /* \"#utility.yul\":9958:9967   */\n      dup3\n        /* \"#utility.yul\":9954:9972   */\n      add\n        /* \"#utility.yul\":9946:9972   */\n      swap1\n      pop\n        /* \"#utility.yul\":9982:10053   */\n      tag_466\n        /* \"#utility.yul\":10050:10051   */\n      0x00\n        /* \"#utility.yul\":10039:10048   */\n      dup4\n        /* \"#utility.yul\":10035:10052   */\n      add\n        /* \"#utility.yul\":10026:10032   */\n      dup5\n        /* \"#utility.yul\":9982:10053   */\n      tag_354\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":9838:10060   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10066:10508   */\n    tag_277:\n        /* \"#utility.yul\":10215:10219   */\n      0x00\n        /* \"#utility.yul\":10253:10255   */\n      0x60\n        /* \"#utility.yul\":10242:10251   */\n      dup3\n        /* \"#utility.yul\":10238:10256   */\n      add\n        /* \"#utility.yul\":10230:10256   */\n      swap1\n      pop\n        /* \"#utility.yul\":10266:10337   */\n      tag_468\n        /* \"#utility.yul\":10334:10335   */\n      0x00\n        /* \"#utility.yul\":10323:10332   */\n      dup4\n        /* \"#utility.yul\":10319:10336   */\n      add\n        /* \"#utility.yul\":10310:10316   */\n      dup7\n        /* \"#utility.yul\":10266:10337   */\n      tag_354\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10347:10419   */\n      tag_469\n        /* \"#utility.yul\":10415:10417   */\n      0x20\n        /* \"#utility.yul\":10404:10413   */\n      dup4\n        /* \"#utility.yul\":10400:10418   */\n      add\n        /* \"#utility.yul\":10391:10397   */\n      dup6\n        /* \"#utility.yul\":10347:10419   */\n      tag_354\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10429:10501   */\n      tag_470\n        /* \"#utility.yul\":10497:10499   */\n      0x40\n        /* \"#utility.yul\":10486:10495   */\n      dup4\n        /* \"#utility.yul\":10482:10500   */\n      add\n        /* \"#utility.yul\":10473:10479   */\n      dup5\n        /* \"#utility.yul\":10429:10501   */\n      tag_459\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":10066:10508   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10846   */\n    tag_121:\n        /* \"#utility.yul\":10635:10639   */\n      0x00\n        /* \"#utility.yul\":10673:10675   */\n      0x40\n        /* \"#utility.yul\":10662:10671   */\n      dup3\n        /* \"#utility.yul\":10658:10676   */\n      add\n        /* \"#utility.yul\":10650:10676   */\n      swap1\n      pop\n        /* \"#utility.yul\":10686:10757   */\n      tag_472\n        /* \"#utility.yul\":10754:10755   */\n      0x00\n        /* \"#utility.yul\":10743:10752   */\n      dup4\n        /* \"#utility.yul\":10739:10756   */\n      add\n        /* \"#utility.yul\":10730:10736   */\n      dup6\n        /* \"#utility.yul\":10686:10757   */\n      tag_354\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10767:10839   */\n      tag_473\n        /* \"#utility.yul\":10835:10837   */\n      0x20\n        /* \"#utility.yul\":10824:10833   */\n      dup4\n        /* \"#utility.yul\":10820:10838   */\n      add\n        /* \"#utility.yul\":10811:10817   */\n      dup5\n        /* \"#utility.yul\":10767:10839   */\n      tag_459\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10514:10846   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10852:11102   */\n    tag_77:\n        /* \"#utility.yul\":10959:10963   */\n      0x00\n        /* \"#utility.yul\":10997:10999   */\n      0x20\n        /* \"#utility.yul\":10986:10995   */\n      dup3\n        /* \"#utility.yul\":10982:11000   */\n      add\n        /* \"#utility.yul\":10974:11000   */\n      swap1\n      pop\n        /* \"#utility.yul\":11010:11095   */\n      tag_475\n        /* \"#utility.yul\":11092:11093   */\n      0x00\n        /* \"#utility.yul\":11081:11090   */\n      dup4\n        /* \"#utility.yul\":11077:11094   */\n      add\n        /* \"#utility.yul\":11068:11074   */\n      dup5\n        /* \"#utility.yul\":11010:11095   */\n      tag_366\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10852:11102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11108:11421   */\n    tag_315:\n        /* \"#utility.yul\":11221:11225   */\n      0x00\n        /* \"#utility.yul\":11259:11261   */\n      0x20\n        /* \"#utility.yul\":11248:11257   */\n      dup3\n        /* \"#utility.yul\":11244:11262   */\n      add\n        /* \"#utility.yul\":11236:11262   */\n      swap1\n      pop\n        /* \"#utility.yul\":11308:11317   */\n      dup2\n        /* \"#utility.yul\":11302:11306   */\n      dup2\n        /* \"#utility.yul\":11298:11318   */\n      sub\n        /* \"#utility.yul\":11294:11295   */\n      0x00\n        /* \"#utility.yul\":11283:11292   */\n      dup4\n        /* \"#utility.yul\":11279:11296   */\n      add\n        /* \"#utility.yul\":11272:11319   */\n      mstore\n        /* \"#utility.yul\":11336:11414   */\n      tag_477\n        /* \"#utility.yul\":11409:11413   */\n      dup2\n        /* \"#utility.yul\":11400:11406   */\n      dup5\n        /* \"#utility.yul\":11336:11414   */\n      tag_370\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":11328:11414   */\n      swap1\n      pop\n        /* \"#utility.yul\":11108:11421   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11427:11846   */\n    tag_130:\n        /* \"#utility.yul\":11593:11597   */\n      0x00\n        /* \"#utility.yul\":11631:11633   */\n      0x20\n        /* \"#utility.yul\":11620:11629   */\n      dup3\n        /* \"#utility.yul\":11616:11634   */\n      add\n        /* \"#utility.yul\":11608:11634   */\n      swap1\n      pop\n        /* \"#utility.yul\":11680:11689   */\n      dup2\n        /* \"#utility.yul\":11674:11678   */\n      dup2\n        /* \"#utility.yul\":11670:11690   */\n      sub\n        /* \"#utility.yul\":11666:11667   */\n      0x00\n        /* \"#utility.yul\":11655:11664   */\n      dup4\n        /* \"#utility.yul\":11651:11668   */\n      add\n        /* \"#utility.yul\":11644:11691   */\n      mstore\n        /* \"#utility.yul\":11708:11839   */\n      tag_479\n        /* \"#utility.yul\":11834:11838   */\n      dup2\n        /* \"#utility.yul\":11708:11839   */\n      tag_379\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11700:11839   */\n      swap1\n      pop\n        /* \"#utility.yul\":11427:11846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11852:12271   */\n    tag_234:\n        /* \"#utility.yul\":12018:12022   */\n      0x00\n        /* \"#utility.yul\":12056:12058   */\n      0x20\n        /* \"#utility.yul\":12045:12054   */\n      dup3\n        /* \"#utility.yul\":12041:12059   */\n      add\n        /* \"#utility.yul\":12033:12059   */\n      swap1\n      pop\n        /* \"#utility.yul\":12105:12114   */\n      dup2\n        /* \"#utility.yul\":12099:12103   */\n      dup2\n        /* \"#utility.yul\":12095:12115   */\n      sub\n        /* \"#utility.yul\":12091:12092   */\n      0x00\n        /* \"#utility.yul\":12080:12089   */\n      dup4\n        /* \"#utility.yul\":12076:12093   */\n      add\n        /* \"#utility.yul\":12069:12116   */\n      mstore\n        /* \"#utility.yul\":12133:12264   */\n      tag_481\n        /* \"#utility.yul\":12259:12263   */\n      dup2\n        /* \"#utility.yul\":12133:12264   */\n      tag_384\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12125:12264   */\n      swap1\n      pop\n        /* \"#utility.yul\":11852:12271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12277:12696   */\n    tag_288:\n        /* \"#utility.yul\":12443:12447   */\n      0x00\n        /* \"#utility.yul\":12481:12483   */\n      0x20\n        /* \"#utility.yul\":12470:12479   */\n      dup3\n        /* \"#utility.yul\":12466:12484   */\n      add\n        /* \"#utility.yul\":12458:12484   */\n      swap1\n      pop\n        /* \"#utility.yul\":12530:12539   */\n      dup2\n        /* \"#utility.yul\":12524:12528   */\n      dup2\n        /* \"#utility.yul\":12520:12540   */\n      sub\n        /* \"#utility.yul\":12516:12517   */\n      0x00\n        /* \"#utility.yul\":12505:12514   */\n      dup4\n        /* \"#utility.yul\":12501:12518   */\n      add\n        /* \"#utility.yul\":12494:12541   */\n      mstore\n        /* \"#utility.yul\":12558:12689   */\n      tag_483\n        /* \"#utility.yul\":12684:12688   */\n      dup2\n        /* \"#utility.yul\":12558:12689   */\n      tag_389\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12550:12689   */\n      swap1\n      pop\n        /* \"#utility.yul\":12277:12696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12702:13121   */\n    tag_248:\n        /* \"#utility.yul\":12868:12872   */\n      0x00\n        /* \"#utility.yul\":12906:12908   */\n      0x20\n        /* \"#utility.yul\":12895:12904   */\n      dup3\n        /* \"#utility.yul\":12891:12909   */\n      add\n        /* \"#utility.yul\":12883:12909   */\n      swap1\n      pop\n        /* \"#utility.yul\":12955:12964   */\n      dup2\n        /* \"#utility.yul\":12949:12953   */\n      dup2\n        /* \"#utility.yul\":12945:12965   */\n      sub\n        /* \"#utility.yul\":12941:12942   */\n      0x00\n        /* \"#utility.yul\":12930:12939   */\n      dup4\n        /* \"#utility.yul\":12926:12943   */\n      add\n        /* \"#utility.yul\":12919:12966   */\n      mstore\n        /* \"#utility.yul\":12983:13114   */\n      tag_485\n        /* \"#utility.yul\":13109:13113   */\n      dup2\n        /* \"#utility.yul\":12983:13114   */\n      tag_394\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12975:13114   */\n      swap1\n      pop\n        /* \"#utility.yul\":12702:13121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13127:13546   */\n    tag_84:\n        /* \"#utility.yul\":13293:13297   */\n      0x00\n        /* \"#utility.yul\":13331:13333   */\n      0x20\n        /* \"#utility.yul\":13320:13329   */\n      dup3\n        /* \"#utility.yul\":13316:13334   */\n      add\n        /* \"#utility.yul\":13308:13334   */\n      swap1\n      pop\n        /* \"#utility.yul\":13380:13389   */\n      dup2\n        /* \"#utility.yul\":13374:13378   */\n      dup2\n        /* \"#utility.yul\":13370:13390   */\n      sub\n        /* \"#utility.yul\":13366:13367   */\n      0x00\n        /* \"#utility.yul\":13355:13364   */\n      dup4\n        /* \"#utility.yul\":13351:13368   */\n      add\n        /* \"#utility.yul\":13344:13391   */\n      mstore\n        /* \"#utility.yul\":13408:13539   */\n      tag_487\n        /* \"#utility.yul\":13534:13538   */\n      dup2\n        /* \"#utility.yul\":13408:13539   */\n      tag_399\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13400:13539   */\n      swap1\n      pop\n        /* \"#utility.yul\":13127:13546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13552:13971   */\n    tag_169:\n        /* \"#utility.yul\":13718:13722   */\n      0x00\n        /* \"#utility.yul\":13756:13758   */\n      0x20\n        /* \"#utility.yul\":13745:13754   */\n      dup3\n        /* \"#utility.yul\":13741:13759   */\n      add\n        /* \"#utility.yul\":13733:13759   */\n      swap1\n      pop\n        /* \"#utility.yul\":13805:13814   */\n      dup2\n        /* \"#utility.yul\":13799:13803   */\n      dup2\n        /* \"#utility.yul\":13795:13815   */\n      sub\n        /* \"#utility.yul\":13791:13792   */\n      0x00\n        /* \"#utility.yul\":13780:13789   */\n      dup4\n        /* \"#utility.yul\":13776:13793   */\n      add\n        /* \"#utility.yul\":13769:13816   */\n      mstore\n        /* \"#utility.yul\":13833:13964   */\n      tag_489\n        /* \"#utility.yul\":13959:13963   */\n      dup2\n        /* \"#utility.yul\":13833:13964   */\n      tag_404\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":13825:13964   */\n      swap1\n      pop\n        /* \"#utility.yul\":13552:13971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13977:14396   */\n    tag_295:\n        /* \"#utility.yul\":14143:14147   */\n      0x00\n        /* \"#utility.yul\":14181:14183   */\n      0x20\n        /* \"#utility.yul\":14170:14179   */\n      dup3\n        /* \"#utility.yul\":14166:14184   */\n      add\n        /* \"#utility.yul\":14158:14184   */\n      swap1\n      pop\n        /* \"#utility.yul\":14230:14239   */\n      dup2\n        /* \"#utility.yul\":14224:14228   */\n      dup2\n        /* \"#utility.yul\":14220:14240   */\n      sub\n        /* \"#utility.yul\":14216:14217   */\n      0x00\n        /* \"#utility.yul\":14205:14214   */\n      dup4\n        /* \"#utility.yul\":14201:14218   */\n      add\n        /* \"#utility.yul\":14194:14241   */\n      mstore\n        /* \"#utility.yul\":14258:14389   */\n      tag_491\n        /* \"#utility.yul\":14384:14388   */\n      dup2\n        /* \"#utility.yul\":14258:14389   */\n      tag_409\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14250:14389   */\n      swap1\n      pop\n        /* \"#utility.yul\":13977:14396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14402:14821   */\n    tag_199:\n        /* \"#utility.yul\":14568:14572   */\n      0x00\n        /* \"#utility.yul\":14606:14608   */\n      0x20\n        /* \"#utility.yul\":14595:14604   */\n      dup3\n        /* \"#utility.yul\":14591:14609   */\n      add\n        /* \"#utility.yul\":14583:14609   */\n      swap1\n      pop\n        /* \"#utility.yul\":14655:14664   */\n      dup2\n        /* \"#utility.yul\":14649:14653   */\n      dup2\n        /* \"#utility.yul\":14645:14665   */\n      sub\n        /* \"#utility.yul\":14641:14642   */\n      0x00\n        /* \"#utility.yul\":14630:14639   */\n      dup4\n        /* \"#utility.yul\":14626:14643   */\n      add\n        /* \"#utility.yul\":14619:14666   */\n      mstore\n        /* \"#utility.yul\":14683:14814   */\n      tag_493\n        /* \"#utility.yul\":14809:14813   */\n      dup2\n        /* \"#utility.yul\":14683:14814   */\n      tag_414\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14675:14814   */\n      swap1\n      pop\n        /* \"#utility.yul\":14402:14821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14827:15246   */\n    tag_81:\n        /* \"#utility.yul\":14993:14997   */\n      0x00\n        /* \"#utility.yul\":15031:15033   */\n      0x20\n        /* \"#utility.yul\":15020:15029   */\n      dup3\n        /* \"#utility.yul\":15016:15034   */\n      add\n        /* \"#utility.yul\":15008:15034   */\n      swap1\n      pop\n        /* \"#utility.yul\":15080:15089   */\n      dup2\n        /* \"#utility.yul\":15074:15078   */\n      dup2\n        /* \"#utility.yul\":15070:15090   */\n      sub\n        /* \"#utility.yul\":15066:15067   */\n      0x00\n        /* \"#utility.yul\":15055:15064   */\n      dup4\n        /* \"#utility.yul\":15051:15068   */\n      add\n        /* \"#utility.yul\":15044:15091   */\n      mstore\n        /* \"#utility.yul\":15108:15239   */\n      tag_495\n        /* \"#utility.yul\":15234:15238   */\n      dup2\n        /* \"#utility.yul\":15108:15239   */\n      tag_419\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":15100:15239   */\n      swap1\n      pop\n        /* \"#utility.yul\":14827:15246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15252:15671   */\n    tag_151:\n        /* \"#utility.yul\":15418:15422   */\n      0x00\n        /* \"#utility.yul\":15456:15458   */\n      0x20\n        /* \"#utility.yul\":15445:15454   */\n      dup3\n        /* \"#utility.yul\":15441:15459   */\n      add\n        /* \"#utility.yul\":15433:15459   */\n      swap1\n      pop\n        /* \"#utility.yul\":15505:15514   */\n      dup2\n        /* \"#utility.yul\":15499:15503   */\n      dup2\n        /* \"#utility.yul\":15495:15515   */\n      sub\n        /* \"#utility.yul\":15491:15492   */\n      0x00\n        /* \"#utility.yul\":15480:15489   */\n      dup4\n        /* \"#utility.yul\":15476:15493   */\n      add\n        /* \"#utility.yul\":15469:15516   */\n      mstore\n        /* \"#utility.yul\":15533:15664   */\n      tag_497\n        /* \"#utility.yul\":15659:15663   */\n      dup2\n        /* \"#utility.yul\":15533:15664   */\n      tag_424\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":15525:15664   */\n      swap1\n      pop\n        /* \"#utility.yul\":15252:15671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15677:16096   */\n    tag_220:\n        /* \"#utility.yul\":15843:15847   */\n      0x00\n        /* \"#utility.yul\":15881:15883   */\n      0x20\n        /* \"#utility.yul\":15870:15879   */\n      dup3\n        /* \"#utility.yul\":15866:15884   */\n      add\n        /* \"#utility.yul\":15858:15884   */\n      swap1\n      pop\n        /* \"#utility.yul\":15930:15939   */\n      dup2\n        /* \"#utility.yul\":15924:15928   */\n      dup2\n        /* \"#utility.yul\":15920:15940   */\n      sub\n        /* \"#utility.yul\":15916:15917   */\n      0x00\n        /* \"#utility.yul\":15905:15914   */\n      dup4\n        /* \"#utility.yul\":15901:15918   */\n      add\n        /* \"#utility.yul\":15894:15941   */\n      mstore\n        /* \"#utility.yul\":15958:16089   */\n      tag_499\n        /* \"#utility.yul\":16084:16088   */\n      dup2\n        /* \"#utility.yul\":15958:16089   */\n      tag_429\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":15950:16089   */\n      swap1\n      pop\n        /* \"#utility.yul\":15677:16096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16102:16521   */\n    tag_300:\n        /* \"#utility.yul\":16268:16272   */\n      0x00\n        /* \"#utility.yul\":16306:16308   */\n      0x20\n        /* \"#utility.yul\":16295:16304   */\n      dup3\n        /* \"#utility.yul\":16291:16309   */\n      add\n        /* \"#utility.yul\":16283:16309   */\n      swap1\n      pop\n        /* \"#utility.yul\":16355:16364   */\n      dup2\n        /* \"#utility.yul\":16349:16353   */\n      dup2\n        /* \"#utility.yul\":16345:16365   */\n      sub\n        /* \"#utility.yul\":16341:16342   */\n      0x00\n        /* \"#utility.yul\":16330:16339   */\n      dup4\n        /* \"#utility.yul\":16326:16343   */\n      add\n        /* \"#utility.yul\":16319:16366   */\n      mstore\n        /* \"#utility.yul\":16383:16514   */\n      tag_501\n        /* \"#utility.yul\":16509:16513   */\n      dup2\n        /* \"#utility.yul\":16383:16514   */\n      tag_434\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":16375:16514   */\n      swap1\n      pop\n        /* \"#utility.yul\":16102:16521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16527:16946   */\n    tag_210:\n        /* \"#utility.yul\":16693:16697   */\n      0x00\n        /* \"#utility.yul\":16731:16733   */\n      0x20\n        /* \"#utility.yul\":16720:16729   */\n      dup3\n        /* \"#utility.yul\":16716:16734   */\n      add\n        /* \"#utility.yul\":16708:16734   */\n      swap1\n      pop\n        /* \"#utility.yul\":16780:16789   */\n      dup2\n        /* \"#utility.yul\":16774:16778   */\n      dup2\n        /* \"#utility.yul\":16770:16790   */\n      sub\n        /* \"#utility.yul\":16766:16767   */\n      0x00\n        /* \"#utility.yul\":16755:16764   */\n      dup4\n        /* \"#utility.yul\":16751:16768   */\n      add\n        /* \"#utility.yul\":16744:16791   */\n      mstore\n        /* \"#utility.yul\":16808:16939   */\n      tag_503\n        /* \"#utility.yul\":16934:16938   */\n      dup2\n        /* \"#utility.yul\":16808:16939   */\n      tag_439\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":16800:16939   */\n      swap1\n      pop\n        /* \"#utility.yul\":16527:16946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16952:17371   */\n    tag_180:\n        /* \"#utility.yul\":17118:17122   */\n      0x00\n        /* \"#utility.yul\":17156:17158   */\n      0x20\n        /* \"#utility.yul\":17145:17154   */\n      dup3\n        /* \"#utility.yul\":17141:17159   */\n      add\n        /* \"#utility.yul\":17133:17159   */\n      swap1\n      pop\n        /* \"#utility.yul\":17205:17214   */\n      dup2\n        /* \"#utility.yul\":17199:17203   */\n      dup2\n        /* \"#utility.yul\":17195:17215   */\n      sub\n        /* \"#utility.yul\":17191:17192   */\n      0x00\n        /* \"#utility.yul\":17180:17189   */\n      dup4\n        /* \"#utility.yul\":17176:17193   */\n      add\n        /* \"#utility.yul\":17169:17216   */\n      mstore\n        /* \"#utility.yul\":17233:17364   */\n      tag_505\n        /* \"#utility.yul\":17359:17363   */\n      dup2\n        /* \"#utility.yul\":17233:17364   */\n      tag_444\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":17225:17364   */\n      swap1\n      pop\n        /* \"#utility.yul\":16952:17371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17377:17796   */\n    tag_155:\n        /* \"#utility.yul\":17543:17547   */\n      0x00\n        /* \"#utility.yul\":17581:17583   */\n      0x20\n        /* \"#utility.yul\":17570:17579   */\n      dup3\n        /* \"#utility.yul\":17566:17584   */\n      add\n        /* \"#utility.yul\":17558:17584   */\n      swap1\n      pop\n        /* \"#utility.yul\":17630:17639   */\n      dup2\n        /* \"#utility.yul\":17624:17628   */\n      dup2\n        /* \"#utility.yul\":17620:17640   */\n      sub\n        /* \"#utility.yul\":17616:17617   */\n      0x00\n        /* \"#utility.yul\":17605:17614   */\n      dup4\n        /* \"#utility.yul\":17601:17618   */\n      add\n        /* \"#utility.yul\":17594:17641   */\n      mstore\n        /* \"#utility.yul\":17658:17789   */\n      tag_507\n        /* \"#utility.yul\":17784:17788   */\n      dup2\n        /* \"#utility.yul\":17658:17789   */\n      tag_449\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":17650:17789   */\n      swap1\n      pop\n        /* \"#utility.yul\":17377:17796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17802:18221   */\n    tag_166:\n        /* \"#utility.yul\":17968:17972   */\n      0x00\n        /* \"#utility.yul\":18006:18008   */\n      0x20\n        /* \"#utility.yul\":17995:18004   */\n      dup3\n        /* \"#utility.yul\":17991:18009   */\n      add\n        /* \"#utility.yul\":17983:18009   */\n      swap1\n      pop\n        /* \"#utility.yul\":18055:18064   */\n      dup2\n        /* \"#utility.yul\":18049:18053   */\n      dup2\n        /* \"#utility.yul\":18045:18065   */\n      sub\n        /* \"#utility.yul\":18041:18042   */\n      0x00\n        /* \"#utility.yul\":18030:18039   */\n      dup4\n        /* \"#utility.yul\":18026:18043   */\n      add\n        /* \"#utility.yul\":18019:18066   */\n      mstore\n        /* \"#utility.yul\":18083:18214   */\n      tag_509\n        /* \"#utility.yul\":18209:18213   */\n      dup2\n        /* \"#utility.yul\":18083:18214   */\n      tag_454\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":18075:18214   */\n      swap1\n      pop\n        /* \"#utility.yul\":17802:18221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18227:18449   */\n    tag_30:\n        /* \"#utility.yul\":18320:18324   */\n      0x00\n        /* \"#utility.yul\":18358:18360   */\n      0x20\n        /* \"#utility.yul\":18347:18356   */\n      dup3\n        /* \"#utility.yul\":18343:18361   */\n      add\n        /* \"#utility.yul\":18335:18361   */\n      swap1\n      pop\n        /* \"#utility.yul\":18371:18442   */\n      tag_511\n        /* \"#utility.yul\":18439:18440   */\n      0x00\n        /* \"#utility.yul\":18428:18437   */\n      dup4\n        /* \"#utility.yul\":18424:18441   */\n      add\n        /* \"#utility.yul\":18415:18421   */\n      dup5\n        /* \"#utility.yul\":18371:18442   */\n      tag_459\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":18227:18449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18536:18634   */\n    tag_361:\n        /* \"#utility.yul\":18587:18593   */\n      0x00\n        /* \"#utility.yul\":18621:18626   */\n      dup2\n        /* \"#utility.yul\":18615:18627   */\n      mload\n        /* \"#utility.yul\":18605:18627   */\n      swap1\n      pop\n        /* \"#utility.yul\":18536:18634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18640:18739   */\n    tag_373:\n        /* \"#utility.yul\":18692:18698   */\n      0x00\n        /* \"#utility.yul\":18726:18731   */\n      dup2\n        /* \"#utility.yul\":18720:18732   */\n      mload\n        /* \"#utility.yul\":18710:18732   */\n      swap1\n      pop\n        /* \"#utility.yul\":18640:18739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18745:18892   */\n    tag_363:\n        /* \"#utility.yul\":18846:18857   */\n      0x00\n        /* \"#utility.yul\":18883:18886   */\n      dup2\n        /* \"#utility.yul\":18868:18886   */\n      swap1\n      pop\n        /* \"#utility.yul\":18745:18892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18898:19067   */\n    tag_375:\n        /* \"#utility.yul\":18982:18993   */\n      0x00\n        /* \"#utility.yul\":19016:19022   */\n      dup3\n        /* \"#utility.yul\":19011:19014   */\n      dup3\n        /* \"#utility.yul\":19004:19023   */\n      mstore\n        /* \"#utility.yul\":19056:19060   */\n      0x20\n        /* \"#utility.yul\":19051:19054   */\n      dup3\n        /* \"#utility.yul\":19047:19061   */\n      add\n        /* \"#utility.yul\":19032:19061   */\n      swap1\n      pop\n        /* \"#utility.yul\":18898:19067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19073:19378   */\n    tag_266:\n        /* \"#utility.yul\":19113:19116   */\n      0x00\n        /* \"#utility.yul\":19132:19152   */\n      tag_519\n        /* \"#utility.yul\":19150:19151   */\n      dup3\n        /* \"#utility.yul\":19132:19152   */\n      tag_462\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":19127:19152   */\n      swap2\n      pop\n        /* \"#utility.yul\":19166:19186   */\n      tag_520\n        /* \"#utility.yul\":19184:19185   */\n      dup4\n        /* \"#utility.yul\":19166:19186   */\n      tag_462\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":19161:19186   */\n      swap3\n      pop\n        /* \"#utility.yul\":19320:19321   */\n      dup3\n        /* \"#utility.yul\":19252:19318   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19248:19322   */\n      sub\n        /* \"#utility.yul\":19245:19246   */\n      dup3\n        /* \"#utility.yul\":19242:19323   */\n      gt\n        /* \"#utility.yul\":19239:19346   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":19326:19344   */\n      tag_522\n      tag_523\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":19239:19346   */\n    tag_521:\n        /* \"#utility.yul\":19370:19371   */\n      dup3\n        /* \"#utility.yul\":19367:19368   */\n      dup3\n        /* \"#utility.yul\":19363:19372   */\n      add\n        /* \"#utility.yul\":19356:19372   */\n      swap1\n      pop\n        /* \"#utility.yul\":19073:19378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19384:19569   */\n    tag_263:\n        /* \"#utility.yul\":19424:19425   */\n      0x00\n        /* \"#utility.yul\":19441:19461   */\n      tag_525\n        /* \"#utility.yul\":19459:19460   */\n      dup3\n        /* \"#utility.yul\":19441:19461   */\n      tag_462\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":19436:19461   */\n      swap2\n      pop\n        /* \"#utility.yul\":19475:19495   */\n      tag_526\n        /* \"#utility.yul\":19493:19494   */\n      dup4\n        /* \"#utility.yul\":19475:19495   */\n      tag_462\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":19470:19495   */\n      swap3\n      pop\n        /* \"#utility.yul\":19514:19515   */\n      dup3\n        /* \"#utility.yul\":19504:19539   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":19519:19537   */\n      tag_528\n      tag_529\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":19504:19539   */\n    tag_527:\n        /* \"#utility.yul\":19561:19562   */\n      dup3\n        /* \"#utility.yul\":19558:19559   */\n      dup3\n        /* \"#utility.yul\":19554:19563   */\n      div\n        /* \"#utility.yul\":19549:19563   */\n      swap1\n      pop\n        /* \"#utility.yul\":19384:19569   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19575:19923   */\n    tag_269:\n        /* \"#utility.yul\":19615:19622   */\n      0x00\n        /* \"#utility.yul\":19638:19658   */\n      tag_531\n        /* \"#utility.yul\":19656:19657   */\n      dup3\n        /* \"#utility.yul\":19638:19658   */\n      tag_462\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":19633:19658   */\n      swap2\n      pop\n        /* \"#utility.yul\":19672:19692   */\n      tag_532\n        /* \"#utility.yul\":19690:19691   */\n      dup4\n        /* \"#utility.yul\":19672:19692   */\n      tag_462\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":19667:19692   */\n      swap3\n      pop\n        /* \"#utility.yul\":19860:19861   */\n      dup2\n        /* \"#utility.yul\":19792:19858   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19788:19862   */\n      div\n        /* \"#utility.yul\":19785:19786   */\n      dup4\n        /* \"#utility.yul\":19782:19863   */\n      gt\n        /* \"#utility.yul\":19777:19778   */\n      dup3\n        /* \"#utility.yul\":19770:19779   */\n      iszero\n        /* \"#utility.yul\":19763:19780   */\n      iszero\n        /* \"#utility.yul\":19759:19864   */\n      and\n        /* \"#utility.yul\":19756:19887   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":19867:19885   */\n      tag_534\n      tag_523\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":19756:19887   */\n    tag_533:\n        /* \"#utility.yul\":19915:19916   */\n      dup3\n        /* \"#utility.yul\":19912:19913   */\n      dup3\n        /* \"#utility.yul\":19908:19917   */\n      mul\n        /* \"#utility.yul\":19897:19917   */\n      swap1\n      pop\n        /* \"#utility.yul\":19575:19923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19929:20120   */\n    tag_260:\n        /* \"#utility.yul\":19969:19973   */\n      0x00\n        /* \"#utility.yul\":19989:20009   */\n      tag_536\n        /* \"#utility.yul\":20007:20008   */\n      dup3\n        /* \"#utility.yul\":19989:20009   */\n      tag_462\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":19984:20009   */\n      swap2\n      pop\n        /* \"#utility.yul\":20023:20043   */\n      tag_537\n        /* \"#utility.yul\":20041:20042   */\n      dup4\n        /* \"#utility.yul\":20023:20043   */\n      tag_462\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":20018:20043   */\n      swap3\n      pop\n        /* \"#utility.yul\":20062:20063   */\n      dup3\n        /* \"#utility.yul\":20059:20060   */\n      dup3\n        /* \"#utility.yul\":20056:20064   */\n      lt\n        /* \"#utility.yul\":20053:20087   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":20067:20085   */\n      tag_539\n      tag_523\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":20053:20087   */\n    tag_538:\n        /* \"#utility.yul\":20112:20113   */\n      dup3\n        /* \"#utility.yul\":20109:20110   */\n      dup3\n        /* \"#utility.yul\":20105:20114   */\n      sub\n        /* \"#utility.yul\":20097:20114   */\n      swap1\n      pop\n        /* \"#utility.yul\":19929:20120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20126:20222   */\n    tag_357:\n        /* \"#utility.yul\":20163:20170   */\n      0x00\n        /* \"#utility.yul\":20192:20216   */\n      tag_541\n        /* \"#utility.yul\":20210:20215   */\n      dup3\n        /* \"#utility.yul\":20192:20216   */\n      tag_542\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":20181:20216   */\n      swap1\n      pop\n        /* \"#utility.yul\":20126:20222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20228:20318   */\n    tag_543:\n        /* \"#utility.yul\":20262:20269   */\n      0x00\n        /* \"#utility.yul\":20305:20310   */\n      dup2\n        /* \"#utility.yul\":20298:20311   */\n      iszero\n        /* \"#utility.yul\":20291:20312   */\n      iszero\n        /* \"#utility.yul\":20280:20312   */\n      swap1\n      pop\n        /* \"#utility.yul\":20228:20318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20324:20450   */\n    tag_542:\n        /* \"#utility.yul\":20361:20368   */\n      0x00\n        /* \"#utility.yul\":20401:20443   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20394:20399   */\n      dup3\n        /* \"#utility.yul\":20390:20444   */\n      and\n        /* \"#utility.yul\":20379:20444   */\n      swap1\n      pop\n        /* \"#utility.yul\":20324:20450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20456:20533   */\n    tag_462:\n        /* \"#utility.yul\":20493:20500   */\n      0x00\n        /* \"#utility.yul\":20522:20527   */\n      dup2\n        /* \"#utility.yul\":20511:20527   */\n      swap1\n      pop\n        /* \"#utility.yul\":20456:20533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20539:20679   */\n    tag_369:\n        /* \"#utility.yul\":20603:20612   */\n      0x00\n        /* \"#utility.yul\":20636:20673   */\n      tag_548\n        /* \"#utility.yul\":20667:20672   */\n      dup3\n        /* \"#utility.yul\":20636:20673   */\n      tag_549\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":20623:20673   */\n      swap1\n      pop\n        /* \"#utility.yul\":20539:20679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20685:20811   */\n    tag_549:\n        /* \"#utility.yul\":20735:20744   */\n      0x00\n        /* \"#utility.yul\":20768:20805   */\n      tag_551\n        /* \"#utility.yul\":20799:20804   */\n      dup3\n        /* \"#utility.yul\":20768:20805   */\n      tag_552\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":20755:20805   */\n      swap1\n      pop\n        /* \"#utility.yul\":20685:20811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20817:20930   */\n    tag_552:\n        /* \"#utility.yul\":20867:20876   */\n      0x00\n        /* \"#utility.yul\":20900:20924   */\n      tag_554\n        /* \"#utility.yul\":20918:20923   */\n      dup3\n        /* \"#utility.yul\":20900:20924   */\n      tag_542\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":20887:20924   */\n      swap1\n      pop\n        /* \"#utility.yul\":20817:20930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20936:21243   */\n    tag_365:\n        /* \"#utility.yul\":21004:21005   */\n      0x00\n        /* \"#utility.yul\":21014:21127   */\n    tag_556:\n        /* \"#utility.yul\":21028:21034   */\n      dup4\n        /* \"#utility.yul\":21025:21026   */\n      dup2\n        /* \"#utility.yul\":21022:21035   */\n      lt\n        /* \"#utility.yul\":21014:21127   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":21113:21114   */\n      dup1\n        /* \"#utility.yul\":21108:21111   */\n      dup3\n        /* \"#utility.yul\":21104:21115   */\n      add\n        /* \"#utility.yul\":21098:21116   */\n      mload\n        /* \"#utility.yul\":21094:21095   */\n      dup2\n        /* \"#utility.yul\":21089:21092   */\n      dup5\n        /* \"#utility.yul\":21085:21096   */\n      add\n        /* \"#utility.yul\":21078:21117   */\n      mstore\n        /* \"#utility.yul\":21050:21052   */\n      0x20\n        /* \"#utility.yul\":21047:21048   */\n      dup2\n        /* \"#utility.yul\":21043:21053   */\n      add\n        /* \"#utility.yul\":21038:21053   */\n      swap1\n      pop\n        /* \"#utility.yul\":21014:21127   */\n      jump(tag_556)\n    tag_558:\n        /* \"#utility.yul\":21145:21151   */\n      dup4\n        /* \"#utility.yul\":21142:21143   */\n      dup2\n        /* \"#utility.yul\":21139:21152   */\n      gt\n        /* \"#utility.yul\":21136:21237   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":21225:21226   */\n      0x00\n        /* \"#utility.yul\":21216:21222   */\n      dup5\n        /* \"#utility.yul\":21211:21214   */\n      dup5\n        /* \"#utility.yul\":21207:21223   */\n      add\n        /* \"#utility.yul\":21200:21227   */\n      mstore\n        /* \"#utility.yul\":21136:21237   */\n    tag_559:\n        /* \"#utility.yul\":20985:21243   */\n      pop\n        /* \"#utility.yul\":20936:21243   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21249:21425   */\n    tag_109:\n        /* \"#utility.yul\":21281:21282   */\n      0x00\n        /* \"#utility.yul\":21298:21318   */\n      tag_561\n        /* \"#utility.yul\":21316:21317   */\n      dup3\n        /* \"#utility.yul\":21298:21318   */\n      tag_462\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":21293:21318   */\n      swap2\n      pop\n        /* \"#utility.yul\":21332:21352   */\n      tag_562\n        /* \"#utility.yul\":21350:21351   */\n      dup4\n        /* \"#utility.yul\":21332:21352   */\n      tag_462\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":21327:21352   */\n      swap3\n      pop\n        /* \"#utility.yul\":21371:21372   */\n      dup3\n        /* \"#utility.yul\":21361:21396   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":21376:21394   */\n      tag_564\n      tag_529\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":21361:21396   */\n    tag_563:\n        /* \"#utility.yul\":21417:21418   */\n      dup3\n        /* \"#utility.yul\":21414:21415   */\n      dup3\n        /* \"#utility.yul\":21410:21419   */\n      mod\n        /* \"#utility.yul\":21405:21419   */\n      swap1\n      pop\n        /* \"#utility.yul\":21249:21425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21431:21611   */\n    tag_523:\n        /* \"#utility.yul\":21479:21556   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21476:21477   */\n      0x00\n        /* \"#utility.yul\":21469:21557   */\n      mstore\n        /* \"#utility.yul\":21576:21580   */\n      0x11\n        /* \"#utility.yul\":21573:21574   */\n      0x04\n        /* \"#utility.yul\":21566:21581   */\n      mstore\n        /* \"#utility.yul\":21600:21604   */\n      0x24\n        /* \"#utility.yul\":21597:21598   */\n      0x00\n        /* \"#utility.yul\":21590:21605   */\n      revert\n        /* \"#utility.yul\":21617:21797   */\n    tag_529:\n        /* \"#utility.yul\":21665:21742   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21662:21663   */\n      0x00\n        /* \"#utility.yul\":21655:21743   */\n      mstore\n        /* \"#utility.yul\":21762:21766   */\n      0x12\n        /* \"#utility.yul\":21759:21760   */\n      0x04\n        /* \"#utility.yul\":21752:21767   */\n      mstore\n        /* \"#utility.yul\":21786:21790   */\n      0x24\n        /* \"#utility.yul\":21783:21784   */\n      0x00\n        /* \"#utility.yul\":21776:21791   */\n      revert\n        /* \"#utility.yul\":21926:22043   */\n    tag_335:\n        /* \"#utility.yul\":22035:22036   */\n      0x00\n        /* \"#utility.yul\":22032:22033   */\n      dup1\n        /* \"#utility.yul\":22025:22037   */\n      revert\n        /* \"#utility.yul\":22049:22151   */\n    tag_378:\n        /* \"#utility.yul\":22090:22096   */\n      0x00\n        /* \"#utility.yul\":22141:22143   */\n      0x1f\n        /* \"#utility.yul\":22137:22144   */\n      not\n        /* \"#utility.yul\":22132:22134   */\n      0x1f\n        /* \"#utility.yul\":22125:22130   */\n      dup4\n        /* \"#utility.yul\":22121:22135   */\n      add\n        /* \"#utility.yul\":22117:22145   */\n      and\n        /* \"#utility.yul\":22107:22145   */\n      swap1\n      pop\n        /* \"#utility.yul\":22049:22151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22157:22323   */\n    tag_383:\n        /* \"#utility.yul\":22297:22315   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":22293:22294   */\n      0x00\n        /* \"#utility.yul\":22285:22291   */\n      dup3\n        /* \"#utility.yul\":22281:22295   */\n      add\n        /* \"#utility.yul\":22274:22316   */\n      mstore\n        /* \"#utility.yul\":22157:22323   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22329:22500   */\n    tag_388:\n        /* \"#utility.yul\":22469:22492   */\n      0x4572726f723a20696e76616c6964207374616b65720000000000000000000000\n        /* \"#utility.yul\":22465:22466   */\n      0x00\n        /* \"#utility.yul\":22457:22463   */\n      dup3\n        /* \"#utility.yul\":22453:22467   */\n      add\n        /* \"#utility.yul\":22446:22493   */\n      mstore\n        /* \"#utility.yul\":22329:22500   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22506:22735   */\n    tag_393:\n        /* \"#utility.yul\":22646:22680   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":22642:22643   */\n      0x00\n        /* \"#utility.yul\":22634:22640   */\n      dup3\n        /* \"#utility.yul\":22630:22644   */\n      add\n        /* \"#utility.yul\":22623:22681   */\n      mstore\n        /* \"#utility.yul\":22715:22727   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22710:22712   */\n      0x20\n        /* \"#utility.yul\":22702:22708   */\n      dup3\n        /* \"#utility.yul\":22698:22713   */\n      add\n        /* \"#utility.yul\":22691:22728   */\n      mstore\n        /* \"#utility.yul\":22506:22735   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22741:22966   */\n    tag_398:\n        /* \"#utility.yul\":22881:22915   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":22877:22878   */\n      0x00\n        /* \"#utility.yul\":22869:22875   */\n      dup3\n        /* \"#utility.yul\":22865:22879   */\n      add\n        /* \"#utility.yul\":22858:22916   */\n      mstore\n        /* \"#utility.yul\":22950:22958   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22945:22947   */\n      0x20\n        /* \"#utility.yul\":22937:22943   */\n      dup3\n        /* \"#utility.yul\":22933:22948   */\n      add\n        /* \"#utility.yul\":22926:22959   */\n      mstore\n        /* \"#utility.yul\":22741:22966   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22972:23136   */\n    tag_403:\n        /* \"#utility.yul\":23112:23128   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":23108:23109   */\n      0x00\n        /* \"#utility.yul\":23100:23106   */\n      dup3\n        /* \"#utility.yul\":23096:23110   */\n      add\n        /* \"#utility.yul\":23089:23129   */\n      mstore\n        /* \"#utility.yul\":22972:23136   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23142:23307   */\n    tag_408:\n        /* \"#utility.yul\":23282:23299   */\n      0x416c726561647920737461727465640000000000000000000000000000000000\n        /* \"#utility.yul\":23278:23279   */\n      0x00\n        /* \"#utility.yul\":23270:23276   */\n      dup3\n        /* \"#utility.yul\":23266:23280   */\n      add\n        /* \"#utility.yul\":23259:23300   */\n      mstore\n        /* \"#utility.yul\":23142:23307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23313:23538   */\n    tag_413:\n        /* \"#utility.yul\":23453:23487   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":23449:23450   */\n      0x00\n        /* \"#utility.yul\":23441:23447   */\n      dup3\n        /* \"#utility.yul\":23437:23451   */\n      add\n        /* \"#utility.yul\":23430:23488   */\n      mstore\n        /* \"#utility.yul\":23522:23530   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23517:23519   */\n      0x20\n        /* \"#utility.yul\":23509:23515   */\n      dup3\n        /* \"#utility.yul\":23505:23520   */\n      add\n        /* \"#utility.yul\":23498:23531   */\n      mstore\n        /* \"#utility.yul\":23313:23538   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23544:23769   */\n    tag_418:\n        /* \"#utility.yul\":23684:23718   */\n      0x496e76616c696420416464726573732e20416464726573732063616e27742062\n        /* \"#utility.yul\":23680:23681   */\n      0x00\n        /* \"#utility.yul\":23672:23678   */\n      dup3\n        /* \"#utility.yul\":23668:23682   */\n      add\n        /* \"#utility.yul\":23661:23719   */\n      mstore\n        /* \"#utility.yul\":23753:23761   */\n      0x65207a65726f0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23748:23750   */\n      0x20\n        /* \"#utility.yul\":23740:23746   */\n      dup3\n        /* \"#utility.yul\":23736:23751   */\n      add\n        /* \"#utility.yul\":23729:23762   */\n      mstore\n        /* \"#utility.yul\":23544:23769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23775:23956   */\n    tag_423:\n        /* \"#utility.yul\":23915:23948   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":23911:23912   */\n      0x00\n        /* \"#utility.yul\":23903:23909   */\n      dup3\n        /* \"#utility.yul\":23899:23913   */\n      add\n        /* \"#utility.yul\":23892:23949   */\n      mstore\n        /* \"#utility.yul\":23775:23956   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23962:24144   */\n    tag_428:\n        /* \"#utility.yul\":24102:24136   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":24098:24099   */\n      0x00\n        /* \"#utility.yul\":24090:24096   */\n      dup3\n        /* \"#utility.yul\":24086:24100   */\n      add\n        /* \"#utility.yul\":24079:24137   */\n      mstore\n        /* \"#utility.yul\":23962:24144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24150:24313   */\n    tag_433:\n        /* \"#utility.yul\":24290:24305   */\n      0x496e76616c69642076616c756500000000000000000000000000000000000000\n        /* \"#utility.yul\":24286:24287   */\n      0x00\n        /* \"#utility.yul\":24278:24284   */\n      dup3\n        /* \"#utility.yul\":24274:24288   */\n      add\n        /* \"#utility.yul\":24267:24306   */\n      mstore\n        /* \"#utility.yul\":24150:24313   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24319:24498   */\n    tag_438:\n        /* \"#utility.yul\":24459:24490   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":24455:24456   */\n      0x00\n        /* \"#utility.yul\":24447:24453   */\n      dup3\n        /* \"#utility.yul\":24443:24457   */\n      add\n        /* \"#utility.yul\":24436:24491   */\n      mstore\n        /* \"#utility.yul\":24319:24498   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24504:24680   */\n    tag_443:\n        /* \"#utility.yul\":24644:24672   */\n      0x496e76616c696420556e7374616b696e67204665652052617465000000000000\n        /* \"#utility.yul\":24640:24641   */\n      0x00\n        /* \"#utility.yul\":24632:24638   */\n      dup3\n        /* \"#utility.yul\":24628:24642   */\n      add\n        /* \"#utility.yul\":24621:24673   */\n      mstore\n        /* \"#utility.yul\":24504:24680   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24686:24859   */\n    tag_448:\n        /* \"#utility.yul\":24826:24851   */\n      0x496e76616c6964204c6f636b7570204475726174696f6e000000000000000000\n        /* \"#utility.yul\":24822:24823   */\n      0x00\n        /* \"#utility.yul\":24814:24820   */\n      dup3\n        /* \"#utility.yul\":24810:24824   */\n      add\n        /* \"#utility.yul\":24803:24852   */\n      mstore\n        /* \"#utility.yul\":24686:24859   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24865:25028   */\n    tag_453:\n        /* \"#utility.yul\":25005:25020   */\n      0x43616e2774206265207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":25001:25002   */\n      0x00\n        /* \"#utility.yul\":24993:24999   */\n      dup3\n        /* \"#utility.yul\":24989:25003   */\n      add\n        /* \"#utility.yul\":24982:25021   */\n      mstore\n        /* \"#utility.yul\":24865:25028   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25034:25197   */\n    tag_458:\n        /* \"#utility.yul\":25174:25189   */\n      0x496e73756666696369656e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":25170:25171   */\n      0x00\n        /* \"#utility.yul\":25162:25168   */\n      dup3\n        /* \"#utility.yul\":25158:25172   */\n      add\n        /* \"#utility.yul\":25151:25190   */\n      mstore\n        /* \"#utility.yul\":25034:25197   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25203:25325   */\n    tag_320:\n        /* \"#utility.yul\":25276:25300   */\n      tag_588\n        /* \"#utility.yul\":25294:25299   */\n      dup2\n        /* \"#utility.yul\":25276:25300   */\n      tag_357\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":25269:25274   */\n      dup2\n        /* \"#utility.yul\":25266:25301   */\n      eq\n        /* \"#utility.yul\":25256:25319   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":25315:25316   */\n      0x00\n        /* \"#utility.yul\":25312:25313   */\n      dup1\n        /* \"#utility.yul\":25305:25317   */\n      revert\n        /* \"#utility.yul\":25256:25319   */\n    tag_589:\n        /* \"#utility.yul\":25203:25325   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25331:25447   */\n    tag_324:\n        /* \"#utility.yul\":25401:25422   */\n      tag_591\n        /* \"#utility.yul\":25416:25421   */\n      dup2\n        /* \"#utility.yul\":25401:25422   */\n      tag_543\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":25394:25399   */\n      dup2\n        /* \"#utility.yul\":25391:25423   */\n      eq\n        /* \"#utility.yul\":25381:25441   */\n      tag_592\n      jumpi\n        /* \"#utility.yul\":25437:25438   */\n      0x00\n        /* \"#utility.yul\":25434:25435   */\n      dup1\n        /* \"#utility.yul\":25427:25439   */\n      revert\n        /* \"#utility.yul\":25381:25441   */\n    tag_592:\n        /* \"#utility.yul\":25331:25447   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25453:25575   */\n    tag_328:\n        /* \"#utility.yul\":25526:25550   */\n      tag_594\n        /* \"#utility.yul\":25544:25549   */\n      dup2\n        /* \"#utility.yul\":25526:25550   */\n      tag_462\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":25519:25524   */\n      dup2\n        /* \"#utility.yul\":25516:25551   */\n      eq\n        /* \"#utility.yul\":25506:25569   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":25565:25566   */\n      0x00\n        /* \"#utility.yul\":25562:25563   */\n      dup1\n        /* \"#utility.yul\":25555:25567   */\n      revert\n        /* \"#utility.yul\":25506:25569   */\n    tag_595:\n        /* \"#utility.yul\":25453:25575   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073ed29fae3c6e0506dc22901fec8f83dad4fa487c61a793c5aee3f934f4c452564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@Init_1259": {
									"entryPoint": 445,
									"id": 1259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1235": {
									"entryPoint": null,
									"id": 1235,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 241,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 249,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "7:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:8"
															},
															"nodeType": "YulIf",
															"src": "260:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:8",
														"type": ""
													}
												],
												"src": "156:507:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:8",
														"type": ""
													}
												],
												"src": "669:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:8",
														"type": ""
													}
												],
												"src": "750:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:8",
														"type": ""
													}
												],
												"src": "852:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:8"
															},
															"nodeType": "YulIf",
															"src": "1283:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:8",
														"type": ""
													}
												],
												"src": "1230:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002c9a38038062002c9a833981810160405281019062000037919062000203565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b62000067620001bd60201b60201c565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200029d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60c86003819055506105dc600181905550606460048190555062093a806002819055506276a700600681905550565b600081519050620001fd8162000283565b92915050565b600080604083850312156200021d576200021c6200027e565b5b60006200022d85828601620001ec565b92505060206200024085828601620001ec565b9150509250929050565b600062000257826200025e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200028e816200024a565b81146200029a57600080fd5b50565b6129ed80620002ad6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063817b1cd2116100a25780639e447fc6116100715780639e447fc614610244578063a694fc3a14610260578063f2fde38b1461027c578063f7b2a7be14610298578063fc0c546a146102b65761010b565b8063817b1cd2146101d05780638a9d3839146101ee5780638da5cb5b1461020a57806391e07e7a146102285761010b565b80634b77dd9e116100de5780634b77dd9e146101705780635d2ec65d1461018c578063692642e7146101aa578063715018a6146101c65761010b565b80632e1a7d4d14610110578063373d61321461012c5780634641257d1461014a5780634b62b70b14610154575b600080fd5b61012a60048036038101906101259190611d62565b6102d4565b005b6101346106a3565b6040516101419190612392565b60405180910390f35b6101526106ed565b005b61016e60048036038101906101699190611d62565b610a1e565b005b61018a60048036038101906101859190611dbc565b610ae7565b005b610194610d7f565b6040516101a19190612392565b60405180910390f35b6101c460048036038101906101bf9190611d62565b610dc9565b005b6101ce610ede565b005b6101d8610f66565b6040516101e59190612392565b60405180910390f35b61020860048036038101906102039190611d08565b610f6c565b005b6102126110d2565b60405161021f91906120da565b60405180910390f35b610242600480360381019061023d9190611d62565b6110fb565b005b61025e60048036038101906102599190611d62565b6111fb565b005b61027a60048036038101906102759190611d62565b6112fb565b005b61029660048036038101906102919190611d08565b6115c0565b005b6102a06116b8565b6040516102ad9190612392565b60405180910390f35b6102be611702565b6040516102cb9190612155565b60405180910390f35b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000821161035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190612292565b60405180910390fd5b80600101548211156103a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039890612212565b60405180910390fd5b6103a9611728565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161040691906120da565b60206040518083038186803b15801561041e57600080fd5b505afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104569190611d8f565b831061050c57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b791906120da565b60206040518083038186803b1580156104cf57600080fd5b505afa1580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105079190611d8f565b61050e565b825b9050600061053e6201518061053085600301544261180490919063ffffffff16565b61181a90919063ffffffff16565b9050600060649050600060018560020154146105755761056d600654866003015461183090919063ffffffff16565b421015610593565b60006002548461058591906125a5565b1480156105925750600083115b5b9050806105a05760015491505b6105d96105ca6127106105bc858861184690919063ffffffff16565b61181a90919063ffffffff16565b8561180490919063ffffffff16565b93506105f08460085461180490919063ffffffff16565b60088190555061060d84866001015461180490919063ffffffff16565b85600101819055506106623385600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661185c9092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364338560405161069392919061212c565b60405180910390a1505050505050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6106f5611728565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061077d61076a61271061075c600454866000015461184690919063ffffffff16565b61181a90919063ffffffff16565b836000015461180490919063ffffffff16565b9050600081116107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990612192565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161083f91906120da565b60206040518083038186803b15801561085757600080fd5b505afa15801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f9190611d8f565b81111561096657600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161091391906120da565b60206040518083038186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190611d8f565b90505b6109d7600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118e2909392919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610a1292919061212c565b60405180910390a15050565b610a2661196b565b73ffffffffffffffffffffffffffffffffffffffff16610a446110d2565b73ffffffffffffffffffffffffffffffffffffffff1614610a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a91906122b2565b60405180910390fd5b60008111610add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad490612352565b60405180910390fd5b8060068190555050565b60008211610b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2190612292565b60405180910390fd5b81600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b8691906120da565b60206040518083038186803b158015610b9e57600080fd5b505afa158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd69190611d8f565b11610c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0d90612372565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9390612232565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550610d7b826112fb565b5050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610dd161196b565b73ffffffffffffffffffffffffffffffffffffffff16610def6110d2565b73ffffffffffffffffffffffffffffffffffffffff1614610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c906122b2565b60405180910390fd5b60008111610e88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7f90612332565b60405180910390fd5b610e9e620151808261184690919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610ed39190612392565b60405180910390a150565b610ee661196b565b73ffffffffffffffffffffffffffffffffffffffff16610f046110d2565b73ffffffffffffffffffffffffffffffffffffffff1614610f5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f51906122b2565b60405180910390fd5b610f646000611973565b565b60085481565b610f7461196b565b73ffffffffffffffffffffffffffffffffffffffff16610f926110d2565b73ffffffffffffffffffffffffffffffffffffffff1614610fe8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdf906122b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1611611057576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104e90612272565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a87816040516110c791906120da565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61110361196b565b73ffffffffffffffffffffffffffffffffffffffff166111216110d2565b73ffffffffffffffffffffffffffffffffffffffff1614611177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116e906122b2565b60405180910390fd5b600081116111ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b190612312565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516111f09190612392565b60405180910390a150565b61120361196b565b73ffffffffffffffffffffffffffffffffffffffff166112216110d2565b73ffffffffffffffffffffffffffffffffffffffff1614611277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126e906122b2565b60405180910390fd5b600081116112ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b1906122d2565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516112f09190612392565b60405180910390a150565b6000811161133e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133590612292565b60405180910390fd5b80600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161139a91906120da565b60206040518083038186803b1580156113b257600080fd5b505afa1580156113c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ea9190611d8f565b1161142a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142190612372565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154146114af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a6906121b2565b60405180910390fd5b6114b7611728565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611549333084600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118e2909392919063ffffffff16565b61156082826001015461183090919063ffffffff16565b816001018190555061157d8260085461183090919063ffffffff16565b6008819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33836040516115b492919061212c565b60405180910390a15050565b6115c861196b565b73ffffffffffffffffffffffffffffffffffffffff166115e66110d2565b73ffffffffffffffffffffffffffffffffffffffff161461163c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611633906122b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a3906121f2565b60405180910390fd5b6116b581611973565b50565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006117d66127106117c86003546117ba6117a76121c061179989600401544361180490919063ffffffff16565b61181a90919063ffffffff16565b876001015461184690919063ffffffff16565b61184690919063ffffffff16565b61181a90919063ffffffff16565b90506117ef81836000015461183090919063ffffffff16565b82600001819055504382600401819055505050565b6000818361181291906124c0565b905092915050565b600081836118289190612435565b905092915050565b6000818361183e91906123df565b905092915050565b600081836118549190612466565b905092915050565b6118dd8363a9059cbb60e01b848460405160240161187b92919061212c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a37565b505050565b611965846323b872dd60e01b858585604051602401611903939291906120f5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a37565b50505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611a99826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611afe9092919063ffffffff16565b9050600081511115611af95780806020019051810190611ab99190611d35565b611af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aef906121d2565b60405180910390fd5b5b505050565b6060611b0d8484600085611b16565b90509392505050565b606082471015611b5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5290612252565b60405180910390fd5b611b6485611c2a565b611ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9a906122f2565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611bcc91906120c3565b60006040518083038185875af1925050503d8060008114611c09576040519150601f19603f3d011682016040523d82523d6000602084013e611c0e565b606091505b5091509150611c1e828286611c4d565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611c5d57829050611cad565b600083511115611c705782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ca49190612170565b60405180910390fd5b9392505050565b600081359050611cc381612972565b92915050565b600081519050611cd881612989565b92915050565b600081359050611ced816129a0565b92915050565b600081519050611d02816129a0565b92915050565b600060208284031215611d1e57611d1d612634565b5b6000611d2c84828501611cb4565b91505092915050565b600060208284031215611d4b57611d4a612634565b5b6000611d5984828501611cc9565b91505092915050565b600060208284031215611d7857611d77612634565b5b6000611d8684828501611cde565b91505092915050565b600060208284031215611da557611da4612634565b5b6000611db384828501611cf3565b91505092915050565b60008060408385031215611dd357611dd2612634565b5b6000611de185828601611cde565b9250506020611df285828601611cde565b9150509250929050565b611e05816124f4565b82525050565b6000611e16826123ad565b611e2081856123c3565b9350611e30818560208601612572565b80840191505092915050565b611e458161253c565b82525050565b6000611e56826123b8565b611e6081856123ce565b9350611e70818560208601612572565b611e7981612639565b840191505092915050565b6000611e916010836123ce565b9150611e9c8261264a565b602082019050919050565b6000611eb46015836123ce565b9150611ebf82612673565b602082019050919050565b6000611ed7602a836123ce565b9150611ee28261269c565b604082019050919050565b6000611efa6026836123ce565b9150611f05826126eb565b604082019050919050565b6000611f1d600e836123ce565b9150611f288261273a565b602082019050919050565b6000611f40600f836123ce565b9150611f4b82612763565b602082019050919050565b6000611f636026836123ce565b9150611f6e8261278c565b604082019050919050565b6000611f866026836123ce565b9150611f91826127db565b604082019050919050565b6000611fa9601f836123ce565b9150611fb48261282a565b602082019050919050565b6000611fcc6020836123ce565b9150611fd782612853565b602082019050919050565b6000611fef600d836123ce565b9150611ffa8261287c565b602082019050919050565b6000612012601d836123ce565b915061201d826128a5565b602082019050919050565b6000612035601a836123ce565b9150612040826128ce565b602082019050919050565b60006120586017836123ce565b9150612063826128f7565b602082019050919050565b600061207b600d836123ce565b915061208682612920565b602082019050919050565b600061209e600d836123ce565b91506120a982612949565b602082019050919050565b6120bd81612532565b82525050565b60006120cf8284611e0b565b915081905092915050565b60006020820190506120ef6000830184611dfc565b92915050565b600060608201905061210a6000830186611dfc565b6121176020830185611dfc565b61212460408301846120b4565b949350505050565b60006040820190506121416000830185611dfc565b61214e60208301846120b4565b9392505050565b600060208201905061216a6000830184611e3c565b92915050565b6000602082019050818103600083015261218a8184611e4b565b905092915050565b600060208201905081810360008301526121ab81611e84565b9050919050565b600060208201905081810360008301526121cb81611ea7565b9050919050565b600060208201905081810360008301526121eb81611eca565b9050919050565b6000602082019050818103600083015261220b81611eed565b9050919050565b6000602082019050818103600083015261222b81611f10565b9050919050565b6000602082019050818103600083015261224b81611f33565b9050919050565b6000602082019050818103600083015261226b81611f56565b9050919050565b6000602082019050818103600083015261228b81611f79565b9050919050565b600060208201905081810360008301526122ab81611f9c565b9050919050565b600060208201905081810360008301526122cb81611fbf565b9050919050565b600060208201905081810360008301526122eb81611fe2565b9050919050565b6000602082019050818103600083015261230b81612005565b9050919050565b6000602082019050818103600083015261232b81612028565b9050919050565b6000602082019050818103600083015261234b8161204b565b9050919050565b6000602082019050818103600083015261236b8161206e565b9050919050565b6000602082019050818103600083015261238b81612091565b9050919050565b60006020820190506123a760008301846120b4565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006123ea82612532565b91506123f583612532565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561242a576124296125d6565b5b828201905092915050565b600061244082612532565b915061244b83612532565b92508261245b5761245a612605565b5b828204905092915050565b600061247182612532565b915061247c83612532565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124b5576124b46125d6565b5b828202905092915050565b60006124cb82612532565b91506124d683612532565b9250828210156124e9576124e86125d6565b5b828203905092915050565b60006124ff82612512565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006125478261254e565b9050919050565b600061255982612560565b9050919050565b600061256b82612512565b9050919050565b60005b83811015612590578082015181840152602081019050612575565b8381111561259f576000848401525b50505050565b60006125b082612532565b91506125bb83612532565b9250826125cb576125ca612605565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420416464726573732e20416464726573732063616e2774206260008201527f65207a65726f0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b61297b816124f4565b811461298657600080fd5b50565b61299281612506565b811461299d57600080fd5b50565b6129a981612532565b81146129b457600080fd5b5056fea264697066735822122073ed29fae3c6e0506dc22901fec8f83dad4fa487c61a793c5aee3f934f4c452564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2C9A CODESIZE SUB DUP1 PUSH3 0x2C9A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x203 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xF1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH3 0x1BD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x29D JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC8 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5DC PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x76A700 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1FD DUP2 PUSH3 0x283 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x21D JUMPI PUSH3 0x21C PUSH3 0x27E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x22D DUP6 DUP3 DUP7 ADD PUSH3 0x1EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x240 DUP6 DUP3 DUP7 ADD PUSH3 0x1EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 DUP3 PUSH3 0x25E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x28E DUP2 PUSH3 0x24A JUMP JUMPDEST DUP2 EQ PUSH3 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x29ED DUP1 PUSH3 0x2AD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x9E447FC6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2B6 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x8A9D3839 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x228 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C6 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x6ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0xDC9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CE PUSH2 0xEDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH2 0xF6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x11FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x12FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH2 0x15C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A9 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST DUP4 LT PUSH2 0x50C JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x53E PUSH3 0x15180 PUSH2 0x530 DUP6 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x575 JUMPI PUSH2 0x56D PUSH1 0x6 SLOAD DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x1830 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x593 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x25A5 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x592 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x5A0 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x5D9 PUSH2 0x5CA PUSH2 0x2710 PUSH2 0x5BC DUP6 DUP9 PUSH2 0x1846 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x5F0 DUP5 PUSH1 0x8 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x60D DUP5 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x662 CALLER DUP6 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x693 SWAP3 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F5 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x77D PUSH2 0x76A PUSH2 0x2710 PUSH2 0x75C PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1846 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B9 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x86B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x966 JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x92B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x93F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x963 SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x9D7 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18E2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xA12 SWAP3 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xA26 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA44 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xB2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB21 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST GT PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP1 PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xD7B DUP3 PUSH2 0x12FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDD1 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDEF PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3C SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7F SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9E PUSH3 0x15180 DUP3 PUSH2 0x1846 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xEE6 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF04 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF51 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF64 PUSH1 0x0 PUSH2 0x1973 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF74 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF92 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDF SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x1057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xEDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1103 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1121 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1177 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116E SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B1 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11F0 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1203 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1221 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1277 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126E SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x12BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B1 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x12F0 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x133E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1335 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139A SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13EA SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST GT PUSH2 0x142A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1421 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x14AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A6 SWAP1 PUSH2 0x21B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14B7 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1549 CALLER ADDRESS DUP5 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18E2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1560 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1830 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x157D DUP3 PUSH1 0x8 SLOAD PUSH2 0x1830 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x15B4 SWAP3 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x15C8 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15E6 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x163C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1633 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A3 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B5 DUP2 PUSH2 0x1973 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x17D6 PUSH2 0x2710 PUSH2 0x17C8 PUSH1 0x3 SLOAD PUSH2 0x17BA PUSH2 0x17A7 PUSH2 0x21C0 PUSH2 0x1799 DUP10 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1846 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1846 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17EF DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1830 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x2435 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x183E SWAP2 SWAP1 PUSH2 0x23DF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1854 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18DD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x187B SWAP3 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A37 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1965 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1903 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A37 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A99 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AFE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1AF9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1AB9 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH2 0x1AF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AEF SWAP1 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B0D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1B5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B52 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B64 DUP6 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9A SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1BCC SWAP2 SWAP1 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C0E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1C1E DUP3 DUP3 DUP7 PUSH2 0x1C4D JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1C5D JUMPI DUP3 SWAP1 POP PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1C70 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA4 SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC3 DUP2 PUSH2 0x2972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CD8 DUP2 PUSH2 0x2989 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CED DUP2 PUSH2 0x29A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D02 DUP2 PUSH2 0x29A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1E JUMPI PUSH2 0x1D1D PUSH2 0x2634 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D2C DUP5 DUP3 DUP6 ADD PUSH2 0x1CB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D4B JUMPI PUSH2 0x1D4A PUSH2 0x2634 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D59 DUP5 DUP3 DUP6 ADD PUSH2 0x1CC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D78 JUMPI PUSH2 0x1D77 PUSH2 0x2634 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D86 DUP5 DUP3 DUP6 ADD PUSH2 0x1CDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA5 JUMPI PUSH2 0x1DA4 PUSH2 0x2634 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DB3 DUP5 DUP3 DUP6 ADD PUSH2 0x1CF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD3 JUMPI PUSH2 0x1DD2 PUSH2 0x2634 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1CDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1CDE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E05 DUP2 PUSH2 0x24F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E16 DUP3 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x1E20 DUP2 DUP6 PUSH2 0x23C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E30 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2572 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E45 DUP2 PUSH2 0x253C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E56 DUP3 PUSH2 0x23B8 JUMP JUMPDEST PUSH2 0x1E60 DUP2 DUP6 PUSH2 0x23CE JUMP JUMPDEST SWAP4 POP PUSH2 0x1E70 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2572 JUMP JUMPDEST PUSH2 0x1E79 DUP2 PUSH2 0x2639 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E91 PUSH1 0x10 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9C DUP3 PUSH2 0x264A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB4 PUSH1 0x15 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBF DUP3 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED7 PUSH1 0x2A DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE2 DUP3 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFA PUSH1 0x26 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F05 DUP3 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1D PUSH1 0xE DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F28 DUP3 PUSH2 0x273A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F40 PUSH1 0xF DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4B DUP3 PUSH2 0x2763 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F63 PUSH1 0x26 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F6E DUP3 PUSH2 0x278C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F86 PUSH1 0x26 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F91 DUP3 PUSH2 0x27DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA9 PUSH1 0x1F DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB4 DUP3 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCC PUSH1 0x20 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD7 DUP3 PUSH2 0x2853 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEF PUSH1 0xD DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFA DUP3 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2012 PUSH1 0x1D DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x201D DUP3 PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2035 PUSH1 0x1A DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x2040 DUP3 PUSH2 0x28CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2058 PUSH1 0x17 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x2063 DUP3 PUSH2 0x28F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207B PUSH1 0xD DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x2086 DUP3 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209E PUSH1 0xD DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x20A9 DUP3 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20BD DUP2 PUSH2 0x2532 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CF DUP3 DUP5 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20EF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x210A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x2117 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x2124 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20B4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2141 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x214E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20B4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x216A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x218A DUP2 DUP5 PUSH2 0x1E4B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21AB DUP2 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21CB DUP2 PUSH2 0x1EA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21EB DUP2 PUSH2 0x1ECA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x220B DUP2 PUSH2 0x1EED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x222B DUP2 PUSH2 0x1F10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x224B DUP2 PUSH2 0x1F33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x226B DUP2 PUSH2 0x1F56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x228B DUP2 PUSH2 0x1F79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22AB DUP2 PUSH2 0x1F9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22CB DUP2 PUSH2 0x1FBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22EB DUP2 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x230B DUP2 PUSH2 0x2005 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232B DUP2 PUSH2 0x2028 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x234B DUP2 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x236B DUP2 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x238B DUP2 PUSH2 0x2091 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EA DUP3 PUSH2 0x2532 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F5 DUP4 PUSH2 0x2532 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x242A JUMPI PUSH2 0x2429 PUSH2 0x25D6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2440 DUP3 PUSH2 0x2532 JUMP JUMPDEST SWAP2 POP PUSH2 0x244B DUP4 PUSH2 0x2532 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x245B JUMPI PUSH2 0x245A PUSH2 0x2605 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2471 DUP3 PUSH2 0x2532 JUMP JUMPDEST SWAP2 POP PUSH2 0x247C DUP4 PUSH2 0x2532 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x24B5 JUMPI PUSH2 0x24B4 PUSH2 0x25D6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24CB DUP3 PUSH2 0x2532 JUMP JUMPDEST SWAP2 POP PUSH2 0x24D6 DUP4 PUSH2 0x2532 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x24E9 JUMPI PUSH2 0x24E8 PUSH2 0x25D6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24FF DUP3 PUSH2 0x2512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2547 DUP3 PUSH2 0x254E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2559 DUP3 PUSH2 0x2560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256B DUP3 PUSH2 0x2512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2590 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2575 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x259F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B0 DUP3 PUSH2 0x2532 JUMP JUMPDEST SWAP2 POP PUSH2 0x25BB DUP4 PUSH2 0x2532 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25CB JUMPI PUSH2 0x25CA PUSH2 0x2605 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420416464726573732E20416464726573732063616E27742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x297B DUP2 PUSH2 0x24F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2992 DUP2 PUSH2 0x2506 JUMP JUMPDEST DUP2 EQ PUSH2 0x299D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x29A9 DUP2 PUSH2 0x2532 JUMP JUMPDEST DUP2 EQ PUSH2 0x29B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xED29FAE3C6E0506DC22901FEC8F83DAD4FA487C6 BYTE PUSH26 0x3C5AEE3F934F4C452564736F6C63430008070033000000000000 ",
							"sourceMap": "260:7036:7:-:0;;;1552:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1625:6:7;:4;;;:6;;:::i;:::-;1658:14;1642:13;;:30;;;;;;;;;;;;;;;;;;1698:6;1683:5;;:22;;;;;;;;;;;;;;;;;;1552:161;;260:7036;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1721:214:7:-;1781:3;1767:11;:17;;;;1826:4;1806:17;:24;;;;1858:3;1841:14;:20;;;;1887:6;1872:12;:21;;;;1920:7;1904:13;:23;;;;1721:214::o;7:143:8:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;260:7036:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1129": {
									"entryPoint": 6711,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 6507,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 6515,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_675": {
									"entryPoint": 6192,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_720": {
									"entryPoint": 6170,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_341": {
									"entryPoint": 6934,
									"id": 341,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_271": {
									"entryPoint": 6910,
									"id": 271,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@harvest_1819": {
									"entryPoint": 1773,
									"id": 1819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_200": {
									"entryPoint": 7210,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_705": {
									"entryPoint": 6214,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 4306,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 3806,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_1843": {
									"entryPoint": 5816,
									"id": 1843,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardToHarvest_1745": {
									"entryPoint": 3455,
									"id": 1745,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_972": {
									"entryPoint": 6370,
									"id": 972,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_946": {
									"entryPoint": 6236,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setBountyWallet_1714": {
									"entryPoint": 3948,
									"id": 1714,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setEventPeriod_1665": {
									"entryPoint": 3529,
									"id": 1665,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockupTime_1733": {
									"entryPoint": 2590,
									"id": 1733,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_1639": {
									"entryPoint": 4603,
									"id": 1639,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnstakingFeeRate_1688": {
									"entryPoint": 4347,
									"id": 1688,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1470": {
									"entryPoint": 4859,
									"id": 1470,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_1831": {
									"entryPoint": 1699,
									"id": 1831,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@startStaking_1389": {
									"entryPoint": 2791,
									"id": 1389,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_690": {
									"entryPoint": 6148,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1180": {
									"entryPoint": 5890,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1177": {
									"entryPoint": 3942,
									"id": 1177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 5568,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateReward_1323": {
									"entryPoint": 5928,
									"id": 1323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_476": {
									"entryPoint": 7245,
									"id": 476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1616": {
									"entryPoint": 724,
									"id": 1616,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack": {
									"entryPoint": 7740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8437,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed": {
									"entryPoint": 8533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$912_to_t_address": {
									"entryPoint": 9532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 9586,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"mod_t_uint256": {
									"entryPoint": 9637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9686,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9733,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9780,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 9802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684": {
									"entryPoint": 9843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 9884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 10042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6": {
									"entryPoint": 10083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 10124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975": {
									"entryPoint": 10203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 10282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6": {
									"entryPoint": 10364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 10405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3": {
									"entryPoint": 10446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561": {
									"entryPoint": 10487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2": {
									"entryPoint": 10528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811": {
									"entryPoint": 10569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:25578:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "7:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:8",
														"type": ""
													}
												],
												"src": "152:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:8",
														"type": ""
													}
												],
												"src": "295:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:8",
														"type": ""
													}
												],
												"src": "440:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:8"
															},
															"nodeType": "YulIf",
															"src": "665:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:8",
														"type": ""
													}
												],
												"src": "589:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:8"
															},
															"nodeType": "YulIf",
															"src": "1008:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:8",
														"type": ""
													}
												],
												"src": "924:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:8"
															},
															"nodeType": "YulIf",
															"src": "1351:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:8",
														"type": ""
													}
												],
												"src": "1275:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:8"
															},
															"nodeType": "YulIf",
															"src": "1697:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:8",
														"type": ""
													}
												],
												"src": "1610:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2050:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2096:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2098:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2098:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2098:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2071:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2067:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2067:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2063:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:32:8"
															},
															"nodeType": "YulIf",
															"src": "2060:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2189:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2204:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2208:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2233:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2268:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2279:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2264:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2264:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2288:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2243:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2233:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2316:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2331:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2335:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2361:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2396:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2407:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2371:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2361:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2012:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2023:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2035:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2043:6:8",
														"type": ""
													}
												],
												"src": "1967:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2512:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2529:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2552:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2534:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2522:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2500:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2507:3:8",
														"type": ""
													}
												],
												"src": "2447:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2679:265:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2689:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2735:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2703:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2693:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2750:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2838:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2757:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2750:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2880:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2887:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2894:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2854:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2854:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2915:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2926:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2931:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2915:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2660:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2667:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2675:3:8",
														"type": ""
													}
												],
												"src": "2571:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3046:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$912_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3051:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3051:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3017:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3024:3:8",
														"type": ""
													}
												],
												"src": "2950:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3207:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3217:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3264:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3231:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3221:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3279:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3345:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3350:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3286:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3279:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3392:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3388:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3388:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3406:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3411:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3366:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3366:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3427:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3438:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3465:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3443:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3434:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3427:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3188:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3195:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3203:3:8",
														"type": ""
													}
												],
												"src": "3115:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3631:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3641:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3707:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3712:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3648:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3641:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3813:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nodeType": "YulIdentifier",
																	"src": "3724:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3724:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3837:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3842:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3826:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3619:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3627:3:8",
														"type": ""
													}
												],
												"src": "3485:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4079:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4084:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4020:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4013:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4185:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																	"nodeType": "YulIdentifier",
																	"src": "4096:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4096:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4198:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4209:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4205:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3991:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3999:3:8",
														"type": ""
													}
												],
												"src": "3857:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4375:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4385:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4451:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4456:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4392:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4385:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4557:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "4468:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4468:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4468:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4570:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4586:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4577:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4363:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4371:3:8",
														"type": ""
													}
												],
												"src": "4229:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4747:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4757:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4823:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4828:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4764:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4757:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4929:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4840:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4840:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4942:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4953:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4949:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4735:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4743:3:8",
														"type": ""
													}
												],
												"src": "4601:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5119:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5129:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5195:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5136:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5129:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5301:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "5212:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5314:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5330:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5314:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5107:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5115:3:8",
														"type": ""
													}
												],
												"src": "4973:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5501:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5567:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5508:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5501:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5673:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																	"nodeType": "YulIdentifier",
																	"src": "5584:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5584:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5686:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5697:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5702:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5693:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5686:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5479:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5487:3:8",
														"type": ""
													}
												],
												"src": "5345:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5863:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5873:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5939:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5880:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5873:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6045:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "5956:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5956:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6069:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6074:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6065:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6058:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5851:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5859:3:8",
														"type": ""
													}
												],
												"src": "5717:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6235:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6245:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6252:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6245:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6417:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																	"nodeType": "YulIdentifier",
																	"src": "6328:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6328:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6430:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6441:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6446:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6437:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6223:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6231:3:8",
														"type": ""
													}
												],
												"src": "6089:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6607:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6617:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6683:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6688:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6624:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nodeType": "YulIdentifier",
																	"src": "6700:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6700:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6802:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6813:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6818:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6809:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6809:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6595:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6603:3:8",
														"type": ""
													}
												],
												"src": "6461:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6979:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6989:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7055:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6996:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6996:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6989:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7161:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7072:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7072:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7174:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7185:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7181:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6967:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6975:3:8",
														"type": ""
													}
												],
												"src": "6833:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7351:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7361:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7427:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7432:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7368:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7368:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7533:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																	"nodeType": "YulIdentifier",
																	"src": "7444:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7444:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7546:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7557:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7553:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7546:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7339:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7347:3:8",
														"type": ""
													}
												],
												"src": "7205:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7723:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7733:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7799:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7740:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7740:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7905:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "7816:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7816:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7816:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7918:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7925:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7918:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7711:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7719:3:8",
														"type": ""
													}
												],
												"src": "7577:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8095:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8105:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8112:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8112:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8105:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8277:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																	"nodeType": "YulIdentifier",
																	"src": "8188:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8188:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8301:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8306:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8297:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8290:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8083:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8091:3:8",
														"type": ""
													}
												],
												"src": "7949:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8467:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8477:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8543:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8548:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8484:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8484:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8649:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																	"nodeType": "YulIdentifier",
																	"src": "8560:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8560:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8662:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8673:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8678:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8669:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8669:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8662:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8455:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8463:3:8",
														"type": ""
													}
												],
												"src": "8321:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8839:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8849:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8915:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8920:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8856:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8856:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8849:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9021:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																	"nodeType": "YulIdentifier",
																	"src": "8932:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9034:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9045:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9050:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9041:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9034:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8827:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8835:3:8",
														"type": ""
													}
												],
												"src": "8693:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9221:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9287:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9292:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9228:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9228:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9221:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9393:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																	"nodeType": "YulIdentifier",
																	"src": "9304:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9304:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9304:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9406:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9417:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9422:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9413:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9413:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9406:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9199:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9207:3:8",
														"type": ""
													}
												],
												"src": "9065:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9502:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9519:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9542:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9524:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9524:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9512:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9512:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9512:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9490:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9497:3:8",
														"type": ""
													}
												],
												"src": "9437:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9695:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9706:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9793:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9802:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9713:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9713:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9706:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9816:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9823:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9816:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9674:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9680:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9691:3:8",
														"type": ""
													}
												],
												"src": "9561:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9936:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9946:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9958:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9969:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9954:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9946:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10026:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10039:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10050:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10035:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10035:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9982:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9982:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9982:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9908:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9920:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9931:4:8",
														"type": ""
													}
												],
												"src": "9838:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10220:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10230:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10242:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10253:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10238:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10238:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10230:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10310:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10323:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10334:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10319:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10319:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10266:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10266:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10266:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10391:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10404:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10415:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10400:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10400:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10347:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10347:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10347:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10473:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10486:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10497:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10482:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10482:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10429:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10429:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10429:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10176:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10188:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10196:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10204:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10215:4:8",
														"type": ""
													}
												],
												"src": "10066:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10640:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10650:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10662:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10673:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10658:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10658:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10650:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10730:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10743:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10754:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10739:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10739:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10686:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10686:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10686:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10811:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10824:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10835:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10820:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10820:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10767:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10767:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10767:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10604:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10616:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10624:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10635:4:8",
														"type": ""
													}
												],
												"src": "10514:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10964:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10974:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10986:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10997:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10982:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10982:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10974:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11068:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11081:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11092:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11077:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11077:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11010:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11010:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11010:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10936:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10948:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10959:4:8",
														"type": ""
													}
												],
												"src": "10852:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11226:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11236:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11248:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11259:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11244:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11244:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11236:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11283:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11294:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11279:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11279:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11302:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11308:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11298:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11298:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11272:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11272:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11272:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11328:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11400:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11409:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11336:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11336:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11328:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11198:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11210:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11221:4:8",
														"type": ""
													}
												],
												"src": "11108:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11598:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11608:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11620:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11631:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11616:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11616:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11608:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11655:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11666:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11651:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11651:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11674:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11680:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11670:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11670:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11644:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11644:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11644:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11700:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11834:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11708:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11708:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11700:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11578:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11593:4:8",
														"type": ""
													}
												],
												"src": "11427:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12023:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12033:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12045:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12056:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12041:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12041:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12033:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12080:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12091:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12076:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12076:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12099:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12105:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12095:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12095:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12069:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12069:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12069:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12125:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12259:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12133:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12125:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12003:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12018:4:8",
														"type": ""
													}
												],
												"src": "11852:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12448:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12458:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12470:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12481:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12466:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12466:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12458:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12505:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12516:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12501:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12501:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12524:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12530:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12520:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12520:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12494:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12494:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12494:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12550:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12684:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12558:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12558:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12550:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12428:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12443:4:8",
														"type": ""
													}
												],
												"src": "12277:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12873:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12883:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12895:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12906:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12891:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12891:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12883:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12930:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12941:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12926:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12926:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12949:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12955:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12945:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12945:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12919:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12919:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12919:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12975:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13109:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12983:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12983:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12975:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12853:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12868:4:8",
														"type": ""
													}
												],
												"src": "12702:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13298:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13308:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13320:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13331:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13316:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13316:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13308:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13355:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13366:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13351:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13351:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13374:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13380:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13370:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13370:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13344:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13344:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13344:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13400:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13534:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13408:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13408:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13400:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13278:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13293:4:8",
														"type": ""
													}
												],
												"src": "13127:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13723:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13733:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13745:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13756:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13741:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13741:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13733:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13780:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13791:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13776:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13776:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13799:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13805:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13795:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13795:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13769:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13769:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13769:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13825:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13959:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13833:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13833:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13825:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13703:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13718:4:8",
														"type": ""
													}
												],
												"src": "13552:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14148:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14205:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14216:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14201:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14201:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14224:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14230:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14220:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14220:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14194:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14194:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14194:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14250:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14384:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14258:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14258:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14250:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14128:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14143:4:8",
														"type": ""
													}
												],
												"src": "13977:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14573:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14583:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14595:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14606:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14591:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14591:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14583:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14630:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14641:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14626:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14626:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14649:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14655:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14645:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14645:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14619:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14619:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14619:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14675:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14809:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14683:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14683:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14675:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14553:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14568:4:8",
														"type": ""
													}
												],
												"src": "14402:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14998:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15008:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15020:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15031:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15016:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15016:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15008:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15055:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15066:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15051:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15051:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15074:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15080:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15070:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15070:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15044:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15044:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15044:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15100:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15234:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15108:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15108:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15100:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14978:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14993:4:8",
														"type": ""
													}
												],
												"src": "14827:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15423:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15433:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15445:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15456:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15441:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15441:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15433:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15480:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15491:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15476:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15476:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15499:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15505:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15495:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15495:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15469:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15469:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15469:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15525:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15659:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15533:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15533:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15525:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15403:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15418:4:8",
														"type": ""
													}
												],
												"src": "15252:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15848:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15858:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15870:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15881:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15866:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15866:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15858:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15905:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15916:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15901:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15901:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15924:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15930:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15920:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15894:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15894:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15894:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15950:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16084:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15958:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15958:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15950:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15828:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15843:4:8",
														"type": ""
													}
												],
												"src": "15677:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16273:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16283:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16295:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16306:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16291:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16291:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16283:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16330:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16341:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16326:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16326:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16349:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16355:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16345:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16345:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16319:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16319:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16319:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16375:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16509:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16383:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16383:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16375:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16253:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16268:4:8",
														"type": ""
													}
												],
												"src": "16102:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16698:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16708:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16720:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16731:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16716:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16716:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16708:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16755:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16766:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16751:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16751:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16774:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16780:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16770:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16770:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16744:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16744:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16744:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16800:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16934:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16808:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16808:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16800:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16678:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16693:4:8",
														"type": ""
													}
												],
												"src": "16527:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17123:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17133:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17145:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17156:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17141:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17141:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17133:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17180:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17191:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17176:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17176:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17199:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17205:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17195:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17195:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17169:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17169:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17169:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17225:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17359:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17233:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17233:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17225:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17103:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17118:4:8",
														"type": ""
													}
												],
												"src": "16952:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17548:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17558:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17570:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17581:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17566:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17566:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17558:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17605:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17616:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17601:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17601:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17624:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17630:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17620:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17620:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17594:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17594:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17594:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17650:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17784:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17658:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17658:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17650:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17528:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17543:4:8",
														"type": ""
													}
												],
												"src": "17377:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17973:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17983:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17995:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18006:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17991:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17991:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17983:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18030:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18041:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18026:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18026:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18049:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18055:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18045:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18045:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18019:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18019:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18019:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18075:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18209:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18083:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18083:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18075:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17953:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17968:4:8",
														"type": ""
													}
												],
												"src": "17802:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18325:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18335:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18347:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18358:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18343:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18343:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18335:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18415:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18428:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18439:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18424:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18424:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18371:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18371:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18371:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18297:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18309:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18320:4:8",
														"type": ""
													}
												],
												"src": "18227:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18495:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18505:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18521:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18515:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18515:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "18505:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18488:6:8",
														"type": ""
													}
												],
												"src": "18455:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18594:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18605:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18621:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18615:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18615:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18605:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18577:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18587:6:8",
														"type": ""
													}
												],
												"src": "18536:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18699:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18710:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18726:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18720:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18720:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18710:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18682:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18692:6:8",
														"type": ""
													}
												],
												"src": "18640:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18858:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18868:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18883:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18868:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18830:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18835:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18846:11:8",
														"type": ""
													}
												],
												"src": "18745:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18994:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19011:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19016:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19004:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19004:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19004:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19032:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19051:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19056:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19047:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19047:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "19032:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18966:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18971:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18982:11:8",
														"type": ""
													}
												],
												"src": "18898:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19117:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19127:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19150:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19132:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19132:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19127:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19161:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19184:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19166:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19166:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19161:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19324:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19326:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19326:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19326:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19245:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19252:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19320:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19248:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19248:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19242:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19242:81:8"
															},
															"nodeType": "YulIf",
															"src": "19239:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19356:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19367:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19370:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19363:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19363:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19356:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19104:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19107:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19113:3:8",
														"type": ""
													}
												],
												"src": "19073:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19426:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19436:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19459:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19441:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19441:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19436:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19470:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19493:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19475:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19475:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19470:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19517:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19519:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19519:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19519:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19514:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19507:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19507:9:8"
															},
															"nodeType": "YulIf",
															"src": "19504:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19549:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19558:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19561:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19554:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19554:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19549:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19415:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19418:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19424:1:8",
														"type": ""
													}
												],
												"src": "19384:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19623:300:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19633:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19656:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19638:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19638:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19633:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19667:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19690:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19672:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19672:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19667:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19865:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19867:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19867:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19867:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19777:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "19770:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19770:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19763:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19763:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19785:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19792:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19860:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "19788:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19788:74:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19782:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19782:81:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19759:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19759:105:8"
															},
															"nodeType": "YulIf",
															"src": "19756:131:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19897:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19912:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19915:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19908:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19908:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "19897:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19606:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19609:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19615:7:8",
														"type": ""
													}
												],
												"src": "19575:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19974:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19984:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20007:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19989:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19989:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19984:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20018:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20041:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20023:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20023:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20018:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20065:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20067:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20067:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20067:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20059:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20062:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20056:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20056:8:8"
															},
															"nodeType": "YulIf",
															"src": "20053:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20097:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20109:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20112:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20105:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20105:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "20097:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19960:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19963:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19969:4:8",
														"type": ""
													}
												],
												"src": "19929:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20171:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20181:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20210:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20192:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20192:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20181:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20153:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20163:7:8",
														"type": ""
													}
												],
												"src": "20126:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20270:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20280:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20305:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20298:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20298:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20291:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20291:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20280:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20252:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20262:7:8",
														"type": ""
													}
												],
												"src": "20228:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20369:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20379:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20394:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20401:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20390:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20390:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20379:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20351:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20361:7:8",
														"type": ""
													}
												],
												"src": "20324:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20501:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20511:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "20522:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20511:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20483:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20493:7:8",
														"type": ""
													}
												],
												"src": "20456:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20613:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20623:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20667:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "20636:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20636:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20623:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$912_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20593:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20603:9:8",
														"type": ""
													}
												],
												"src": "20539:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20745:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20755:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20799:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20768:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20768:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20755:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20725:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20735:9:8",
														"type": ""
													}
												],
												"src": "20685:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20877:53:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20887:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20918:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20900:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20900:24:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20887:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20857:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20867:9:8",
														"type": ""
													}
												],
												"src": "20817:113:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20985:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20995:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21004:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "20999:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21064:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21089:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "21094:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21085:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21085:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "21108:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "21113:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "21104:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "21104:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "21098:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21098:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21078:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21078:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21078:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21025:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21028:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "21022:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21022:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "21036:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21038:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "21047:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21050:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "21043:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21043:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "21038:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "21018:3:8",
																"statements": []
															},
															"src": "21014:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21161:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21211:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "21216:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21207:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21207:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21225:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21200:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21200:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21200:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21142:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21145:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21139:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21139:13:8"
															},
															"nodeType": "YulIf",
															"src": "21136:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20967:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "20972:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20977:6:8",
														"type": ""
													}
												],
												"src": "20936:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21283:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21293:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21316:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21298:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21298:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "21293:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21327:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21350:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21332:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21332:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "21327:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21374:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "21376:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21376:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21376:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21371:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21364:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21364:9:8"
															},
															"nodeType": "YulIf",
															"src": "21361:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21405:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21414:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21417:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "21410:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21410:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "21405:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21272:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21275:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "21281:1:8",
														"type": ""
													}
												],
												"src": "21249:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21459:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21476:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21479:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21469:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21469:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21469:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21573:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21576:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21566:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21566:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21566:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21597:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21600:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21590:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21590:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21590:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "21431:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21645:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21662:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21665:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21655:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21655:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21655:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21759:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21762:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21752:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21752:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21752:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21783:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21786:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21776:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21776:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21776:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21617:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21892:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21909:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21912:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21902:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21902:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21902:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "21803:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22015:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22032:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22035:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22025:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22025:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22025:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "21926:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22097:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22107:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22125:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22132:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22121:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22121:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22141:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "22137:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22137:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22117:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22117:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "22107:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22080:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "22090:6:8",
														"type": ""
													}
												],
												"src": "22049:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22263:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22285:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22293:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22281:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22281:14:8"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22297:18:8",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22274:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22274:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22274:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22255:6:8",
														"type": ""
													}
												],
												"src": "22157:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22435:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22457:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22465:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22453:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22453:14:8"
																	},
																	{
																		"hexValue": "4572726f723a20696e76616c6964207374616b6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22469:23:8",
																		"type": "",
																		"value": "Error: invalid staker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22446:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22446:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22446:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22427:6:8",
														"type": ""
													}
												],
												"src": "22329:171:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22612:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22634:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22642:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22630:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22630:14:8"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22646:34:8",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22623:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22623:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22623:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22702:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22710:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22698:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22698:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22715:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22691:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22691:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22691:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22604:6:8",
														"type": ""
													}
												],
												"src": "22506:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22847:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22869:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22877:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22865:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22865:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22881:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22858:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22858:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22858:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22937:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22945:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22933:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22950:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22926:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22926:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22926:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22839:6:8",
														"type": ""
													}
												],
												"src": "22741:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23078:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23100:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23108:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23096:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23096:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23112:16:8",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23089:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23089:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23089:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23070:6:8",
														"type": ""
													}
												],
												"src": "22972:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23248:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23270:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23278:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23266:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23266:14:8"
																	},
																	{
																		"hexValue": "416c72656164792073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23282:17:8",
																		"type": "",
																		"value": "Already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23259:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23259:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23259:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23240:6:8",
														"type": ""
													}
												],
												"src": "23142:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23419:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23441:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23449:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23437:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23437:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23453:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23430:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23430:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23430:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23509:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23517:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23505:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23505:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23522:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23498:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23498:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23498:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23411:6:8",
														"type": ""
													}
												],
												"src": "23313:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23650:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23672:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23680:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23668:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23668:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420416464726573732e20416464726573732063616e27742062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23684:34:8",
																		"type": "",
																		"value": "Invalid Address. Address can't b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23661:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23661:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23661:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23740:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23748:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23736:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23736:15:8"
																	},
																	{
																		"hexValue": "65207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23753:8:8",
																		"type": "",
																		"value": "e zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23729:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23729:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23729:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23642:6:8",
														"type": ""
													}
												],
												"src": "23544:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23881:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23903:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23911:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23899:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23899:14:8"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23915:33:8",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23892:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23892:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23892:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23873:6:8",
														"type": ""
													}
												],
												"src": "23775:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24068:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24090:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24098:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24086:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24086:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24102:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24079:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24079:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24079:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24060:6:8",
														"type": ""
													}
												],
												"src": "23962:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24256:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24278:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24286:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24274:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24274:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24290:15:8",
																		"type": "",
																		"value": "Invalid value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24267:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24267:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24267:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24248:6:8",
														"type": ""
													}
												],
												"src": "24150:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24425:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24447:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24455:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24443:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24443:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24459:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24436:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24436:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24436:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24417:6:8",
														"type": ""
													}
												],
												"src": "24319:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24610:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24632:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24640:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24628:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24628:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24644:28:8",
																		"type": "",
																		"value": "Invalid Unstaking Fee Rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24621:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24621:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24621:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24602:6:8",
														"type": ""
													}
												],
												"src": "24504:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24792:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24814:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24822:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24810:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24810:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24826:25:8",
																		"type": "",
																		"value": "Invalid Lockup Duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24803:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24803:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24803:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24784:6:8",
														"type": ""
													}
												],
												"src": "24686:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24971:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24993:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25001:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24989:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24989:14:8"
																	},
																	{
																		"hexValue": "43616e2774206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25005:15:8",
																		"type": "",
																		"value": "Can't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24982:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24982:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24982:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24963:6:8",
														"type": ""
													}
												],
												"src": "24865:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25140:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25162:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25170:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25158:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25158:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25174:15:8",
																		"type": "",
																		"value": "Insufficient!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25151:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25151:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25151:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25132:6:8",
														"type": ""
													}
												],
												"src": "25034:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25246:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25303:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25312:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25315:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25305:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25305:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25305:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25269:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "25294:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "25276:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25276:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "25266:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25266:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25259:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25259:43:8"
															},
															"nodeType": "YulIf",
															"src": "25256:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25239:5:8",
														"type": ""
													}
												],
												"src": "25203:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25371:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25425:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25434:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25437:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25427:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25427:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25427:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25394:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "25416:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "25401:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25401:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "25391:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25391:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25384:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25384:40:8"
															},
															"nodeType": "YulIf",
															"src": "25381:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25364:5:8",
														"type": ""
													}
												],
												"src": "25331:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25496:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25553:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25562:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25565:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25555:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25555:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25555:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25519:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "25544:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "25526:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25526:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "25516:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25516:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25509:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25509:43:8"
															},
															"nodeType": "YulIf",
															"src": "25506:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25489:5:8",
														"type": ""
													}
												],
												"src": "25453:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$912_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IBEP20_$912_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: invalid staker\")\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already started\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Address. Address can't b\")\n\n        mstore(add(memPtr, 32), \"e zero\")\n\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid value\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Unstaking Fee Rate\")\n\n    }\n\n    function store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Lockup Duration\")\n\n    }\n\n    function store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't be zero\")\n\n    }\n\n    function store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063817b1cd2116100a25780639e447fc6116100715780639e447fc614610244578063a694fc3a14610260578063f2fde38b1461027c578063f7b2a7be14610298578063fc0c546a146102b65761010b565b8063817b1cd2146101d05780638a9d3839146101ee5780638da5cb5b1461020a57806391e07e7a146102285761010b565b80634b77dd9e116100de5780634b77dd9e146101705780635d2ec65d1461018c578063692642e7146101aa578063715018a6146101c65761010b565b80632e1a7d4d14610110578063373d61321461012c5780634641257d1461014a5780634b62b70b14610154575b600080fd5b61012a60048036038101906101259190611d62565b6102d4565b005b6101346106a3565b6040516101419190612392565b60405180910390f35b6101526106ed565b005b61016e60048036038101906101699190611d62565b610a1e565b005b61018a60048036038101906101859190611dbc565b610ae7565b005b610194610d7f565b6040516101a19190612392565b60405180910390f35b6101c460048036038101906101bf9190611d62565b610dc9565b005b6101ce610ede565b005b6101d8610f66565b6040516101e59190612392565b60405180910390f35b61020860048036038101906102039190611d08565b610f6c565b005b6102126110d2565b60405161021f91906120da565b60405180910390f35b610242600480360381019061023d9190611d62565b6110fb565b005b61025e60048036038101906102599190611d62565b6111fb565b005b61027a60048036038101906102759190611d62565b6112fb565b005b61029660048036038101906102919190611d08565b6115c0565b005b6102a06116b8565b6040516102ad9190612392565b60405180910390f35b6102be611702565b6040516102cb9190612155565b60405180910390f35b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000821161035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190612292565b60405180910390fd5b80600101548211156103a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039890612212565b60405180910390fd5b6103a9611728565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161040691906120da565b60206040518083038186803b15801561041e57600080fd5b505afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104569190611d8f565b831061050c57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b791906120da565b60206040518083038186803b1580156104cf57600080fd5b505afa1580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105079190611d8f565b61050e565b825b9050600061053e6201518061053085600301544261180490919063ffffffff16565b61181a90919063ffffffff16565b9050600060649050600060018560020154146105755761056d600654866003015461183090919063ffffffff16565b421015610593565b60006002548461058591906125a5565b1480156105925750600083115b5b9050806105a05760015491505b6105d96105ca6127106105bc858861184690919063ffffffff16565b61181a90919063ffffffff16565b8561180490919063ffffffff16565b93506105f08460085461180490919063ffffffff16565b60088190555061060d84866001015461180490919063ffffffff16565b85600101819055506106623385600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661185c9092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364338560405161069392919061212c565b60405180910390a1505050505050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6106f5611728565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061077d61076a61271061075c600454866000015461184690919063ffffffff16565b61181a90919063ffffffff16565b836000015461180490919063ffffffff16565b9050600081116107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990612192565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161083f91906120da565b60206040518083038186803b15801561085757600080fd5b505afa15801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f9190611d8f565b81111561096657600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161091391906120da565b60206040518083038186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190611d8f565b90505b6109d7600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118e2909392919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610a1292919061212c565b60405180910390a15050565b610a2661196b565b73ffffffffffffffffffffffffffffffffffffffff16610a446110d2565b73ffffffffffffffffffffffffffffffffffffffff1614610a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a91906122b2565b60405180910390fd5b60008111610add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad490612352565b60405180910390fd5b8060068190555050565b60008211610b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2190612292565b60405180910390fd5b81600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b8691906120da565b60206040518083038186803b158015610b9e57600080fd5b505afa158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd69190611d8f565b11610c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0d90612372565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9390612232565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550610d7b826112fb565b5050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610dd161196b565b73ffffffffffffffffffffffffffffffffffffffff16610def6110d2565b73ffffffffffffffffffffffffffffffffffffffff1614610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c906122b2565b60405180910390fd5b60008111610e88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7f90612332565b60405180910390fd5b610e9e620151808261184690919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610ed39190612392565b60405180910390a150565b610ee661196b565b73ffffffffffffffffffffffffffffffffffffffff16610f046110d2565b73ffffffffffffffffffffffffffffffffffffffff1614610f5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f51906122b2565b60405180910390fd5b610f646000611973565b565b60085481565b610f7461196b565b73ffffffffffffffffffffffffffffffffffffffff16610f926110d2565b73ffffffffffffffffffffffffffffffffffffffff1614610fe8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdf906122b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1611611057576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104e90612272565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a87816040516110c791906120da565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61110361196b565b73ffffffffffffffffffffffffffffffffffffffff166111216110d2565b73ffffffffffffffffffffffffffffffffffffffff1614611177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116e906122b2565b60405180910390fd5b600081116111ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b190612312565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516111f09190612392565b60405180910390a150565b61120361196b565b73ffffffffffffffffffffffffffffffffffffffff166112216110d2565b73ffffffffffffffffffffffffffffffffffffffff1614611277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126e906122b2565b60405180910390fd5b600081116112ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b1906122d2565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516112f09190612392565b60405180910390a150565b6000811161133e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133590612292565b60405180910390fd5b80600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161139a91906120da565b60206040518083038186803b1580156113b257600080fd5b505afa1580156113c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ea9190611d8f565b1161142a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142190612372565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154146114af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a6906121b2565b60405180910390fd5b6114b7611728565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611549333084600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118e2909392919063ffffffff16565b61156082826001015461183090919063ffffffff16565b816001018190555061157d8260085461183090919063ffffffff16565b6008819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33836040516115b492919061212c565b60405180910390a15050565b6115c861196b565b73ffffffffffffffffffffffffffffffffffffffff166115e66110d2565b73ffffffffffffffffffffffffffffffffffffffff161461163c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611633906122b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a3906121f2565b60405180910390fd5b6116b581611973565b50565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006117d66127106117c86003546117ba6117a76121c061179989600401544361180490919063ffffffff16565b61181a90919063ffffffff16565b876001015461184690919063ffffffff16565b61184690919063ffffffff16565b61181a90919063ffffffff16565b90506117ef81836000015461183090919063ffffffff16565b82600001819055504382600401819055505050565b6000818361181291906124c0565b905092915050565b600081836118289190612435565b905092915050565b6000818361183e91906123df565b905092915050565b600081836118549190612466565b905092915050565b6118dd8363a9059cbb60e01b848460405160240161187b92919061212c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a37565b505050565b611965846323b872dd60e01b858585604051602401611903939291906120f5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a37565b50505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611a99826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611afe9092919063ffffffff16565b9050600081511115611af95780806020019051810190611ab99190611d35565b611af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aef906121d2565b60405180910390fd5b5b505050565b6060611b0d8484600085611b16565b90509392505050565b606082471015611b5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5290612252565b60405180910390fd5b611b6485611c2a565b611ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9a906122f2565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611bcc91906120c3565b60006040518083038185875af1925050503d8060008114611c09576040519150601f19603f3d011682016040523d82523d6000602084013e611c0e565b606091505b5091509150611c1e828286611c4d565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611c5d57829050611cad565b600083511115611c705782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ca49190612170565b60405180910390fd5b9392505050565b600081359050611cc381612972565b92915050565b600081519050611cd881612989565b92915050565b600081359050611ced816129a0565b92915050565b600081519050611d02816129a0565b92915050565b600060208284031215611d1e57611d1d612634565b5b6000611d2c84828501611cb4565b91505092915050565b600060208284031215611d4b57611d4a612634565b5b6000611d5984828501611cc9565b91505092915050565b600060208284031215611d7857611d77612634565b5b6000611d8684828501611cde565b91505092915050565b600060208284031215611da557611da4612634565b5b6000611db384828501611cf3565b91505092915050565b60008060408385031215611dd357611dd2612634565b5b6000611de185828601611cde565b9250506020611df285828601611cde565b9150509250929050565b611e05816124f4565b82525050565b6000611e16826123ad565b611e2081856123c3565b9350611e30818560208601612572565b80840191505092915050565b611e458161253c565b82525050565b6000611e56826123b8565b611e6081856123ce565b9350611e70818560208601612572565b611e7981612639565b840191505092915050565b6000611e916010836123ce565b9150611e9c8261264a565b602082019050919050565b6000611eb46015836123ce565b9150611ebf82612673565b602082019050919050565b6000611ed7602a836123ce565b9150611ee28261269c565b604082019050919050565b6000611efa6026836123ce565b9150611f05826126eb565b604082019050919050565b6000611f1d600e836123ce565b9150611f288261273a565b602082019050919050565b6000611f40600f836123ce565b9150611f4b82612763565b602082019050919050565b6000611f636026836123ce565b9150611f6e8261278c565b604082019050919050565b6000611f866026836123ce565b9150611f91826127db565b604082019050919050565b6000611fa9601f836123ce565b9150611fb48261282a565b602082019050919050565b6000611fcc6020836123ce565b9150611fd782612853565b602082019050919050565b6000611fef600d836123ce565b9150611ffa8261287c565b602082019050919050565b6000612012601d836123ce565b915061201d826128a5565b602082019050919050565b6000612035601a836123ce565b9150612040826128ce565b602082019050919050565b60006120586017836123ce565b9150612063826128f7565b602082019050919050565b600061207b600d836123ce565b915061208682612920565b602082019050919050565b600061209e600d836123ce565b91506120a982612949565b602082019050919050565b6120bd81612532565b82525050565b60006120cf8284611e0b565b915081905092915050565b60006020820190506120ef6000830184611dfc565b92915050565b600060608201905061210a6000830186611dfc565b6121176020830185611dfc565b61212460408301846120b4565b949350505050565b60006040820190506121416000830185611dfc565b61214e60208301846120b4565b9392505050565b600060208201905061216a6000830184611e3c565b92915050565b6000602082019050818103600083015261218a8184611e4b565b905092915050565b600060208201905081810360008301526121ab81611e84565b9050919050565b600060208201905081810360008301526121cb81611ea7565b9050919050565b600060208201905081810360008301526121eb81611eca565b9050919050565b6000602082019050818103600083015261220b81611eed565b9050919050565b6000602082019050818103600083015261222b81611f10565b9050919050565b6000602082019050818103600083015261224b81611f33565b9050919050565b6000602082019050818103600083015261226b81611f56565b9050919050565b6000602082019050818103600083015261228b81611f79565b9050919050565b600060208201905081810360008301526122ab81611f9c565b9050919050565b600060208201905081810360008301526122cb81611fbf565b9050919050565b600060208201905081810360008301526122eb81611fe2565b9050919050565b6000602082019050818103600083015261230b81612005565b9050919050565b6000602082019050818103600083015261232b81612028565b9050919050565b6000602082019050818103600083015261234b8161204b565b9050919050565b6000602082019050818103600083015261236b8161206e565b9050919050565b6000602082019050818103600083015261238b81612091565b9050919050565b60006020820190506123a760008301846120b4565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006123ea82612532565b91506123f583612532565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561242a576124296125d6565b5b828201905092915050565b600061244082612532565b915061244b83612532565b92508261245b5761245a612605565b5b828204905092915050565b600061247182612532565b915061247c83612532565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124b5576124b46125d6565b5b828202905092915050565b60006124cb82612532565b91506124d683612532565b9250828210156124e9576124e86125d6565b5b828203905092915050565b60006124ff82612512565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006125478261254e565b9050919050565b600061255982612560565b9050919050565b600061256b82612512565b9050919050565b60005b83811015612590578082015181840152602081019050612575565b8381111561259f576000848401525b50505050565b60006125b082612532565b91506125bb83612532565b9250826125cb576125ca612605565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420416464726573732e20416464726573732063616e2774206260008201527f65207a65726f0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b61297b816124f4565b811461298657600080fd5b50565b61299281612506565b811461299d57600080fd5b50565b6129a981612532565b81146129b457600080fd5b5056fea264697066735822122073ed29fae3c6e0506dc22901fec8f83dad4fa487c61a793c5aee3f934f4c452564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x9E447FC6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2B6 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x8A9D3839 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x228 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C6 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x6ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0xDC9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CE PUSH2 0xEDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH2 0xF6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x11FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x12FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH2 0x15C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A9 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST DUP4 LT PUSH2 0x50C JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x53E PUSH3 0x15180 PUSH2 0x530 DUP6 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x575 JUMPI PUSH2 0x56D PUSH1 0x6 SLOAD DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x1830 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x593 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x25A5 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x592 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x5A0 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x5D9 PUSH2 0x5CA PUSH2 0x2710 PUSH2 0x5BC DUP6 DUP9 PUSH2 0x1846 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x5F0 DUP5 PUSH1 0x8 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x60D DUP5 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x662 CALLER DUP6 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x693 SWAP3 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F5 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x77D PUSH2 0x76A PUSH2 0x2710 PUSH2 0x75C PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1846 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B9 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x86B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x966 JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x92B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x93F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x963 SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x9D7 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18E2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xA12 SWAP3 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xA26 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA44 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xB2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB21 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST GT PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP1 PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xD7B DUP3 PUSH2 0x12FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDD1 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDEF PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3C SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7F SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9E PUSH3 0x15180 DUP3 PUSH2 0x1846 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xEE6 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF04 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF51 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF64 PUSH1 0x0 PUSH2 0x1973 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF74 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF92 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDF SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x1057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xEDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1103 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1121 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1177 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116E SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B1 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11F0 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1203 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1221 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1277 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126E SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x12BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B1 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x12F0 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x133E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1335 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139A SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13EA SWAP2 SWAP1 PUSH2 0x1D8F JUMP JUMPDEST GT PUSH2 0x142A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1421 SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x14AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A6 SWAP1 PUSH2 0x21B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14B7 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1549 CALLER ADDRESS DUP5 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18E2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1560 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1830 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x157D DUP3 PUSH1 0x8 SLOAD PUSH2 0x1830 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x15B4 SWAP3 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x15C8 PUSH2 0x196B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15E6 PUSH2 0x10D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x163C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1633 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A3 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B5 DUP2 PUSH2 0x1973 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x17D6 PUSH2 0x2710 PUSH2 0x17C8 PUSH1 0x3 SLOAD PUSH2 0x17BA PUSH2 0x17A7 PUSH2 0x21C0 PUSH2 0x1799 DUP10 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1846 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1846 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17EF DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1830 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x2435 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x183E SWAP2 SWAP1 PUSH2 0x23DF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1854 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18DD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x187B SWAP3 SWAP2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A37 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1965 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1903 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A37 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A99 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AFE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1AF9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1AB9 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH2 0x1AF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AEF SWAP1 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B0D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1B5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B52 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B64 DUP6 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9A SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1BCC SWAP2 SWAP1 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C0E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1C1E DUP3 DUP3 DUP7 PUSH2 0x1C4D JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1C5D JUMPI DUP3 SWAP1 POP PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1C70 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA4 SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC3 DUP2 PUSH2 0x2972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CD8 DUP2 PUSH2 0x2989 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CED DUP2 PUSH2 0x29A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D02 DUP2 PUSH2 0x29A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1E JUMPI PUSH2 0x1D1D PUSH2 0x2634 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D2C DUP5 DUP3 DUP6 ADD PUSH2 0x1CB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D4B JUMPI PUSH2 0x1D4A PUSH2 0x2634 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D59 DUP5 DUP3 DUP6 ADD PUSH2 0x1CC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D78 JUMPI PUSH2 0x1D77 PUSH2 0x2634 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D86 DUP5 DUP3 DUP6 ADD PUSH2 0x1CDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA5 JUMPI PUSH2 0x1DA4 PUSH2 0x2634 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DB3 DUP5 DUP3 DUP6 ADD PUSH2 0x1CF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD3 JUMPI PUSH2 0x1DD2 PUSH2 0x2634 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1CDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1CDE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E05 DUP2 PUSH2 0x24F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E16 DUP3 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x1E20 DUP2 DUP6 PUSH2 0x23C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E30 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2572 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E45 DUP2 PUSH2 0x253C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E56 DUP3 PUSH2 0x23B8 JUMP JUMPDEST PUSH2 0x1E60 DUP2 DUP6 PUSH2 0x23CE JUMP JUMPDEST SWAP4 POP PUSH2 0x1E70 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2572 JUMP JUMPDEST PUSH2 0x1E79 DUP2 PUSH2 0x2639 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E91 PUSH1 0x10 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9C DUP3 PUSH2 0x264A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB4 PUSH1 0x15 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBF DUP3 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED7 PUSH1 0x2A DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE2 DUP3 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFA PUSH1 0x26 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F05 DUP3 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1D PUSH1 0xE DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F28 DUP3 PUSH2 0x273A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F40 PUSH1 0xF DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4B DUP3 PUSH2 0x2763 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F63 PUSH1 0x26 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F6E DUP3 PUSH2 0x278C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F86 PUSH1 0x26 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F91 DUP3 PUSH2 0x27DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA9 PUSH1 0x1F DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB4 DUP3 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCC PUSH1 0x20 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD7 DUP3 PUSH2 0x2853 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEF PUSH1 0xD DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFA DUP3 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2012 PUSH1 0x1D DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x201D DUP3 PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2035 PUSH1 0x1A DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x2040 DUP3 PUSH2 0x28CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2058 PUSH1 0x17 DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x2063 DUP3 PUSH2 0x28F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207B PUSH1 0xD DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x2086 DUP3 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209E PUSH1 0xD DUP4 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x20A9 DUP3 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20BD DUP2 PUSH2 0x2532 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CF DUP3 DUP5 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20EF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x210A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x2117 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x2124 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20B4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2141 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x214E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20B4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x216A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x218A DUP2 DUP5 PUSH2 0x1E4B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21AB DUP2 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21CB DUP2 PUSH2 0x1EA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21EB DUP2 PUSH2 0x1ECA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x220B DUP2 PUSH2 0x1EED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x222B DUP2 PUSH2 0x1F10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x224B DUP2 PUSH2 0x1F33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x226B DUP2 PUSH2 0x1F56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x228B DUP2 PUSH2 0x1F79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22AB DUP2 PUSH2 0x1F9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22CB DUP2 PUSH2 0x1FBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22EB DUP2 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x230B DUP2 PUSH2 0x2005 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232B DUP2 PUSH2 0x2028 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x234B DUP2 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x236B DUP2 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x238B DUP2 PUSH2 0x2091 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EA DUP3 PUSH2 0x2532 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F5 DUP4 PUSH2 0x2532 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x242A JUMPI PUSH2 0x2429 PUSH2 0x25D6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2440 DUP3 PUSH2 0x2532 JUMP JUMPDEST SWAP2 POP PUSH2 0x244B DUP4 PUSH2 0x2532 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x245B JUMPI PUSH2 0x245A PUSH2 0x2605 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2471 DUP3 PUSH2 0x2532 JUMP JUMPDEST SWAP2 POP PUSH2 0x247C DUP4 PUSH2 0x2532 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x24B5 JUMPI PUSH2 0x24B4 PUSH2 0x25D6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24CB DUP3 PUSH2 0x2532 JUMP JUMPDEST SWAP2 POP PUSH2 0x24D6 DUP4 PUSH2 0x2532 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x24E9 JUMPI PUSH2 0x24E8 PUSH2 0x25D6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24FF DUP3 PUSH2 0x2512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2547 DUP3 PUSH2 0x254E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2559 DUP3 PUSH2 0x2560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256B DUP3 PUSH2 0x2512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2590 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2575 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x259F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B0 DUP3 PUSH2 0x2532 JUMP JUMPDEST SWAP2 POP PUSH2 0x25BB DUP4 PUSH2 0x2532 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25CB JUMPI PUSH2 0x25CA PUSH2 0x2605 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420416464726573732E20416464726573732063616E27742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x297B DUP2 PUSH2 0x24F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2992 DUP2 PUSH2 0x2506 JUMP JUMPDEST DUP2 EQ PUSH2 0x299D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x29A9 DUP2 PUSH2 0x2532 JUMP JUMPDEST DUP2 EQ PUSH2 0x29B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xED29FAE3C6E0506DC22901FEC8F83DAD4FA487C6 BYTE PUSH26 0x3C5AEE3F934F4C452564736F6C63430008070033000000000000 ",
							"sourceMap": "260:7036:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3724:1176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7040:122;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6381:603;;;:::i;:::-;;5960:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2542:471;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6181:159;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5147:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;1042:26:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5685:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5403:274:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4912:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3077:600;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7174:119:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1075:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3724:1176;3787:21;3811:7;:19;3819:10;3811:19;;;;;;;;;;;;;;;3787:43;;3860:1;3851:6;:10;3843:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3926:6;:19;;;3916:6;:29;;3908:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3977:14;:12;:14::i;:::-;4002:27;4041:5;;;;;;;;;;;:15;;;4065:4;4041:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4032:6;:39;:81;;4083:5;;;;;;;;;;;:15;;;4107:4;4083:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4032:81;;;4074:6;4032:81;4002:111;;4124:14;4141:54;4188:6;4141:42;4161:6;:21;;;4141:15;:19;;:42;;;;:::i;:::-;:46;;:54;;;;:::i;:::-;4124:71;;4206:11;4220:3;4206:17;;4234:21;4273:1;4258:6;:11;;;:16;:134;;4352:40;4378:13;;4352:6;:21;;;:25;;:40;;;;:::i;:::-;4333:15;:59;;4258:134;;;4302:1;4286:12;;4277:6;:21;;;;:::i;:::-;:26;:40;;;;;4316:1;4307:6;:10;4277:40;4258:134;4234:158;;4408:16;4403:73;;4447:17;;4441:23;;4403:73;4508:62;4532:37;4565:3;4532:28;4556:3;4532:19;:23;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;4508:19;:23;;:62;;;;:::i;:::-;4486:84;;4595:36;4611:19;4595:11;;:15;;:36;;;;:::i;:::-;4581:11;:50;;;;4664:44;4688:19;4664:6;:19;;;:23;;:44;;;;:::i;:::-;4642:6;:19;;:66;;;;4719:51;4738:10;4750:19;4719:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;4788:41;4797:10;4809:19;4788:41;;;;;;;:::i;:::-;;;;;;;;3766:1134;;;;;3724:1176;:::o;7040:122::-;7085:7;7122;:19;7130:10;7122:19;;;;;;;;;;;;;;;:32;;;7115:39;;7040:122;:::o;6381:603::-;6427:14;:12;:14::i;:::-;6452:21;6476:7;:19;6484:10;6476:19;;;;;;;;;;;;;;;6452:43;;6506:21;6530:89;6561:57;6612:5;6561:46;6592:14;;6561:6;:26;;;:30;;:46;;;;:::i;:::-;:50;;:57;;;;:::i;:::-;6530:6;:26;;;:30;;:89;;;;:::i;:::-;6506:113;;6664:1;6648:13;:17;6640:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;6717:5;;;;;;;;;;;:15;;;6733:13;;;;;;;;;;;6717:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6701:13;:46;6697:111;;;6778:5;;;;;;;;;;;:15;;;6794:13;;;;;;;;;;;6778:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6762:46;;6697:111;6819:64;6842:13;;;;;;;;;;;6857:10;6869:13;6819:5;;;;;;;;;;;:22;;;;:64;;;;;;:::i;:::-;6923:1;6894:6;:26;;:30;;;;6942:34;6950:10;6962:13;6942:34;;;;;;;:::i;:::-;;;;;;;;6406:578;;6381:603::o;5960:162::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6056:1:7::1;6043:10;:14;6035:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;6104:10;6088:13;:26;;;;5960:162:::0;:::o;2542:471::-;2644:1;2634:7;:11;2626:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2730:7;2700:5;;;;;;;;;;;:15;;;2716:10;2700:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;2692:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2804:4;2774:7;:19;2782:10;2774:19;;;;;;;;;;;;;;;:26;;;:34;;2766:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2868:5;2841:7;:19;2849:10;2841:19;;;;;;;;;;;;;;;:24;;:32;;;;2921:15;2884:7;:19;2892:10;2884:19;;;;;;;;;;;;;;;:34;;:52;;;;2976:4;2947:7;:19;2955:10;2947:19;;;;;;;;;;;;;;;:26;;:33;;;;2991:14;2997:7;2991:5;:14::i;:::-;2542:471;;:::o;6181:159::-;6229:7;6293;:19;6301:10;6293:19;;;;;;;;;;;;;;;:39;;;6286:46;;6181:159;:::o;5147:248::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5258:1:7::1;5242:13;:17;5234:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5315:25;5333:6;5315:13;:17;;:25;;;;:::i;:::-;5300:12;:40;;;;5358:29;5373:13;5358:29;;;;;;:::i;:::-;;;;;;;;5147:248:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1042:26:7:-;;;;:::o;5685:267::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5807:1:7::1;5782:27;;:14;:27;;;5774:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;5881:14;5865:13;;:30;;;;;;;;;;;;;;;;;;5913:31;5929:14;5913:31;;;;;;:::i;:::-;;;;;;;;5685:267:::0;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;5403:274:7:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5529:1:7::1;5508:18;:22;5500:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5594:18;5574:17;:38;;;;5630:39;5650:18;5630:39;;;;;;:::i;:::-;;;;;;;;5403:274:::0;:::o;4912:227::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5020:1:7::1;5005:12;:16;4997:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;5074:12;5060:11;:26;;;;5104:27;5118:12;5104:27;;;;;;:::i;:::-;;;;;;;;4912:227:::0;:::o;3077:600::-;3154:1;3144:7;:11;3136:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3240:7;3210:5;;;;;;;;;;;:15;;;3226:10;3210:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3202:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3314:4;3284:7;:19;3292:10;3284:19;;;;;;;;;;;;;;;:26;;;:34;3276:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3365:14;:12;:14::i;:::-;3390:21;3414:7;:19;3422:10;3414:19;;;;;;;;;;;;;;;3390:43;;3444:58;3467:10;3487:4;3494:7;3444:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;3535:32;3559:7;3535:6;:19;;;:23;;:32;;;;:::i;:::-;3513:6;:19;;:54;;;;3592:24;3608:7;3592:11;;:15;;:24;;;;:::i;:::-;3578:11;:38;;;;3642:27;3649:10;3661:7;3642:27;;;;;;;:::i;:::-;;;;;;;;3115:562;3077:600;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;7174:119:7:-;7219:7;7246;:19;7254:10;7246:19;;;;;;;;;;;;;;;:39;;;7239:46;;7174:119;:::o;1075:19::-;;;;;;;;;;;;;:::o;2152:378::-;2204:21;2228:7;:19;2236:10;2228:19;;;;;;;;;;;;;;;2204:43;;2258:17;2278:108;2382:3;2278:99;2365:11;;2278:82;2302:57;2354:4;2302:47;2319:6;:29;;;2302:12;:16;;:47;;;;:::i;:::-;:51;;:57;;;;:::i;:::-;2278:6;:19;;;:23;;:82;;;;:::i;:::-;:86;;:99;;;;:::i;:::-;:103;;:108;;;;:::i;:::-;2258:128;;2426:41;2457:9;2426:6;:26;;;:30;;:41;;;;:::i;:::-;2397:6;:26;;:70;;;;2510:12;2478:6;:29;;:44;;;;2183:347;;2152:378::o;3108:96:4:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;290:177:6:-;373:86;393:5;423:23;;;448:2;452:5;400:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:19;:86::i;:::-;290:177;;;:::o;475:205::-;576:96;596:5;626:27;;;655:4;661:2;665:5;603:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:19;:96::i;:::-;475:205;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;2599:769:6:-;3031:23;3057:69;3085:4;3057:69;;;;;;;;;;;;;;;;;3065:5;3057:27;;;;:69;;;;;:::i;:::-;3031:95;;3161:1;3141:10;:17;:21;3137:224;;;3283:10;3272:30;;;;;;;;;;;;:::i;:::-;3264:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:224;2669:699;2599:769;;:::o;3861:223:2:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:474::-;2035:6;2043;2092:2;2080:9;2071:7;2067:23;2063:32;2060:119;;;2098:79;;:::i;:::-;2060:119;2218:1;2243:53;2288:7;2279:6;2268:9;2264:22;2243:53;:::i;:::-;2233:63;;2189:117;2345:2;2371:53;2416:7;2407:6;2396:9;2392:22;2371:53;:::i;:::-;2361:63;;2316:118;1967:474;;;;;:::o;2447:118::-;2534:24;2552:5;2534:24;:::i;:::-;2529:3;2522:37;2447:118;;:::o;2571:373::-;2675:3;2703:38;2735:5;2703:38;:::i;:::-;2757:88;2838:6;2833:3;2757:88;:::i;:::-;2750:95;;2854:52;2899:6;2894:3;2887:4;2880:5;2876:16;2854:52;:::i;:::-;2931:6;2926:3;2922:16;2915:23;;2679:265;2571:373;;;;:::o;2950:159::-;3051:51;3096:5;3051:51;:::i;:::-;3046:3;3039:64;2950:159;;:::o;3115:364::-;3203:3;3231:39;3264:5;3231:39;:::i;:::-;3286:71;3350:6;3345:3;3286:71;:::i;:::-;3279:78;;3366:52;3411:6;3406:3;3399:4;3392:5;3388:16;3366:52;:::i;:::-;3443:29;3465:6;3443:29;:::i;:::-;3438:3;3434:39;3427:46;;3207:272;3115:364;;;;:::o;3485:366::-;3627:3;3648:67;3712:2;3707:3;3648:67;:::i;:::-;3641:74;;3724:93;3813:3;3724:93;:::i;:::-;3842:2;3837:3;3833:12;3826:19;;3485:366;;;:::o;3857:::-;3999:3;4020:67;4084:2;4079:3;4020:67;:::i;:::-;4013:74;;4096:93;4185:3;4096:93;:::i;:::-;4214:2;4209:3;4205:12;4198:19;;3857:366;;;:::o;4229:::-;4371:3;4392:67;4456:2;4451:3;4392:67;:::i;:::-;4385:74;;4468:93;4557:3;4468:93;:::i;:::-;4586:2;4581:3;4577:12;4570:19;;4229:366;;;:::o;4601:::-;4743:3;4764:67;4828:2;4823:3;4764:67;:::i;:::-;4757:74;;4840:93;4929:3;4840:93;:::i;:::-;4958:2;4953:3;4949:12;4942:19;;4601:366;;;:::o;4973:::-;5115:3;5136:67;5200:2;5195:3;5136:67;:::i;:::-;5129:74;;5212:93;5301:3;5212:93;:::i;:::-;5330:2;5325:3;5321:12;5314:19;;4973:366;;;:::o;5345:::-;5487:3;5508:67;5572:2;5567:3;5508:67;:::i;:::-;5501:74;;5584:93;5673:3;5584:93;:::i;:::-;5702:2;5697:3;5693:12;5686:19;;5345:366;;;:::o;5717:::-;5859:3;5880:67;5944:2;5939:3;5880:67;:::i;:::-;5873:74;;5956:93;6045:3;5956:93;:::i;:::-;6074:2;6069:3;6065:12;6058:19;;5717:366;;;:::o;6089:::-;6231:3;6252:67;6316:2;6311:3;6252:67;:::i;:::-;6245:74;;6328:93;6417:3;6328:93;:::i;:::-;6446:2;6441:3;6437:12;6430:19;;6089:366;;;:::o;6461:::-;6603:3;6624:67;6688:2;6683:3;6624:67;:::i;:::-;6617:74;;6700:93;6789:3;6700:93;:::i;:::-;6818:2;6813:3;6809:12;6802:19;;6461:366;;;:::o;6833:::-;6975:3;6996:67;7060:2;7055:3;6996:67;:::i;:::-;6989:74;;7072:93;7161:3;7072:93;:::i;:::-;7190:2;7185:3;7181:12;7174:19;;6833:366;;;:::o;7205:::-;7347:3;7368:67;7432:2;7427:3;7368:67;:::i;:::-;7361:74;;7444:93;7533:3;7444:93;:::i;:::-;7562:2;7557:3;7553:12;7546:19;;7205:366;;;:::o;7577:::-;7719:3;7740:67;7804:2;7799:3;7740:67;:::i;:::-;7733:74;;7816:93;7905:3;7816:93;:::i;:::-;7934:2;7929:3;7925:12;7918:19;;7577:366;;;:::o;7949:::-;8091:3;8112:67;8176:2;8171:3;8112:67;:::i;:::-;8105:74;;8188:93;8277:3;8188:93;:::i;:::-;8306:2;8301:3;8297:12;8290:19;;7949:366;;;:::o;8321:::-;8463:3;8484:67;8548:2;8543:3;8484:67;:::i;:::-;8477:74;;8560:93;8649:3;8560:93;:::i;:::-;8678:2;8673:3;8669:12;8662:19;;8321:366;;;:::o;8693:::-;8835:3;8856:67;8920:2;8915:3;8856:67;:::i;:::-;8849:74;;8932:93;9021:3;8932:93;:::i;:::-;9050:2;9045:3;9041:12;9034:19;;8693:366;;;:::o;9065:::-;9207:3;9228:67;9292:2;9287:3;9228:67;:::i;:::-;9221:74;;9304:93;9393:3;9304:93;:::i;:::-;9422:2;9417:3;9413:12;9406:19;;9065:366;;;:::o;9437:118::-;9524:24;9542:5;9524:24;:::i;:::-;9519:3;9512:37;9437:118;;:::o;9561:271::-;9691:3;9713:93;9802:3;9793:6;9713:93;:::i;:::-;9706:100;;9823:3;9816:10;;9561:271;;;;:::o;9838:222::-;9931:4;9969:2;9958:9;9954:18;9946:26;;9982:71;10050:1;10039:9;10035:17;10026:6;9982:71;:::i;:::-;9838:222;;;;:::o;10066:442::-;10215:4;10253:2;10242:9;10238:18;10230:26;;10266:71;10334:1;10323:9;10319:17;10310:6;10266:71;:::i;:::-;10347:72;10415:2;10404:9;10400:18;10391:6;10347:72;:::i;:::-;10429;10497:2;10486:9;10482:18;10473:6;10429:72;:::i;:::-;10066:442;;;;;;:::o;10514:332::-;10635:4;10673:2;10662:9;10658:18;10650:26;;10686:71;10754:1;10743:9;10739:17;10730:6;10686:71;:::i;:::-;10767:72;10835:2;10824:9;10820:18;10811:6;10767:72;:::i;:::-;10514:332;;;;;:::o;10852:250::-;10959:4;10997:2;10986:9;10982:18;10974:26;;11010:85;11092:1;11081:9;11077:17;11068:6;11010:85;:::i;:::-;10852:250;;;;:::o;11108:313::-;11221:4;11259:2;11248:9;11244:18;11236:26;;11308:9;11302:4;11298:20;11294:1;11283:9;11279:17;11272:47;11336:78;11409:4;11400:6;11336:78;:::i;:::-;11328:86;;11108:313;;;;:::o;11427:419::-;11593:4;11631:2;11620:9;11616:18;11608:26;;11680:9;11674:4;11670:20;11666:1;11655:9;11651:17;11644:47;11708:131;11834:4;11708:131;:::i;:::-;11700:139;;11427:419;;;:::o;11852:::-;12018:4;12056:2;12045:9;12041:18;12033:26;;12105:9;12099:4;12095:20;12091:1;12080:9;12076:17;12069:47;12133:131;12259:4;12133:131;:::i;:::-;12125:139;;11852:419;;;:::o;12277:::-;12443:4;12481:2;12470:9;12466:18;12458:26;;12530:9;12524:4;12520:20;12516:1;12505:9;12501:17;12494:47;12558:131;12684:4;12558:131;:::i;:::-;12550:139;;12277:419;;;:::o;12702:::-;12868:4;12906:2;12895:9;12891:18;12883:26;;12955:9;12949:4;12945:20;12941:1;12930:9;12926:17;12919:47;12983:131;13109:4;12983:131;:::i;:::-;12975:139;;12702:419;;;:::o;13127:::-;13293:4;13331:2;13320:9;13316:18;13308:26;;13380:9;13374:4;13370:20;13366:1;13355:9;13351:17;13344:47;13408:131;13534:4;13408:131;:::i;:::-;13400:139;;13127:419;;;:::o;13552:::-;13718:4;13756:2;13745:9;13741:18;13733:26;;13805:9;13799:4;13795:20;13791:1;13780:9;13776:17;13769:47;13833:131;13959:4;13833:131;:::i;:::-;13825:139;;13552:419;;;:::o;13977:::-;14143:4;14181:2;14170:9;14166:18;14158:26;;14230:9;14224:4;14220:20;14216:1;14205:9;14201:17;14194:47;14258:131;14384:4;14258:131;:::i;:::-;14250:139;;13977:419;;;:::o;14402:::-;14568:4;14606:2;14595:9;14591:18;14583:26;;14655:9;14649:4;14645:20;14641:1;14630:9;14626:17;14619:47;14683:131;14809:4;14683:131;:::i;:::-;14675:139;;14402:419;;;:::o;14827:::-;14993:4;15031:2;15020:9;15016:18;15008:26;;15080:9;15074:4;15070:20;15066:1;15055:9;15051:17;15044:47;15108:131;15234:4;15108:131;:::i;:::-;15100:139;;14827:419;;;:::o;15252:::-;15418:4;15456:2;15445:9;15441:18;15433:26;;15505:9;15499:4;15495:20;15491:1;15480:9;15476:17;15469:47;15533:131;15659:4;15533:131;:::i;:::-;15525:139;;15252:419;;;:::o;15677:::-;15843:4;15881:2;15870:9;15866:18;15858:26;;15930:9;15924:4;15920:20;15916:1;15905:9;15901:17;15894:47;15958:131;16084:4;15958:131;:::i;:::-;15950:139;;15677:419;;;:::o;16102:::-;16268:4;16306:2;16295:9;16291:18;16283:26;;16355:9;16349:4;16345:20;16341:1;16330:9;16326:17;16319:47;16383:131;16509:4;16383:131;:::i;:::-;16375:139;;16102:419;;;:::o;16527:::-;16693:4;16731:2;16720:9;16716:18;16708:26;;16780:9;16774:4;16770:20;16766:1;16755:9;16751:17;16744:47;16808:131;16934:4;16808:131;:::i;:::-;16800:139;;16527:419;;;:::o;16952:::-;17118:4;17156:2;17145:9;17141:18;17133:26;;17205:9;17199:4;17195:20;17191:1;17180:9;17176:17;17169:47;17233:131;17359:4;17233:131;:::i;:::-;17225:139;;16952:419;;;:::o;17377:::-;17543:4;17581:2;17570:9;17566:18;17558:26;;17630:9;17624:4;17620:20;17616:1;17605:9;17601:17;17594:47;17658:131;17784:4;17658:131;:::i;:::-;17650:139;;17377:419;;;:::o;17802:::-;17968:4;18006:2;17995:9;17991:18;17983:26;;18055:9;18049:4;18045:20;18041:1;18030:9;18026:17;18019:47;18083:131;18209:4;18083:131;:::i;:::-;18075:139;;17802:419;;;:::o;18227:222::-;18320:4;18358:2;18347:9;18343:18;18335:26;;18371:71;18439:1;18428:9;18424:17;18415:6;18371:71;:::i;:::-;18227:222;;;;:::o;18536:98::-;18587:6;18621:5;18615:12;18605:22;;18536:98;;;:::o;18640:99::-;18692:6;18726:5;18720:12;18710:22;;18640:99;;;:::o;18745:147::-;18846:11;18883:3;18868:18;;18745:147;;;;:::o;18898:169::-;18982:11;19016:6;19011:3;19004:19;19056:4;19051:3;19047:14;19032:29;;18898:169;;;;:::o;19073:305::-;19113:3;19132:20;19150:1;19132:20;:::i;:::-;19127:25;;19166:20;19184:1;19166:20;:::i;:::-;19161:25;;19320:1;19252:66;19248:74;19245:1;19242:81;19239:107;;;19326:18;;:::i;:::-;19239:107;19370:1;19367;19363:9;19356:16;;19073:305;;;;:::o;19384:185::-;19424:1;19441:20;19459:1;19441:20;:::i;:::-;19436:25;;19475:20;19493:1;19475:20;:::i;:::-;19470:25;;19514:1;19504:35;;19519:18;;:::i;:::-;19504:35;19561:1;19558;19554:9;19549:14;;19384:185;;;;:::o;19575:348::-;19615:7;19638:20;19656:1;19638:20;:::i;:::-;19633:25;;19672:20;19690:1;19672:20;:::i;:::-;19667:25;;19860:1;19792:66;19788:74;19785:1;19782:81;19777:1;19770:9;19763:17;19759:105;19756:131;;;19867:18;;:::i;:::-;19756:131;19915:1;19912;19908:9;19897:20;;19575:348;;;;:::o;19929:191::-;19969:4;19989:20;20007:1;19989:20;:::i;:::-;19984:25;;20023:20;20041:1;20023:20;:::i;:::-;20018:25;;20062:1;20059;20056:8;20053:34;;;20067:18;;:::i;:::-;20053:34;20112:1;20109;20105:9;20097:17;;19929:191;;;;:::o;20126:96::-;20163:7;20192:24;20210:5;20192:24;:::i;:::-;20181:35;;20126:96;;;:::o;20228:90::-;20262:7;20305:5;20298:13;20291:21;20280:32;;20228:90;;;:::o;20324:126::-;20361:7;20401:42;20394:5;20390:54;20379:65;;20324:126;;;:::o;20456:77::-;20493:7;20522:5;20511:16;;20456:77;;;:::o;20539:140::-;20603:9;20636:37;20667:5;20636:37;:::i;:::-;20623:50;;20539:140;;;:::o;20685:126::-;20735:9;20768:37;20799:5;20768:37;:::i;:::-;20755:50;;20685:126;;;:::o;20817:113::-;20867:9;20900:24;20918:5;20900:24;:::i;:::-;20887:37;;20817:113;;;:::o;20936:307::-;21004:1;21014:113;21028:6;21025:1;21022:13;21014:113;;;21113:1;21108:3;21104:11;21098:18;21094:1;21089:3;21085:11;21078:39;21050:2;21047:1;21043:10;21038:15;;21014:113;;;21145:6;21142:1;21139:13;21136:101;;;21225:1;21216:6;21211:3;21207:16;21200:27;21136:101;20985:258;20936:307;;;:::o;21249:176::-;21281:1;21298:20;21316:1;21298:20;:::i;:::-;21293:25;;21332:20;21350:1;21332:20;:::i;:::-;21327:25;;21371:1;21361:35;;21376:18;;:::i;:::-;21361:35;21417:1;21414;21410:9;21405:14;;21249:176;;;;:::o;21431:180::-;21479:77;21476:1;21469:88;21576:4;21573:1;21566:15;21600:4;21597:1;21590:15;21617:180;21665:77;21662:1;21655:88;21762:4;21759:1;21752:15;21786:4;21783:1;21776:15;21926:117;22035:1;22032;22025:12;22049:102;22090:6;22141:2;22137:7;22132:2;22125:5;22121:14;22117:28;22107:38;;22049:102;;;:::o;22157:166::-;22297:18;22293:1;22285:6;22281:14;22274:42;22157:166;:::o;22329:171::-;22469:23;22465:1;22457:6;22453:14;22446:47;22329:171;:::o;22506:229::-;22646:34;22642:1;22634:6;22630:14;22623:58;22715:12;22710:2;22702:6;22698:15;22691:37;22506:229;:::o;22741:225::-;22881:34;22877:1;22869:6;22865:14;22858:58;22950:8;22945:2;22937:6;22933:15;22926:33;22741:225;:::o;22972:164::-;23112:16;23108:1;23100:6;23096:14;23089:40;22972:164;:::o;23142:165::-;23282:17;23278:1;23270:6;23266:14;23259:41;23142:165;:::o;23313:225::-;23453:34;23449:1;23441:6;23437:14;23430:58;23522:8;23517:2;23509:6;23505:15;23498:33;23313:225;:::o;23544:::-;23684:34;23680:1;23672:6;23668:14;23661:58;23753:8;23748:2;23740:6;23736:15;23729:33;23544:225;:::o;23775:181::-;23915:33;23911:1;23903:6;23899:14;23892:57;23775:181;:::o;23962:182::-;24102:34;24098:1;24090:6;24086:14;24079:58;23962:182;:::o;24150:163::-;24290:15;24286:1;24278:6;24274:14;24267:39;24150:163;:::o;24319:179::-;24459:31;24455:1;24447:6;24443:14;24436:55;24319:179;:::o;24504:176::-;24644:28;24640:1;24632:6;24628:14;24621:52;24504:176;:::o;24686:173::-;24826:25;24822:1;24814:6;24810:14;24803:49;24686:173;:::o;24865:163::-;25005:15;25001:1;24993:6;24989:14;24982:39;24865:163;:::o;25034:::-;25174:15;25170:1;25162:6;25158:14;25151:39;25034:163;:::o;25203:122::-;25276:24;25294:5;25276:24;:::i;:::-;25269:5;25266:35;25256:63;;25315:1;25312;25305:12;25256:63;25203:122;:::o;25331:116::-;25401:21;25416:5;25401:21;:::i;:::-;25394:5;25391:32;25381:60;;25437:1;25434;25427:12;25381:60;25331:116;:::o;25453:122::-;25526:24;25544:5;25526:24;:::i;:::-;25519:5;25516:35;25506:63;;25565:1;25562;25555:12;25506:63;25453:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2146600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"harvest()": "infinite",
								"owner()": "2589",
								"renounceOwnership()": "30463",
								"rewardAmount()": "2620",
								"rewardToHarvest()": "2577",
								"setBountyWallet(address)": "infinite",
								"setEventPeriod(uint256)": "infinite",
								"setLockupTime(uint256)": "24873",
								"setRewardRate(uint256)": "infinite",
								"setUnstakingFeeRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakedAmount()": "2578",
								"startStaking(uint256,uint256)": "infinite",
								"token()": "2710",
								"totalStaked()": "2452",
								"transferOwnership(address)": "30789",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Init()": "infinite",
								"calDaysFromTimestamp(uint256)": "infinite",
								"updateReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 7296,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1625,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1625,
									"end": 1629,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1625,
									"end": 1629,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1658,
									"end": 1672,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1655,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1642,
									"end": 1655,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1698,
									"end": 1704,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1688,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1683,
									"end": 1688,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1713,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1721,
									"end": 1935,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1721,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1781,
									"end": 1784,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 1767,
									"end": 1778,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1767,
									"end": 1784,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1784,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1784,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1826,
									"end": 1830,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1806,
									"end": 1823,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1830,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1806,
									"end": 1830,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1806,
									"end": 1830,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1806,
									"end": 1830,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1858,
									"end": 1861,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1841,
									"end": 1855,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1841,
									"end": 1861,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1861,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1861,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1861,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1887,
									"end": 1893,
									"name": "PUSH",
									"source": 7,
									"value": "93A80"
								},
								{
									"begin": 1872,
									"end": 1884,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1872,
									"end": 1893,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1893,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1893,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1893,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 7,
									"value": "76A700"
								},
								{
									"begin": 1904,
									"end": 1917,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1904,
									"end": 1927,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1904,
									"end": 1927,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1904,
									"end": 1927,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1904,
									"end": 1927,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1935,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 7296,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073ed29fae3c6e0506dc22901fec8f83dad4fa487c61a793c5aee3f934f4c452564736f6c63430008070033",
									".code": [
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "9E447FC6"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "9E447FC6"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "F7B2A7BE"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "8A9D3839"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "5D2EC65D"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "692642E7"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "373D6132"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "4641257D"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "4B62B70B"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7296,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6984,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6381,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6381,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6381,
											"end": 6984,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6381,
											"end": 6984,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6381,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6984,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3818,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3829,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3860,
											"end": 3861,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3851,
											"end": 3861,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3843,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3916,
											"end": 3922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3916,
											"end": 3945,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3916,
											"end": 3945,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3908,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3977,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3977,
											"end": 3991,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3977,
											"end": 3991,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3977,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4056,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4041,
											"end": 4056,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4056,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 4065,
											"end": 4069,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4038,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4071,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4032,
											"end": 4113,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4083,
											"end": 4088,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 4107,
											"end": 4111,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4083,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4032,
											"end": 4113,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4113,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4032,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4113,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4032,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4138,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4188,
											"end": 4194,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 4141,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4161,
											"end": 4167,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4161,
											"end": 4182,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4161,
											"end": 4182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4161,
											"end": 4182,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4156,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4141,
											"end": 4160,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4183,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4183,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4141,
											"end": 4183,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4183,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4141,
											"end": 4183,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4141,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4141,
											"end": 4187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4195,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4141,
											"end": 4195,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4195,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4141,
											"end": 4195,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4141,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4223,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4206,
											"end": 4223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4274,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4258,
											"end": 4264,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4269,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4258,
											"end": 4269,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4269,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4258,
											"end": 4392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4378,
											"end": 4391,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4378,
											"end": 4391,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4352,
											"end": 4377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4392,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4352,
											"end": 4392,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4392,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4392,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4352,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4392,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4258,
											"end": 4392,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4392,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4258,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4298,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4286,
											"end": 4298,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4283,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4277,
											"end": 4298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4277,
											"end": 4298,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4277,
											"end": 4298,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4277,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4317,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4277,
											"end": 4317,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4307,
											"end": 4313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4317,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4317,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4277,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4392,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4258,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4403,
											"end": 4476,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4464,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4447,
											"end": 4464,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4476,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4403,
											"end": 4476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4532,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 4565,
											"end": 4568,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 4556,
											"end": 4559,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4551,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 4532,
											"end": 4555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4532,
											"end": 4564,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4569,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4569,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4532,
											"end": 4569,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4569,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4532,
											"end": 4569,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 4532,
											"end": 4569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4527,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4508,
											"end": 4531,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4570,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4570,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4570,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4570,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4508,
											"end": 4570,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4508,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4570,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4611,
											"end": 4630,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4606,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4595,
											"end": 4606,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4595,
											"end": 4610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4592,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4581,
											"end": 4631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4631,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4688,
											"end": 4707,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4670,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4683,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4664,
											"end": 4683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4683,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4664,
											"end": 4687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4708,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4708,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4664,
											"end": 4708,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4708,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4664,
											"end": 4708,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4664,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4648,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4661,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4642,
											"end": 4661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4708,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4708,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4738,
											"end": 4748,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4769,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4770,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4770,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4719,
											"end": 4770,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4770,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4719,
											"end": 4770,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4719,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "PUSH",
											"source": 7,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 4797,
											"end": 4807,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 4828,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4829,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 4900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 4900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 4900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 4900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 4900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 4900,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7085,
											"end": 7092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7129,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7130,
											"end": 7140,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7154,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7122,
											"end": 7154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7154,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7115,
											"end": 7154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7115,
											"end": 7154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7162,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6381,
											"end": 6984,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6381,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6427,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6427,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6427,
											"end": 6441,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6427,
											"end": 6441,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6427,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6483,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6494,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6495,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6561,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 6561,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6592,
											"end": 6606,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 6606,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6587,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 6561,
											"end": 6591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6607,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6561,
											"end": 6607,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6607,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6561,
											"end": 6607,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6561,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6618,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6618,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6561,
											"end": 6618,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6618,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6561,
											"end": 6618,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6561,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6536,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6556,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6530,
											"end": 6560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6619,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6619,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6619,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6619,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6530,
											"end": 6619,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6530,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6665,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6640,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6732,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6717,
											"end": 6732,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6732,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6733,
											"end": 6746,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6733,
											"end": 6746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6733,
											"end": 6746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6746,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6746,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6733,
											"end": 6746,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6746,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6746,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6733,
											"end": 6746,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6717,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6714,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6747,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6697,
											"end": 6808,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6697,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 6697,
											"end": 6808,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6793,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6778,
											"end": 6793,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6793,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 6778,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6697,
											"end": 6808,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 6697,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6842,
											"end": 6855,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6857,
											"end": 6867,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6869,
											"end": 6882,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6841,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6819,
											"end": 6841,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6819,
											"end": 6841,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6883,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6883,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6883,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6819,
											"end": 6883,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6883,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6819,
											"end": 6883,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6819,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6923,
											"end": 6924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6894,
											"end": 6900,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6894,
											"end": 6920,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6924,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6924,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "PUSH",
											"source": 7,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 6950,
											"end": 6960,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6962,
											"end": 6975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6984,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6056,
											"end": 6057,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6053,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6057,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6035,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6101,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6088,
											"end": 6114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6114,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6122,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2645,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2700,
											"end": 2715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2716,
											"end": 2726,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2700,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2737,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2692,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2774,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2792,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2800,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2774,
											"end": 2800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2800,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2808,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2808,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2766,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2848,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2859,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2873,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2902,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2918,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2884,
											"end": 2918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2936,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2936,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2936,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 2980,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2947,
											"end": 2954,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2965,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2973,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2947,
											"end": 2973,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2980,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2997,
											"end": 3004,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2991,
											"end": 3005,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2991,
											"end": 3005,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2991,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 3013,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6229,
											"end": 6236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6293,
											"end": 6300,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6311,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6293,
											"end": 6312,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6332,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6293,
											"end": 6332,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6332,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6286,
											"end": 6332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6286,
											"end": 6332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6340,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5259,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5234,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 5333,
											"end": 5339,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 5315,
											"end": 5328,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5315,
											"end": 5332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "PUSH",
											"source": 7,
											"value": "189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C"
										},
										{
											"begin": 5373,
											"end": 5386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5387,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5395,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1068,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5809,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5782,
											"end": 5809,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5809,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5782,
											"end": 5809,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5809,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5774,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5895,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5878,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5865,
											"end": 5878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "PUSH",
											"source": 7,
											"value": "EDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87"
										},
										{
											"begin": 5929,
											"end": 5943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5952,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5530,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 5500,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5594,
											"end": 5612,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5591,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5574,
											"end": 5612,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5612,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5612,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "PUSH",
											"source": 7,
											"value": "150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81"
										},
										{
											"begin": 5650,
											"end": 5668,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5669,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5677,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5017,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5021,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4997,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5074,
											"end": 5086,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5071,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5060,
											"end": 5086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5086,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "PUSH",
											"source": 7,
											"value": "1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F"
										},
										{
											"begin": 5118,
											"end": 5130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5131,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 5139,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3136,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3240,
											"end": 3247,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3226,
											"end": 3236,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3210,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3247,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3318,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3284,
											"end": 3291,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3302,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3318,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3276,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3365,
											"end": 3379,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3379,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3365,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3421,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3432,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3433,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3467,
											"end": 3477,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3491,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3501,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3466,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3444,
											"end": 3466,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3444,
											"end": 3466,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3502,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3502,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3502,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3502,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3444,
											"end": 3502,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3502,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3444,
											"end": 3502,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3444,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3559,
											"end": 3566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3554,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3535,
											"end": 3554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3554,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3535,
											"end": 3558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3567,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3567,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3567,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3535,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3532,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3513,
											"end": 3532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3567,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3592,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3608,
											"end": 3615,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3592,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3592,
											"end": 3607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3592,
											"end": 3616,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3592,
											"end": 3616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3592,
											"end": 3616,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3592,
											"end": 3616,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3592,
											"end": 3616,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3592,
											"end": 3616,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3592,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3589,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3578,
											"end": 3616,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3616,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3616,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "PUSH",
											"source": 7,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3677,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7253,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7264,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7285,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7239,
											"end": 7285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7239,
											"end": 7285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7293,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2152,
											"end": 2530,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2152,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2204,
											"end": 2225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2235,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2204,
											"end": 2247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2204,
											"end": 2247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2382,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2278,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2302,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "PUSH",
											"source": 7,
											"value": "21C0"
										},
										{
											"begin": 2302,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2319,
											"end": 2348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2348,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2302,
											"end": 2318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2349,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2349,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2302,
											"end": 2349,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2349,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2349,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2302,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2302,
											"end": 2353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2359,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2302,
											"end": 2359,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2359,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2359,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2302,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2284,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2297,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2278,
											"end": 2297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2297,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2360,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2360,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2360,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2360,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2360,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2278,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2278,
											"end": 2364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2377,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2377,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2377,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2278,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2278,
											"end": 2381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2386,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2386,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2386,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2386,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2278,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2452,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2452,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2426,
											"end": 2456,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2467,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2467,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2426,
											"end": 2467,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2467,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2426,
											"end": 2467,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2426,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2467,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2467,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2507,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2478,
											"end": 2507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2522,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2522,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2522,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2530,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 452,
											"end": 457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 655,
											"end": 659,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 661,
											"end": 663,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3085,
											"end": 3089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3070,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2094,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2277,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2529,
											"end": 2532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2559,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 2838,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2885,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3203,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 3264,
											"end": 3269,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3345,
											"end": 3348,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3403,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3441,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3712,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3707,
											"end": 3710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4002,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 4079,
											"end": 4082,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 4185,
											"end": 4188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4205,
											"end": 4217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 4451,
											"end": 4454,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4557,
											"end": 4560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4588,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 4828,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4823,
											"end": 4826,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 4956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5195,
											"end": 5198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5487,
											"end": 5490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5572,
											"end": 5574,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 5567,
											"end": 5570,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 5673,
											"end": 5676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5702,
											"end": 5704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5697,
											"end": 5700,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 5944,
											"end": 5946,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5939,
											"end": 5942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6076,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 6417,
											"end": 6420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6448,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6441,
											"end": 6444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6603,
											"end": 6606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6683,
											"end": 6686,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6818,
											"end": 6820,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6813,
											"end": 6816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 6978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7058,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 7161,
											"end": 7164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7192,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 7432,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7557,
											"end": 7560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7719,
											"end": 7722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 7799,
											"end": 7802,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 7905,
											"end": 7908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 7937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8094,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 8277,
											"end": 8280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8297,
											"end": 8309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8463,
											"end": 8466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 8548,
											"end": 8550,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 8543,
											"end": 8546,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 8649,
											"end": 8652,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8678,
											"end": 8680,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8673,
											"end": 8676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8669,
											"end": 8681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8835,
											"end": 8838,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 8920,
											"end": 8922,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 8915,
											"end": 8918,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8849,
											"end": 8923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8849,
											"end": 8923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 9021,
											"end": 9024,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9050,
											"end": 9052,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9041,
											"end": 9053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9207,
											"end": 9210,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9228,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 9292,
											"end": 9294,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 9287,
											"end": 9290,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9228,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 9228,
											"end": 9295,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9228,
											"end": 9295,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 9228,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9221,
											"end": 9295,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9221,
											"end": 9295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 9393,
											"end": 9396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 9304,
											"end": 9397,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9304,
											"end": 9397,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 9304,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9422,
											"end": 9424,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9417,
											"end": 9420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9413,
											"end": 9425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9437,
											"end": 9555,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 9437,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9524,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 9542,
											"end": 9547,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9524,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 9524,
											"end": 9548,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9524,
											"end": 9548,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 9524,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9519,
											"end": 9522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9512,
											"end": 9549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9555,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9561,
											"end": 9832,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 9561,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 9802,
											"end": 9805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9793,
											"end": 9799,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9713,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 9713,
											"end": 9806,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9713,
											"end": 9806,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 9713,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9706,
											"end": 9806,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9706,
											"end": 9806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9823,
											"end": 9826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9816,
											"end": 9826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9816,
											"end": 9826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9561,
											"end": 9832,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9561,
											"end": 9832,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9561,
											"end": 9832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9561,
											"end": 9832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9561,
											"end": 9832,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9838,
											"end": 10060,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 9838,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9931,
											"end": 9935,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9969,
											"end": 9971,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9946,
											"end": 9972,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9946,
											"end": 9972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9982,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 10050,
											"end": 10051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10048,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10035,
											"end": 10052,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10032,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9982,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9982,
											"end": 10053,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9982,
											"end": 10053,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 9982,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9838,
											"end": 10060,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9838,
											"end": 10060,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9838,
											"end": 10060,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9838,
											"end": 10060,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9838,
											"end": 10060,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10066,
											"end": 10508,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 10066,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10253,
											"end": 10255,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10242,
											"end": 10251,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10238,
											"end": 10256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10256,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 10334,
											"end": 10335,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10323,
											"end": 10332,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10310,
											"end": 10316,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10347,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 10415,
											"end": 10417,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10404,
											"end": 10413,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10400,
											"end": 10418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10397,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10347,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 10347,
											"end": 10419,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10347,
											"end": 10419,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 10347,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 10497,
											"end": 10499,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10486,
											"end": 10495,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10482,
											"end": 10500,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10479,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 10429,
											"end": 10501,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10429,
											"end": 10501,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 10429,
											"end": 10501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10508,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10508,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10508,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10514,
											"end": 10846,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 10514,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10635,
											"end": 10639,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10675,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10662,
											"end": 10671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10658,
											"end": 10676,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10650,
											"end": 10676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10650,
											"end": 10676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10686,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 10754,
											"end": 10755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10743,
											"end": 10752,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10739,
											"end": 10756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10730,
											"end": 10736,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10686,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 10686,
											"end": 10757,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10686,
											"end": 10757,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 10686,
											"end": 10757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10767,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 10835,
											"end": 10837,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10824,
											"end": 10833,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10820,
											"end": 10838,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10767,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 10767,
											"end": 10839,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10767,
											"end": 10839,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 10767,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10514,
											"end": 10846,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10514,
											"end": 10846,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10514,
											"end": 10846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10514,
											"end": 10846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10514,
											"end": 10846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10514,
											"end": 10846,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10852,
											"end": 11102,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 10852,
											"end": 11102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10997,
											"end": 10999,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10986,
											"end": 10995,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10974,
											"end": 11000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10974,
											"end": 11000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 11092,
											"end": 11093,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11081,
											"end": 11090,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11068,
											"end": 11074,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 11010,
											"end": 11095,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11010,
											"end": 11095,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 11010,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10852,
											"end": 11102,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10852,
											"end": 11102,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10852,
											"end": 11102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10852,
											"end": 11102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10852,
											"end": 11102,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11108,
											"end": 11421,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 11108,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11225,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11259,
											"end": 11261,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11248,
											"end": 11257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11244,
											"end": 11262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11236,
											"end": 11262,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11236,
											"end": 11262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11308,
											"end": 11317,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11302,
											"end": 11306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11298,
											"end": 11318,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11294,
											"end": 11295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11292,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11279,
											"end": 11296,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11272,
											"end": 11319,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11336,
											"end": 11414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 11409,
											"end": 11413,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11400,
											"end": 11406,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11336,
											"end": 11414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 11336,
											"end": 11414,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11336,
											"end": 11414,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 11336,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11328,
											"end": 11414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11328,
											"end": 11414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11421,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11421,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11421,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11427,
											"end": 11846,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 11427,
											"end": 11846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11593,
											"end": 11597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11631,
											"end": 11633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11616,
											"end": 11634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11608,
											"end": 11634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11608,
											"end": 11634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11680,
											"end": 11689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11674,
											"end": 11678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11666,
											"end": 11667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11655,
											"end": 11664,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11651,
											"end": 11668,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11644,
											"end": 11691,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11708,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 11834,
											"end": 11838,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11708,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11708,
											"end": 11839,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11708,
											"end": 11839,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 11708,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11839,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11839,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11427,
											"end": 11846,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11427,
											"end": 11846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11427,
											"end": 11846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11427,
											"end": 11846,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11852,
											"end": 12271,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 11852,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12018,
											"end": 12022,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12056,
											"end": 12058,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12045,
											"end": 12054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12033,
											"end": 12059,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12033,
											"end": 12059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12105,
											"end": 12114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12095,
											"end": 12115,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12091,
											"end": 12092,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12080,
											"end": 12089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12076,
											"end": 12093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12069,
											"end": 12116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12133,
											"end": 12264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 12259,
											"end": 12263,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12133,
											"end": 12264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 12133,
											"end": 12264,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12133,
											"end": 12264,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 12133,
											"end": 12264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12125,
											"end": 12264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12125,
											"end": 12264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11852,
											"end": 12271,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11852,
											"end": 12271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11852,
											"end": 12271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11852,
											"end": 12271,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12277,
											"end": 12696,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 12277,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12443,
											"end": 12447,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12481,
											"end": 12483,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12470,
											"end": 12479,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12466,
											"end": 12484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12458,
											"end": 12484,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12458,
											"end": 12484,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12530,
											"end": 12539,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12524,
											"end": 12528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12520,
											"end": 12540,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12516,
											"end": 12517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12505,
											"end": 12514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12501,
											"end": 12518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12494,
											"end": 12541,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12558,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 12684,
											"end": 12688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12558,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 12558,
											"end": 12689,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12558,
											"end": 12689,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 12558,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12550,
											"end": 12689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12550,
											"end": 12689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12277,
											"end": 12696,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12277,
											"end": 12696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12277,
											"end": 12696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12277,
											"end": 12696,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12702,
											"end": 13121,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 12702,
											"end": 13121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12868,
											"end": 12872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12906,
											"end": 12908,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12895,
											"end": 12904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12891,
											"end": 12909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12883,
											"end": 12909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12883,
											"end": 12909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12955,
											"end": 12964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12949,
											"end": 12953,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12945,
											"end": 12965,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12941,
											"end": 12942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12930,
											"end": 12939,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12926,
											"end": 12943,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12919,
											"end": 12966,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 13109,
											"end": 13113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 12983,
											"end": 13114,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12983,
											"end": 13114,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 12983,
											"end": 13114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12975,
											"end": 13114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12975,
											"end": 13114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12702,
											"end": 13121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12702,
											"end": 13121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12702,
											"end": 13121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12702,
											"end": 13121,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13127,
											"end": 13546,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 13127,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13293,
											"end": 13297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13331,
											"end": 13333,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13320,
											"end": 13329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13316,
											"end": 13334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13308,
											"end": 13334,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13308,
											"end": 13334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13380,
											"end": 13389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13374,
											"end": 13378,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13370,
											"end": 13390,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13366,
											"end": 13367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 13364,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13351,
											"end": 13368,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13344,
											"end": 13391,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 13534,
											"end": 13538,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 13408,
											"end": 13539,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13408,
											"end": 13539,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 13408,
											"end": 13539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13400,
											"end": 13539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13400,
											"end": 13539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13127,
											"end": 13546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13127,
											"end": 13546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13127,
											"end": 13546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13127,
											"end": 13546,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13552,
											"end": 13971,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 13552,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13718,
											"end": 13722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13756,
											"end": 13758,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13745,
											"end": 13754,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13741,
											"end": 13759,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 13759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 13759,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13805,
											"end": 13814,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13799,
											"end": 13803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13795,
											"end": 13815,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13791,
											"end": 13792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13780,
											"end": 13789,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13776,
											"end": 13793,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13769,
											"end": 13816,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13833,
											"end": 13964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 13959,
											"end": 13963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13833,
											"end": 13964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 13833,
											"end": 13964,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13833,
											"end": 13964,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 13833,
											"end": 13964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13825,
											"end": 13964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13825,
											"end": 13964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13552,
											"end": 13971,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13552,
											"end": 13971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13552,
											"end": 13971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13552,
											"end": 13971,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13977,
											"end": 14396,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 13977,
											"end": 14396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14143,
											"end": 14147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14181,
											"end": 14183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14170,
											"end": 14179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14166,
											"end": 14184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14158,
											"end": 14184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14158,
											"end": 14184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14230,
											"end": 14239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14224,
											"end": 14228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14220,
											"end": 14240,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14216,
											"end": 14217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14205,
											"end": 14214,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14201,
											"end": 14218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14194,
											"end": 14241,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14258,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 14384,
											"end": 14388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14258,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 14258,
											"end": 14389,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14258,
											"end": 14389,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 14258,
											"end": 14389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14250,
											"end": 14389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14250,
											"end": 14389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13977,
											"end": 14396,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13977,
											"end": 14396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13977,
											"end": 14396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13977,
											"end": 14396,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14402,
											"end": 14821,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 14402,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14568,
											"end": 14572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14606,
											"end": 14608,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14595,
											"end": 14604,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14591,
											"end": 14609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14583,
											"end": 14609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14583,
											"end": 14609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14655,
											"end": 14664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14649,
											"end": 14653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14645,
											"end": 14665,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14641,
											"end": 14642,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14630,
											"end": 14639,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14626,
											"end": 14643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14619,
											"end": 14666,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14683,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 14809,
											"end": 14813,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14683,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 14683,
											"end": 14814,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14683,
											"end": 14814,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 14683,
											"end": 14814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14675,
											"end": 14814,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14675,
											"end": 14814,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14402,
											"end": 14821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14402,
											"end": 14821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14402,
											"end": 14821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14402,
											"end": 14821,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14827,
											"end": 15246,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 14827,
											"end": 15246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14993,
											"end": 14997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15031,
											"end": 15033,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15020,
											"end": 15029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15016,
											"end": 15034,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15008,
											"end": 15034,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15008,
											"end": 15034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15080,
											"end": 15089,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15074,
											"end": 15078,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15070,
											"end": 15090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15066,
											"end": 15067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15055,
											"end": 15064,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15051,
											"end": 15068,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15044,
											"end": 15091,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15108,
											"end": 15239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 15234,
											"end": 15238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15108,
											"end": 15239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 15108,
											"end": 15239,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15108,
											"end": 15239,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 15108,
											"end": 15239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15100,
											"end": 15239,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15100,
											"end": 15239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14827,
											"end": 15246,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14827,
											"end": 15246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14827,
											"end": 15246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14827,
											"end": 15246,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15252,
											"end": 15671,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 15252,
											"end": 15671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15418,
											"end": 15422,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15456,
											"end": 15458,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15445,
											"end": 15454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15441,
											"end": 15459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15433,
											"end": 15459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15433,
											"end": 15459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15505,
											"end": 15514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15499,
											"end": 15503,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15495,
											"end": 15515,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15491,
											"end": 15492,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15480,
											"end": 15489,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15476,
											"end": 15493,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15469,
											"end": 15516,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15533,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 15659,
											"end": 15663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15533,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 15533,
											"end": 15664,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15533,
											"end": 15664,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 15533,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15525,
											"end": 15664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15525,
											"end": 15664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15252,
											"end": 15671,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15252,
											"end": 15671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15252,
											"end": 15671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15252,
											"end": 15671,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15677,
											"end": 16096,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 15677,
											"end": 16096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15843,
											"end": 15847,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15881,
											"end": 15883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15870,
											"end": 15879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15866,
											"end": 15884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15858,
											"end": 15884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15858,
											"end": 15884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15930,
											"end": 15939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15924,
											"end": 15928,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15920,
											"end": 15940,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15916,
											"end": 15917,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15905,
											"end": 15914,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15901,
											"end": 15918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15894,
											"end": 15941,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15958,
											"end": 16089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 16084,
											"end": 16088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15958,
											"end": 16089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 15958,
											"end": 16089,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15958,
											"end": 16089,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 15958,
											"end": 16089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15950,
											"end": 16089,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15950,
											"end": 16089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15677,
											"end": 16096,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15677,
											"end": 16096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15677,
											"end": 16096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15677,
											"end": 16096,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16102,
											"end": 16521,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 16102,
											"end": 16521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16268,
											"end": 16272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16306,
											"end": 16308,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16295,
											"end": 16304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16291,
											"end": 16309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16355,
											"end": 16364,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16349,
											"end": 16353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16345,
											"end": 16365,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16341,
											"end": 16342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16330,
											"end": 16339,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16326,
											"end": 16343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16319,
											"end": 16366,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16383,
											"end": 16514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 16509,
											"end": 16513,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16383,
											"end": 16514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16383,
											"end": 16514,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16383,
											"end": 16514,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 16383,
											"end": 16514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16375,
											"end": 16514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16375,
											"end": 16514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16102,
											"end": 16521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16102,
											"end": 16521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16102,
											"end": 16521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16102,
											"end": 16521,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16527,
											"end": 16946,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 16527,
											"end": 16946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16693,
											"end": 16697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16731,
											"end": 16733,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16720,
											"end": 16729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16716,
											"end": 16734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16708,
											"end": 16734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16708,
											"end": 16734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16780,
											"end": 16789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16774,
											"end": 16778,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16766,
											"end": 16767,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16755,
											"end": 16764,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16751,
											"end": 16768,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16744,
											"end": 16791,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16808,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 16934,
											"end": 16938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16808,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 16808,
											"end": 16939,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16808,
											"end": 16939,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 16808,
											"end": 16939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16800,
											"end": 16939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16800,
											"end": 16939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16527,
											"end": 16946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16527,
											"end": 16946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16527,
											"end": 16946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16527,
											"end": 16946,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16952,
											"end": 17371,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 16952,
											"end": 17371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17118,
											"end": 17122,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17156,
											"end": 17158,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17145,
											"end": 17154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17141,
											"end": 17159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17133,
											"end": 17159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17133,
											"end": 17159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17205,
											"end": 17214,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17199,
											"end": 17203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17195,
											"end": 17215,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17191,
											"end": 17192,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17180,
											"end": 17189,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17176,
											"end": 17193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17169,
											"end": 17216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17233,
											"end": 17364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 17359,
											"end": 17363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17233,
											"end": 17364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 17233,
											"end": 17364,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17233,
											"end": 17364,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 17233,
											"end": 17364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17225,
											"end": 17364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17225,
											"end": 17364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16952,
											"end": 17371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16952,
											"end": 17371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16952,
											"end": 17371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16952,
											"end": 17371,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17377,
											"end": 17796,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 17377,
											"end": 17796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17543,
											"end": 17547,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17581,
											"end": 17583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17570,
											"end": 17579,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17566,
											"end": 17584,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17558,
											"end": 17584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17558,
											"end": 17584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17630,
											"end": 17639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17624,
											"end": 17628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17620,
											"end": 17640,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17616,
											"end": 17617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17605,
											"end": 17614,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17601,
											"end": 17618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17594,
											"end": 17641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17658,
											"end": 17789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 17784,
											"end": 17788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17658,
											"end": 17789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 17658,
											"end": 17789,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17658,
											"end": 17789,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 17658,
											"end": 17789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17650,
											"end": 17789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17650,
											"end": 17789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17377,
											"end": 17796,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17377,
											"end": 17796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17377,
											"end": 17796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17377,
											"end": 17796,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17802,
											"end": 18221,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 17802,
											"end": 18221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17968,
											"end": 17972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18006,
											"end": 18008,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17995,
											"end": 18004,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17991,
											"end": 18009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17983,
											"end": 18009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17983,
											"end": 18009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18055,
											"end": 18064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18049,
											"end": 18053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18045,
											"end": 18065,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18041,
											"end": 18042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18030,
											"end": 18039,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18026,
											"end": 18043,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18019,
											"end": 18066,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18083,
											"end": 18214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 18209,
											"end": 18213,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18083,
											"end": 18214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 18083,
											"end": 18214,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18083,
											"end": 18214,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 18083,
											"end": 18214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18075,
											"end": 18214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18075,
											"end": 18214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17802,
											"end": 18221,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17802,
											"end": 18221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17802,
											"end": 18221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17802,
											"end": 18221,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18227,
											"end": 18449,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 18227,
											"end": 18449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18320,
											"end": 18324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18358,
											"end": 18360,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18347,
											"end": 18356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18343,
											"end": 18361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18335,
											"end": 18361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18335,
											"end": 18361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18371,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 18439,
											"end": 18440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18428,
											"end": 18437,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18424,
											"end": 18441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18415,
											"end": 18421,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18371,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 18371,
											"end": 18442,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18371,
											"end": 18442,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 18371,
											"end": 18442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18227,
											"end": 18449,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18227,
											"end": 18449,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18227,
											"end": 18449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18227,
											"end": 18449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18227,
											"end": 18449,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18536,
											"end": 18634,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 18536,
											"end": 18634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18587,
											"end": 18593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18621,
											"end": 18626,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18615,
											"end": 18627,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18605,
											"end": 18627,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18605,
											"end": 18627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18536,
											"end": 18634,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18536,
											"end": 18634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18536,
											"end": 18634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18536,
											"end": 18634,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18640,
											"end": 18739,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 18640,
											"end": 18739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18692,
											"end": 18698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18726,
											"end": 18731,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18720,
											"end": 18732,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18710,
											"end": 18732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18710,
											"end": 18732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18640,
											"end": 18739,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18640,
											"end": 18739,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18640,
											"end": 18739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18640,
											"end": 18739,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18745,
											"end": 18892,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 18745,
											"end": 18892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18846,
											"end": 18857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18883,
											"end": 18886,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18868,
											"end": 18886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18868,
											"end": 18886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18892,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18892,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18892,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18892,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18892,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18898,
											"end": 19067,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 18898,
											"end": 19067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18982,
											"end": 18993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19016,
											"end": 19022,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19011,
											"end": 19014,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19004,
											"end": 19023,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19056,
											"end": 19060,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19051,
											"end": 19054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19047,
											"end": 19061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19032,
											"end": 19061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19032,
											"end": 19061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18898,
											"end": 19067,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18898,
											"end": 19067,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18898,
											"end": 19067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18898,
											"end": 19067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18898,
											"end": 19067,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19073,
											"end": 19378,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 19073,
											"end": 19378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19113,
											"end": 19116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19132,
											"end": 19152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 19150,
											"end": 19151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19132,
											"end": 19152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 19132,
											"end": 19152,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19132,
											"end": 19152,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 19132,
											"end": 19152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19127,
											"end": 19152,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19127,
											"end": 19152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19166,
											"end": 19186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 19184,
											"end": 19185,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19166,
											"end": 19186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 19166,
											"end": 19186,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19166,
											"end": 19186,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 19166,
											"end": 19186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19161,
											"end": 19186,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19161,
											"end": 19186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19320,
											"end": 19321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19252,
											"end": 19318,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19248,
											"end": 19322,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19245,
											"end": 19246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19242,
											"end": 19323,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19346,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 19239,
											"end": 19346,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19326,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 19326,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 19326,
											"end": 19344,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19326,
											"end": 19344,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 19326,
											"end": 19344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19346,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 19239,
											"end": 19346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19370,
											"end": 19371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19367,
											"end": 19368,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19363,
											"end": 19372,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19356,
											"end": 19372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19356,
											"end": 19372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19073,
											"end": 19378,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19073,
											"end": 19378,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19073,
											"end": 19378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19073,
											"end": 19378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19073,
											"end": 19378,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19384,
											"end": 19569,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 19384,
											"end": 19569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19424,
											"end": 19425,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19441,
											"end": 19461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 19459,
											"end": 19460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19441,
											"end": 19461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 19441,
											"end": 19461,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19441,
											"end": 19461,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 19441,
											"end": 19461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19436,
											"end": 19461,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19436,
											"end": 19461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19475,
											"end": 19495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 19493,
											"end": 19494,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19475,
											"end": 19495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 19475,
											"end": 19495,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19475,
											"end": 19495,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 19475,
											"end": 19495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19470,
											"end": 19495,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19470,
											"end": 19495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19514,
											"end": 19515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19504,
											"end": 19539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 19504,
											"end": 19539,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19519,
											"end": 19537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 19519,
											"end": 19537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 19519,
											"end": 19537,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19519,
											"end": 19537,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 19519,
											"end": 19537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19504,
											"end": 19539,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 19504,
											"end": 19539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19561,
											"end": 19562,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19558,
											"end": 19559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19554,
											"end": 19563,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19549,
											"end": 19563,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19549,
											"end": 19563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19384,
											"end": 19569,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19384,
											"end": 19569,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19384,
											"end": 19569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19384,
											"end": 19569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19384,
											"end": 19569,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19575,
											"end": 19923,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 19575,
											"end": 19923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19615,
											"end": 19622,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19638,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 19656,
											"end": 19657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19638,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 19638,
											"end": 19658,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19638,
											"end": 19658,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 19638,
											"end": 19658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19633,
											"end": 19658,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19633,
											"end": 19658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19672,
											"end": 19692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 19690,
											"end": 19691,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19672,
											"end": 19692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 19672,
											"end": 19692,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19672,
											"end": 19692,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 19672,
											"end": 19692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19667,
											"end": 19692,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19667,
											"end": 19692,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19860,
											"end": 19861,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19792,
											"end": 19858,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19788,
											"end": 19862,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19785,
											"end": 19786,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19782,
											"end": 19863,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19777,
											"end": 19778,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19770,
											"end": 19779,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19763,
											"end": 19780,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19864,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19756,
											"end": 19887,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19756,
											"end": 19887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 19756,
											"end": 19887,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19867,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 19867,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 19867,
											"end": 19885,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19867,
											"end": 19885,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 19867,
											"end": 19885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19756,
											"end": 19887,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 19756,
											"end": 19887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19915,
											"end": 19916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19912,
											"end": 19913,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19908,
											"end": 19917,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 19897,
											"end": 19917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19897,
											"end": 19917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19575,
											"end": 19923,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19575,
											"end": 19923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19575,
											"end": 19923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19575,
											"end": 19923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19575,
											"end": 19923,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19929,
											"end": 20120,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 19929,
											"end": 20120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19969,
											"end": 19973,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19989,
											"end": 20009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 20007,
											"end": 20008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19989,
											"end": 20009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 19989,
											"end": 20009,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19989,
											"end": 20009,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 19989,
											"end": 20009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19984,
											"end": 20009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19984,
											"end": 20009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20023,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 20041,
											"end": 20042,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20023,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 20023,
											"end": 20043,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20023,
											"end": 20043,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 20023,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20018,
											"end": 20043,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20018,
											"end": 20043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20062,
											"end": 20063,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20059,
											"end": 20060,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20056,
											"end": 20064,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 20053,
											"end": 20087,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20053,
											"end": 20087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 20053,
											"end": 20087,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20067,
											"end": 20085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 20067,
											"end": 20085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 20067,
											"end": 20085,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20067,
											"end": 20085,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 20067,
											"end": 20085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20053,
											"end": 20087,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 20053,
											"end": 20087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20112,
											"end": 20113,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20109,
											"end": 20110,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20105,
											"end": 20114,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20097,
											"end": 20114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20097,
											"end": 20114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19929,
											"end": 20120,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19929,
											"end": 20120,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19929,
											"end": 20120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19929,
											"end": 20120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19929,
											"end": 20120,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20126,
											"end": 20222,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 20126,
											"end": 20222,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20163,
											"end": 20170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20192,
											"end": 20216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 20210,
											"end": 20215,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20192,
											"end": 20216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 20192,
											"end": 20216,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20192,
											"end": 20216,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 20192,
											"end": 20216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20181,
											"end": 20216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20181,
											"end": 20216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20126,
											"end": 20222,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20126,
											"end": 20222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20126,
											"end": 20222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20126,
											"end": 20222,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20228,
											"end": 20318,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 20228,
											"end": 20318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20262,
											"end": 20269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20305,
											"end": 20310,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20298,
											"end": 20311,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20291,
											"end": 20312,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20280,
											"end": 20312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20280,
											"end": 20312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20228,
											"end": 20318,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20228,
											"end": 20318,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20228,
											"end": 20318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20228,
											"end": 20318,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20324,
											"end": 20450,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 20324,
											"end": 20450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20361,
											"end": 20368,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20401,
											"end": 20443,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20394,
											"end": 20399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20390,
											"end": 20444,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20379,
											"end": 20444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20379,
											"end": 20444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20324,
											"end": 20450,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20324,
											"end": 20450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20324,
											"end": 20450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20324,
											"end": 20450,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20456,
											"end": 20533,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 20456,
											"end": 20533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20493,
											"end": 20500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20522,
											"end": 20527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20511,
											"end": 20527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20511,
											"end": 20527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20456,
											"end": 20533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20456,
											"end": 20533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20456,
											"end": 20533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20456,
											"end": 20533,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20539,
											"end": 20679,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 20539,
											"end": 20679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20603,
											"end": 20612,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20636,
											"end": 20673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 20667,
											"end": 20672,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20636,
											"end": 20673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 20636,
											"end": 20673,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20636,
											"end": 20673,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 20636,
											"end": 20673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20623,
											"end": 20673,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20623,
											"end": 20673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20539,
											"end": 20679,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20539,
											"end": 20679,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20539,
											"end": 20679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20539,
											"end": 20679,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20685,
											"end": 20811,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 20685,
											"end": 20811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20735,
											"end": 20744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20768,
											"end": 20805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 20799,
											"end": 20804,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20768,
											"end": 20805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 20768,
											"end": 20805,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20768,
											"end": 20805,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 20768,
											"end": 20805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20755,
											"end": 20805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20755,
											"end": 20805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20685,
											"end": 20811,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20685,
											"end": 20811,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20685,
											"end": 20811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20685,
											"end": 20811,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20817,
											"end": 20930,
											"name": "tag",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 20817,
											"end": 20930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20867,
											"end": 20876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20900,
											"end": 20924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 20918,
											"end": 20923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20900,
											"end": 20924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 20900,
											"end": 20924,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20900,
											"end": 20924,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 20900,
											"end": 20924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20887,
											"end": 20924,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20887,
											"end": 20924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20817,
											"end": 20930,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20817,
											"end": 20930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20817,
											"end": 20930,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20817,
											"end": 20930,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20936,
											"end": 21243,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 20936,
											"end": 21243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21004,
											"end": 21005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21014,
											"end": 21127,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 21014,
											"end": 21127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21028,
											"end": 21034,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21025,
											"end": 21026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21022,
											"end": 21035,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 21014,
											"end": 21127,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21014,
											"end": 21127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 21014,
											"end": 21127,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21113,
											"end": 21114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21108,
											"end": 21111,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21104,
											"end": 21115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21098,
											"end": 21116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21094,
											"end": 21095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21089,
											"end": 21092,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21085,
											"end": 21096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21078,
											"end": 21117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21050,
											"end": 21052,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21047,
											"end": 21048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21043,
											"end": 21053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21038,
											"end": 21053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21038,
											"end": 21053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21014,
											"end": 21127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 21014,
											"end": 21127,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21014,
											"end": 21127,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 21014,
											"end": 21127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21145,
											"end": 21151,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21142,
											"end": 21143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21139,
											"end": 21152,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 21136,
											"end": 21237,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21136,
											"end": 21237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 21136,
											"end": 21237,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21225,
											"end": 21226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21216,
											"end": 21222,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21211,
											"end": 21214,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21207,
											"end": 21223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21200,
											"end": 21227,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21136,
											"end": 21237,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 21136,
											"end": 21237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20985,
											"end": 21243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20936,
											"end": 21243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20936,
											"end": 21243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20936,
											"end": 21243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20936,
											"end": 21243,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21249,
											"end": 21425,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 21249,
											"end": 21425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21281,
											"end": 21282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21298,
											"end": 21318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 21316,
											"end": 21317,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21298,
											"end": 21318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 21298,
											"end": 21318,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21298,
											"end": 21318,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 21298,
											"end": 21318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21293,
											"end": 21318,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21293,
											"end": 21318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21332,
											"end": 21352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 21350,
											"end": 21351,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21332,
											"end": 21352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 21332,
											"end": 21352,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21332,
											"end": 21352,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 21332,
											"end": 21352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21327,
											"end": 21352,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21327,
											"end": 21352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21371,
											"end": 21372,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21361,
											"end": 21396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 21361,
											"end": 21396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21376,
											"end": 21394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 21376,
											"end": 21394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 21376,
											"end": 21394,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21376,
											"end": 21394,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 21376,
											"end": 21394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21361,
											"end": 21396,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 21361,
											"end": 21396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21417,
											"end": 21418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21414,
											"end": 21415,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21410,
											"end": 21419,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 21405,
											"end": 21419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21405,
											"end": 21419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21249,
											"end": 21425,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21249,
											"end": 21425,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21249,
											"end": 21425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21249,
											"end": 21425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21249,
											"end": 21425,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21431,
											"end": 21611,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 21431,
											"end": 21611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21479,
											"end": 21556,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21476,
											"end": 21477,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21469,
											"end": 21557,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21576,
											"end": 21580,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 21573,
											"end": 21574,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21566,
											"end": 21581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21600,
											"end": 21604,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 21597,
											"end": 21598,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21590,
											"end": 21605,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21617,
											"end": 21797,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 21617,
											"end": 21797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21665,
											"end": 21742,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21662,
											"end": 21663,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21655,
											"end": 21743,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21762,
											"end": 21766,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 21759,
											"end": 21760,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21752,
											"end": 21767,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21786,
											"end": 21790,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 21783,
											"end": 21784,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21776,
											"end": 21791,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21926,
											"end": 22043,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 21926,
											"end": 22043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22035,
											"end": 22036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22032,
											"end": 22033,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22025,
											"end": 22037,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22049,
											"end": 22151,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 22049,
											"end": 22151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22090,
											"end": 22096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22141,
											"end": 22143,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 22137,
											"end": 22144,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 22132,
											"end": 22134,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 22125,
											"end": 22130,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22121,
											"end": 22135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22117,
											"end": 22145,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22107,
											"end": 22145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22107,
											"end": 22145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22049,
											"end": 22151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22049,
											"end": 22151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22049,
											"end": 22151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22049,
											"end": 22151,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22157,
											"end": 22323,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 22157,
											"end": 22323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22297,
											"end": 22315,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 22293,
											"end": 22294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22285,
											"end": 22291,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22281,
											"end": 22295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22274,
											"end": 22316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22157,
											"end": 22323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22157,
											"end": 22323,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22329,
											"end": 22500,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 22329,
											"end": 22500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22469,
											"end": 22492,
											"name": "PUSH",
											"source": 8,
											"value": "4572726F723A20696E76616C6964207374616B65720000000000000000000000"
										},
										{
											"begin": 22465,
											"end": 22466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22457,
											"end": 22463,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22453,
											"end": 22467,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22446,
											"end": 22493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22329,
											"end": 22500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22329,
											"end": 22500,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22506,
											"end": 22735,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 22506,
											"end": 22735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22646,
											"end": 22680,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 22642,
											"end": 22643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22634,
											"end": 22640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22630,
											"end": 22644,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22623,
											"end": 22681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22715,
											"end": 22727,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 22710,
											"end": 22712,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22702,
											"end": 22708,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22698,
											"end": 22713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22691,
											"end": 22728,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22506,
											"end": 22735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22506,
											"end": 22735,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22741,
											"end": 22966,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 22741,
											"end": 22966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22881,
											"end": 22915,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 22877,
											"end": 22878,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22869,
											"end": 22875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22865,
											"end": 22879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22858,
											"end": 22916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22950,
											"end": 22958,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22945,
											"end": 22947,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22937,
											"end": 22943,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22933,
											"end": 22948,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22926,
											"end": 22959,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22741,
											"end": 22966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22741,
											"end": 22966,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22972,
											"end": 23136,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 22972,
											"end": 23136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23112,
											"end": 23128,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 23108,
											"end": 23109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23100,
											"end": 23106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23096,
											"end": 23110,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23089,
											"end": 23129,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22972,
											"end": 23136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22972,
											"end": 23136,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23142,
											"end": 23307,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 23142,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23282,
											"end": 23299,
											"name": "PUSH",
											"source": 8,
											"value": "416C726561647920737461727465640000000000000000000000000000000000"
										},
										{
											"begin": 23278,
											"end": 23279,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23270,
											"end": 23276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23266,
											"end": 23280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23259,
											"end": 23300,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23142,
											"end": 23307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23142,
											"end": 23307,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23313,
											"end": 23538,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 23313,
											"end": 23538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23453,
											"end": 23487,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 23449,
											"end": 23450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23441,
											"end": 23447,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23437,
											"end": 23451,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23430,
											"end": 23488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23522,
											"end": 23530,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23517,
											"end": 23519,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23509,
											"end": 23515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23505,
											"end": 23520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23498,
											"end": 23531,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23313,
											"end": 23538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23313,
											"end": 23538,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23544,
											"end": 23769,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 23544,
											"end": 23769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23684,
											"end": 23718,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420416464726573732E20416464726573732063616E27742062"
										},
										{
											"begin": 23680,
											"end": 23681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23672,
											"end": 23678,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23668,
											"end": 23682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23661,
											"end": 23719,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23753,
											"end": 23761,
											"name": "PUSH",
											"source": 8,
											"value": "65207A65726F0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23748,
											"end": 23750,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23740,
											"end": 23746,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23736,
											"end": 23751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23729,
											"end": 23762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23544,
											"end": 23769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23544,
											"end": 23769,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23775,
											"end": 23956,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 23775,
											"end": 23956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23915,
											"end": 23948,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 23911,
											"end": 23912,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23903,
											"end": 23909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23899,
											"end": 23913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23892,
											"end": 23949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23775,
											"end": 23956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23775,
											"end": 23956,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23962,
											"end": 24144,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 23962,
											"end": 24144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24102,
											"end": 24136,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 24098,
											"end": 24099,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24090,
											"end": 24096,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24086,
											"end": 24100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24079,
											"end": 24137,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23962,
											"end": 24144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23962,
											"end": 24144,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24150,
											"end": 24313,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 24150,
											"end": 24313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24290,
											"end": 24305,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C69642076616C756500000000000000000000000000000000000000"
										},
										{
											"begin": 24286,
											"end": 24287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24278,
											"end": 24284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24274,
											"end": 24288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24267,
											"end": 24306,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24150,
											"end": 24313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24150,
											"end": 24313,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24319,
											"end": 24498,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 24319,
											"end": 24498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24459,
											"end": 24490,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 24455,
											"end": 24456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24447,
											"end": 24453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24443,
											"end": 24457,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24436,
											"end": 24491,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24319,
											"end": 24498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24319,
											"end": 24498,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24504,
											"end": 24680,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 24504,
											"end": 24680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24644,
											"end": 24672,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420556E7374616B696E67204665652052617465000000000000"
										},
										{
											"begin": 24640,
											"end": 24641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24632,
											"end": 24638,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24628,
											"end": 24642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24621,
											"end": 24673,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24504,
											"end": 24680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24504,
											"end": 24680,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24686,
											"end": 24859,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 24686,
											"end": 24859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24826,
											"end": 24851,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204C6F636B7570204475726174696F6E000000000000000000"
										},
										{
											"begin": 24822,
											"end": 24823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24814,
											"end": 24820,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24810,
											"end": 24824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24803,
											"end": 24852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24686,
											"end": 24859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24686,
											"end": 24859,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24865,
											"end": 25028,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 24865,
											"end": 25028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25005,
											"end": 25020,
											"name": "PUSH",
											"source": 8,
											"value": "43616E2774206265207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 25001,
											"end": 25002,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24993,
											"end": 24999,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24989,
											"end": 25003,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24982,
											"end": 25021,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24865,
											"end": 25028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24865,
											"end": 25028,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25034,
											"end": 25197,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 25034,
											"end": 25197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25174,
											"end": 25189,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742100000000000000000000000000000000000000"
										},
										{
											"begin": 25170,
											"end": 25171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25162,
											"end": 25168,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25158,
											"end": 25172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25151,
											"end": 25190,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25034,
											"end": 25197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25034,
											"end": 25197,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25203,
											"end": 25325,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 25203,
											"end": 25325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25276,
											"end": 25300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 25294,
											"end": 25299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25276,
											"end": 25300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 25276,
											"end": 25300,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25276,
											"end": 25300,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 25276,
											"end": 25300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25269,
											"end": 25274,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25266,
											"end": 25301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25256,
											"end": 25319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 25256,
											"end": 25319,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25315,
											"end": 25316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25312,
											"end": 25313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25305,
											"end": 25317,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 25256,
											"end": 25319,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 25256,
											"end": 25319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25203,
											"end": 25325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25203,
											"end": 25325,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25331,
											"end": 25447,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 25331,
											"end": 25447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25401,
											"end": 25422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 25416,
											"end": 25421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25401,
											"end": 25422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 25401,
											"end": 25422,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25401,
											"end": 25422,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 25401,
											"end": 25422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25394,
											"end": 25399,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25391,
											"end": 25423,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25381,
											"end": 25441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 25381,
											"end": 25441,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25437,
											"end": 25438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25434,
											"end": 25435,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25427,
											"end": 25439,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 25381,
											"end": 25441,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 25381,
											"end": 25441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25331,
											"end": 25447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25331,
											"end": 25447,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25453,
											"end": 25575,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 25453,
											"end": 25575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25526,
											"end": 25550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 25544,
											"end": 25549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25526,
											"end": 25550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 25526,
											"end": 25550,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25526,
											"end": 25550,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 25526,
											"end": 25550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25519,
											"end": 25524,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25516,
											"end": 25551,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25506,
											"end": 25569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 25506,
											"end": 25569,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25565,
											"end": 25566,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25562,
											"end": 25563,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25555,
											"end": 25567,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 25506,
											"end": 25569,
											"name": "tag",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 25506,
											"end": 25569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25453,
											"end": 25575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25453,
											"end": 25575,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"harvest()": "4641257d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardAmount()": "f7b2a7be",
							"rewardToHarvest()": "5d2ec65d",
							"setBountyWallet(address)": "8a9d3839",
							"setEventPeriod(uint256)": "692642e7",
							"setLockupTime(uint256)": "4b62b70b",
							"setRewardRate(uint256)": "9e447fc6",
							"setUnstakingFeeRate(uint256)": "91e07e7a",
							"stake(uint256)": "a694fc3a",
							"stakedAmount()": "373d6132",
							"startStaking(uint256,uint256)": "4b77dd9e",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"__bountyWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardToClaim\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bountyWallet\",\"type\":\"address\"}],\"name\":\"SetBountyWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupDuration\",\"type\":\"uint256\"}],\"name\":\"SetEventPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"SetRewardRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"SetUnstakingFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__bountyWallet\",\"type\":\"address\"}],\"name\":\"setBountyWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__eventPeriod\",\"type\":\"uint256\"}],\"name\":\"setEventPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockupTime\",\"type\":\"uint256\"}],\"name\":\"setLockupTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"setUnstakingFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"startStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakingPlatform\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0xfce1d5ff9bee297802529aa87086b1d4679fa5923b527b815cc51d0ce0cd97a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c49c0ba282101f5f67b8ab508269e9d67c7ebdd08d9353996c0e654e126a5d56\",\"dweb:/ipfs/QmUFUezKKDogJuwjjFXDquHrWBRDhfytAmGE36zHBraFhp\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							499
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 500,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								499
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 182,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 182,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 182,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 182,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 182,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 182,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 172,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 181,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 193,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 198,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 477,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 211,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													220,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 221,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 477,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 244,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															271
														],
														"referencedDeclaration": 271,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 477,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 269,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 477,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 283,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 289,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 477,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 318,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 317,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													324,
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 323,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 325,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 327,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 337,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 334,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 304,
												"id": 339,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 477,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 351,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															358,
															393
														],
														"referencedDeclaration": 393,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 356,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 477,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 371,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													378,
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 388,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 391,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 477,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 403,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															445
														],
														"referencedDeclaration": 445,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 477,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 424,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 423,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 440,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 441,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 438,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 443,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 477,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 477,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							499
						]
					},
					"id": 500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 484,
												"id": 487,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 499,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 493,
												"id": 496,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 499,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 500,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							811
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "SafeMath",
							"nameLocation": "475:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															515
														],
														"declarations": [
															{
																"constant": false,
																"id": 515,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 532,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 519,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 513,
															"id": 526,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 529,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 530,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 513,
														"id": 531,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 811,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 545,
															"id": 552,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 545,
														"id": 559,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 811,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 602,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 581,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 580,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 602,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 585,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 588,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 589,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 597,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 596,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 599,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 573,
														"id": 601,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 811,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 630,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 615,
															"id": 622,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 625,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 626,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 615,
														"id": 629,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 811,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 658,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 643,
															"id": 650,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 654,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 656,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 643,
														"id": 657,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 811,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 673,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 811,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 686,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 811,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 703,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 811,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 718,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 811,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 733,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 811,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 749,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 751,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 747,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 746,
														"id": 757,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 811,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 776,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 772,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 778,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 771,
														"id": 782,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 811,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 801,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 797,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 803,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 796,
														"id": 807,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 811,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 812,
							"src": "467:6301:4",
							"usedErrors": []
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							912
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "IBEP20",
							"nameLocation": "72:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "86:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "169:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "206:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:5"
									},
									"scope": 912,
									"src": "160:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "223:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "291:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "325:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:7:5"
									},
									"scope": 912,
									"src": "282:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "340:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "406:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "438:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:15:5"
									},
									"scope": 912,
									"src": "397:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "461:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "525:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "555:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:5"
									},
									"scope": 912,
									"src": "516:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "578:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "647:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "681:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:9:5"
									},
									"scope": 912,
									"src": "638:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "698:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "787:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "805:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "797:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:17:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "837:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:9:5"
									},
									"scope": 912,
									"src": "778:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "854:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1084:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1101:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1093:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1120:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1112:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:35:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1146:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:6:5"
									},
									"scope": 912,
									"src": "1075:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "1160:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1445:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1463:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1455:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1479:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1471:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:33:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 912,
									"src": "1436:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1528:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2198:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:33:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:6:5"
									},
									"scope": 912,
									"src": "2189:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2271:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2590:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2611:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2627:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2619:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2638:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:51:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2672:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2672:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:6:5"
									},
									"scope": 912,
									"src": "2581:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2686:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 902,
									"name": "Transfer",
									"nameLocation": "2861:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2886:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2870:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2908:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2892:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2912:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:57:5"
									},
									"src": "2855:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2935:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 911,
									"name": "Approval",
									"nameLocation": "3098:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3107:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3146:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3130:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:63:5"
									},
									"src": "3092:78:5"
								}
							],
							"scope": 913,
							"src": "62:3111:5",
							"usedErrors": []
						}
					],
					"src": "35:3138:5"
				},
				"id": 5
			},
			"contracts/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"IBEP20": [
							912
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 812,
							"src": "60:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 478,
							"src": "119:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 913,
							"src": "172:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130
							],
							"name": "SafeBEP20",
							"nameLocation": "206:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 920,
									"libraryName": {
										"id": 918,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "229:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "223:27:6",
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 923,
									"libraryName": {
										"id": 921,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "262:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "256:26:6",
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "362:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "393:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 937,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "423:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "423:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "423:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 940,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "448:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "452:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "400:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "400:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "400:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "373:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "373:86:6"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "299:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "319:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "312:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "312:6:6"
													},
													"referencedDeclaration": 912,
													"src": "312:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "334:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "326:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "346:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:41:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:6"
									},
									"scope": 1130,
									"src": "290:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "565:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "596:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 962,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "626:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "626:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "626:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "655:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 966,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "661:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 960,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "603:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 958,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "576:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "576:96:6"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "484:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "501:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 947,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "501:6:6"
													},
													"referencedDeclaration": 912,
													"src": "501:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "515:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "537:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "529:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "549:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "541:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:55:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:6"
									},
									"scope": 1130,
									"src": "475:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1025:546:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1319:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1328:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1318:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 992,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1359:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1351:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 990,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1351:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1351:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 994,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "1366:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "1335:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$912",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 871,
																				"src": "1335:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1335:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1335:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1334:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1318:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1310:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:152:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1310:152:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1493:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1007,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "1523:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1523:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1523:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1010,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "1556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1500:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1500:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1473:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1473:90:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "688:255:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "958:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "977:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "970:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "970:6:6"
													},
													"referencedDeclaration": 912,
													"src": "970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1009:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1001:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:46:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:6"
									},
									"scope": 1130,
									"src": "949:622:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1665:200:6",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1684:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1676:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1676:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1743:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1723:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1715:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1034,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1730:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1699:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1699:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1699:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "1699:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1810:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1810:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1810:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1047,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1834:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1843:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1787:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1787:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1760:97:6"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1588:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1610:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1610:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1632:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1624:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1641:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:46:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:6"
									},
									"scope": 1130,
									"src": "1579:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1959:245:6",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1978:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1090,
														"src": "1970:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1970:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2017:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2009:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2009:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1071,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2024:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1993:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1993:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1993:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1993:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1970:118:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1082,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "2149:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "2149:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2149:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1085,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "2182:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1080,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2126:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2126:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2126:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1078,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2099:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2099:97:6"
											}
										]
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "1882:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1904:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1904:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1926:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1918:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1943:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1935:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:46:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:6"
									},
									"scope": 1130,
									"src": "1873:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2669:699:6",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3044:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "3031:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3031:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1107,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3057:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3057:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3057:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "3057:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3031:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1111,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3141:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3161:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3141:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "3137:224:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "3164:197:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1118,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "3283:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3296:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1119,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3296:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1121,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3295:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1116,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3272:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3272:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3272:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3304:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1115,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3264:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3264:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3264:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2216:377:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2608:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2635:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2628:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1093,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "2628:6:6"
													},
													"referencedDeclaration": 912,
													"src": "2628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2655:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2642:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2642:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:33:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:6"
									},
									"scope": 1130,
									"src": "2599:769:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1131,
							"src": "198:3173:6",
							"usedErrors": []
						}
					],
					"src": "33:3338:6"
				},
				"id": 6
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"Context": [
							499
						],
						"IBEP20": [
							912
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						],
						"StakingPlatform": [
							1844
						]
					},
					"id": 1845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 105,
							"src": "60:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 183,
							"src": "114:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 812,
							"src": "172:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 1131,
							"src": "231:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1137,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "288:7:7"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1844,
							"linearizedBaseContracts": [
								1844,
								104,
								499
							],
							"name": "StakingPlatform",
							"nameLocation": "269:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1141,
									"libraryName": {
										"id": 1139,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "311:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "305:27:7",
									"typeName": {
										"id": 1140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "324:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1145,
									"libraryName": {
										"id": 1142,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "344:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "338:27:7",
									"typeName": {
										"id": 1144,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1143,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "358:6:7"
										},
										"referencedDeclaration": 912,
										"src": "358:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "StakingPlatform.Staker",
									"id": 1158,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "stakerCurrentReward",
											"nameLocation": "432:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "424:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "424:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "470:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "462:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "462:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "mode",
											"nameLocation": "501:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "493:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "493:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "stakeStartTime",
											"nameLocation": "524:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "516:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "516:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "lastUpdatedBlockNumber",
											"nameLocation": "557:22:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "549:30:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "549:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "598:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "590:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "590:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "406:6:7",
									"nodeType": "StructDefinition",
									"scope": 1844,
									"src": "399:213:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1160,
									"mutability": "mutable",
									"name": "_unstakingFeeRate",
									"nameLocation": "733:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "717:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "717:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1162,
									"mutability": "mutable",
									"name": "_eventPeriod",
									"nameLocation": "773:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "757:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "757:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1164,
									"mutability": "mutable",
									"name": "_rewardRate",
									"nameLocation": "808:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "792:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "792:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1166,
									"mutability": "mutable",
									"name": "_rewardFeeRate",
									"nameLocation": "842:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "826:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "826:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1168,
									"mutability": "mutable",
									"name": "_bountyWallet",
									"nameLocation": "879:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "863:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1167,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "863:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1170,
									"mutability": "mutable",
									"name": "_lockupPeriod",
									"nameLocation": "915:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "899:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1169,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "899:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1175,
									"mutability": "mutable",
									"name": "_staker",
									"nameLocation": "972:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "937:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
										"typeString": "mapping(address => struct StakingPlatform.Staker)"
									},
									"typeName": {
										"id": 1174,
										"keyType": {
											"id": 1171,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "945:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "937:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
											"typeString": "mapping(address => struct StakingPlatform.Staker)"
										},
										"valueType": {
											"id": 1173,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1172,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1158,
												"src": "956:6:7"
											},
											"referencedDeclaration": 1158,
											"src": "956:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
												"typeString": "struct StakingPlatform.Staker"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1177,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1057:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "1042:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1176,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1042:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1180,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1089:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "1075:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$912",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1179,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1178,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "1075:6:7"
										},
										"referencedDeclaration": 912,
										"src": "1075:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1186,
									"name": "Staked",
									"nameLocation": "1188:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1203:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "1195:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1219:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "1211:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:32:7"
									},
									"src": "1182:45:7"
								},
								{
									"anonymous": false,
									"id": 1192,
									"name": "Harvest",
									"nameLocation": "1239:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1255:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1247:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToClaim",
												"nameLocation": "1271:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1263:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:39:7"
									},
									"src": "1233:53:7"
								},
								{
									"anonymous": false,
									"id": 1198,
									"name": "Withdraw",
									"nameLocation": "1298:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1315:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1307:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1331:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1323:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1306:32:7"
									},
									"src": "1292:47:7"
								},
								{
									"anonymous": false,
									"id": 1202,
									"name": "SetRewardRate",
									"nameLocation": "1351:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "1373:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1365:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:20:7"
									},
									"src": "1345:40:7"
								},
								{
									"anonymous": false,
									"id": 1206,
									"name": "SetEventPeriod",
									"nameLocation": "1397:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockupDuration",
												"nameLocation": "1420:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1412:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1411:24:7"
									},
									"src": "1391:45:7"
								},
								{
									"anonymous": false,
									"id": 1210,
									"name": "SetUnstakingFeeRate",
									"nameLocation": "1448:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakingFeeRate",
												"nameLocation": "1476:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "1468:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:26:7"
									},
									"src": "1442:52:7"
								},
								{
									"anonymous": false,
									"id": 1214,
									"name": "SetBountyWallet",
									"nameLocation": "1506:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"indexed": false,
												"mutability": "mutable",
												"name": "bountyWallet",
												"nameLocation": "1530:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1522:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1521:22:7"
									},
									"src": "1500:44:7"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "1604:109:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1221,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "1625:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:6:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1625:6:7"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "_bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "1642:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1225,
														"name": "__bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "1658:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1642:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "1642:30:7"
											},
											{
												"expression": {
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1228,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "1683:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1230,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "1698:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1229,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1691:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$912_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1691:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"src": "1683:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "1683:22:7"
											}
										]
									},
									"id": 1235,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1572:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1564:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "__bountyWallet",
												"nameLocation": "1588:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1580:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:40:7"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1604:0:7"
									},
									"scope": 1844,
									"src": "1552:161:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "1746:189:7",
										"statements": [
											{
												"expression": {
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1238,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1767:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1767:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "1767:17:7"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1242,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "1806:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1826:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "1806:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "1806:24:7"
											},
											{
												"expression": {
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "_rewardFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "1841:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1858:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1841:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "1841:20:7"
											},
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1250,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1872:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1887:6:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "1872:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "1872:21:7"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1254,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "1904:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3930",
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1920:7:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7776000_by_1",
															"typeString": "int_const 7776000"
														},
														"value": "90"
													},
													"src": "1904:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "1904:23:7"
											}
										]
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Init",
									"nameLocation": "1730:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:2:7"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1746:0:7"
									},
									"scope": 1844,
									"src": "1721:214:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "2022:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2062:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"id": 1266,
															"name": "timedur",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "2050:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2050:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1270,
												"nodeType": "Return",
												"src": "2043:26:7"
											}
										]
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calDaysFromTimestamp",
									"nameLocation": "1952:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "timedur",
												"nameLocation": "1981:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1973:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1972:17:7"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "2013:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2013:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2012:9:7"
									},
									"scope": 1844,
									"src": "1943:134:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "2183:347:7",
										"statements": [
											{
												"assignments": [
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "2219:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1322,
														"src": "2204:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1276,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1275,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1158,
																"src": "2204:6:7"
															},
															"referencedDeclaration": 1158,
															"src": "2204:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"baseExpression": {
														"id": 1278,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "2228:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1281,
													"indexExpression": {
														"expression": {
															"id": 1279,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2236:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2236:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2228:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1158_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2204:43:7"
											},
											{
												"assignments": [
													1284
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "2266:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1322,
														"src": "2258:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2258:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1304,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2382:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1299,
																	"name": "_rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "2365:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "38363430",
																					"id": 1295,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2354:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					},
																					"value": "8640"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1291,
																								"name": "staker",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1277,
																								"src": "2319:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																									"typeString": "struct StakingPlatform.Staker storage pointer"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lastUpdatedBlockNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1155,
																							"src": "2319:29:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1288,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "2302:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1289,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "2302:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1290,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 690,
																						"src": "2302:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2302:47:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 720,
																				"src": "2302:51:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2302:57:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1285,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1277,
																				"src": "2278:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakedAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1149,
																			"src": "2278:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "2278:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2278:82:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 705,
																"src": "2278:86:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2278:99:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2278:103:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2278:108:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2258:128:7"
											},
											{
												"expression": {
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1305,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "2397:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "2397:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1311,
																"name": "newReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1284,
																"src": "2457:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1308,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "2426:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakerCurrentReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1147,
																"src": "2426:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "2426:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2426:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2397:70:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "2397:70:7"
											},
											{
												"expression": {
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1315,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "2478:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdatedBlockNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2478:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1318,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2510:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2510:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2478:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "2478:44:7"
											}
										]
									},
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "2161:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2173:2:7"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2183:0:7"
									},
									"scope": 1844,
									"src": "2152:378:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "2605:408:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1331,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "2634:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2644:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2634:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2647:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2626:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2626:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "2626:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1340,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2716:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2716:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1338,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "2700:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "2700:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2700:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1343,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "2730:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2700:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2739:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2692:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2692:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "2692:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1349,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "2774:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1352,
																	"indexExpression": {
																		"expression": {
																			"id": 1350,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2782:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2782:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2774:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1157,
																"src": "2774:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2804:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "2774:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792073746172746564",
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															},
															"value": "Already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															}
														],
														"id": 1348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2766:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "2766:62:7"
											},
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1359,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "2841:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1362,
															"indexExpression": {
																"expression": {
																	"id": 1360,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2849:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2849:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2841:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "2841:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1364,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "2868:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2841:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "2841:32:7"
											},
											{
												"expression": {
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1367,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "2884:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1370,
															"indexExpression": {
																"expression": {
																	"id": 1368,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2892:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2892:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2884:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1153,
														"src": "2884:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1372,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2921:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2921:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2884:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "2884:52:7"
											},
											{
												"expression": {
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1376,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "2947:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1379,
															"indexExpression": {
																"expression": {
																	"id": 1377,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2955:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2955:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2947:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "2947:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30783535",
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2976:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "2947:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "2947:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1385,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "2997:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1384,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "2991:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2991:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "2991:14:7"
											}
										]
									},
									"functionSelector": "4b77dd9e",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startStaking",
									"nameLocation": "2551:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2572:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2564:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "2589:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2581:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:32:7"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2605:0:7"
									},
									"scope": 1844,
									"src": "2542:471:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "3115:562:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1395,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "3144:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3154:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3144:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3157:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3136:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3136:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "3136:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1404,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3226:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3226:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1402,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "3210:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "3210:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3210:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1407,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "3240:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3210:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3249:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3202:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3202:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "3202:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1413,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "3284:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1416,
																	"indexExpression": {
																		"expression": {
																			"id": 1414,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3292:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3292:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3284:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1157,
																"src": "3284:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3314:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "3284:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a20696e76616c6964207374616b6572",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3320:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															},
															"value": "Error: invalid staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															}
														],
														"id": 1412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3276:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3276:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "3276:68:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1423,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "3365:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3365:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "3365:14:7"
											},
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3405:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "3390:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1427,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1426,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1158,
																"src": "3390:6:7"
															},
															"referencedDeclaration": 1158,
															"src": "3390:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1433,
												"initialValue": {
													"baseExpression": {
														"id": 1429,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "3414:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1432,
													"indexExpression": {
														"expression": {
															"id": 1430,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3422:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3422:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3414:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1158_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3390:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1437,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3467:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3467:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1441,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3487:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPlatform_$1844",
																		"typeString": "contract StakingPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPlatform_$1844",
																		"typeString": "contract StakingPlatform"
																	}
																],
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3479:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1439,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3479:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3479:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "3494:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1434,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "3444:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "3444:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3444:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "3444:58:7"
											},
											{
												"expression": {
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1446,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "3513:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "3513:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1452,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "3559:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1449,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "3535:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "3535:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3535:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3535:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3513:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "3513:54:7"
											},
											{
												"expression": {
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1456,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "3578:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1459,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "3608:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1457,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "3592:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3592:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3592:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3578:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "3578:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1464,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3649:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3649:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1466,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "3661:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1463,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "3642:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3642:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "EmitStatement",
												"src": "3637:32:7"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3086:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3100:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "3092:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3092:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3091:17:7"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3115:0:7"
									},
									"scope": 1844,
									"src": "3077:600:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "3766:1134:7",
										"statements": [
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3802:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "3787:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1475,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1158,
																"src": "3787:6:7"
															},
															"referencedDeclaration": 1158,
															"src": "3787:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1482,
												"initialValue": {
													"baseExpression": {
														"id": 1478,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "3811:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1481,
													"indexExpression": {
														"expression": {
															"id": 1479,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3819:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3819:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3811:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1158_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3787:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "3851:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3860:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3851:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3863:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3843:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3843:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "3843:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1491,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "3916:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1492,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "3926:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "3926:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3916:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3947:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3908:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3908:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "3908:56:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1498,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "3977:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3977:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "3977:14:7"
											},
											{
												"assignments": [
													1502
												],
												"declarations": [
													{
														"constant": false,
														"id": 1502,
														"mutability": "mutable",
														"name": "amountTobeWithdrawn",
														"nameLocation": "4010:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "4002:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1501,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4002:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1521,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "4032:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1508,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4065:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$1844",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$1844",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4057:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1506,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4057:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4057:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1504,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "4041:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "4041:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4041:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4032:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1517,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4107:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$1844",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$1844",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4099:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1515,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4099:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4099:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1513,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "4083:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "4083:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4083:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4032:81:7",
													"trueExpression": {
														"id": 1512,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "4074:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4002:111:7"
											},
											{
												"assignments": [
													1523
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "during",
														"nameLocation": "4132:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "4124:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4124:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1533,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4188:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1527,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "4161:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																			"typeString": "struct StakingPlatform.Staker storage pointer"
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "4161:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1524,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4141:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4141:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "4141:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4141:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "4141:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4141:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4124:71:7"
											},
											{
												"assignments": [
													1535
												],
												"declarations": [
													{
														"constant": false,
														"id": 1535,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4214:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "4206:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4206:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1537,
												"initialValue": {
													"hexValue": "313030",
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4220:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4206:17:7"
											},
											{
												"assignments": [
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "isLockupTimeOver",
														"nameLocation": "4239:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "4234:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1538,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4234:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1562,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1540,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "4258:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "4258:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4273:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4258:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1553,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4333:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4333:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1558,
																	"name": "_lockupPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "4378:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1555,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "4352:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																			"typeString": "struct StakingPlatform.Staker storage pointer"
																		}
																	},
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "4352:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 675,
																"src": "4352:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:40:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4333:59:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4258:134:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1544,
																	"name": "during",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "4277:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1545,
																	"name": "_eventPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "4286:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4277:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4302:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4277:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1549,
																"name": "during",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "4307:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4316:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4307:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4277:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4234:158:7"
											},
											{
												"condition": {
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4407:17:7",
													"subExpression": {
														"id": 1563,
														"name": "isLockupTimeOver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "4408:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1570,
												"nodeType": "IfStatement",
												"src": "4403:73:7",
												"trueBody": {
													"id": 1569,
													"nodeType": "Block",
													"src": "4426:50:7",
													"statements": [
														{
															"expression": {
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1565,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "4441:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1566,
																	"name": "_unstakingFeeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "4447:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4441:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1568,
															"nodeType": "ExpressionStatement",
															"src": "4441:23:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1571,
														"name": "amountTobeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "4486:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "316534",
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4565:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "1e4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1576,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1535,
																				"src": "4556:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1574,
																				"name": "amountTobeWithdrawn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1502,
																				"src": "4532:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 705,
																			"src": "4532:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4532:28:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "4532:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4532:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1572,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "4508:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4508:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4508:62:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4486:84:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "4486:84:7"
											},
											{
												"expression": {
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1584,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "4581:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1587,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "4611:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1585,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "4595:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4595:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4595:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4581:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1590,
												"nodeType": "ExpressionStatement",
												"src": "4581:50:7"
											},
											{
												"expression": {
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1591,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "4642:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "4642:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1597,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "4688:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1594,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "4664:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "4664:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4664:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4664:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4642:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "4642:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1604,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4738:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4738:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1606,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "4750:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1601,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "4719:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "4719:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4719:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "4719:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1610,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4797:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4797:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1612,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "4809:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1609,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "4788:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4788:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "EmitStatement",
												"src": "4783:46:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "3733:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3750:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "3742:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3741:16:7"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3766:0:7"
									},
									"scope": 1844,
									"src": "3724:1176:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "4976:163:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1624,
																"name": "__rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1618,
																"src": "5005:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5020:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5005:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076616c7565",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5023:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															},
															"value": "Invalid value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															}
														],
														"id": 1623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4997:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4997:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "4997:42:7"
											},
											{
												"expression": {
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1630,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "5060:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1631,
														"name": "__rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "5074:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5060:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "5060:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1635,
															"name": "__rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "5118:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1634,
														"name": "SetRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "5104:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5104:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1637,
												"nodeType": "EmitStatement",
												"src": "5099:32:7"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1621,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1620,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4966:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4966:9:7"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "4921:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "__rewardRate",
												"nameLocation": "4943:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "4935:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4935:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4934:22:7"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4976:0:7"
									},
									"scope": 1844,
									"src": "4912:227:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "5213:182:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1647,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "5242:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5258:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5242:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5261:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															},
															"value": "Invalid Lockup Duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															}
														],
														"id": 1646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5234:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5234:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "5234:53:7"
											},
											{
												"expression": {
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1653,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "5300:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5333:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 1654,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "5315:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 705,
															"src": "5315:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5315:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5300:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "5300:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1661,
															"name": "__eventPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "5373:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1660,
														"name": "SetEventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "5358:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5358:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1663,
												"nodeType": "EmitStatement",
												"src": "5353:34:7"
											}
										]
									},
									"functionSelector": "692642e7",
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1644,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1643,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5203:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5203:9:7"
										}
									],
									"name": "setEventPeriod",
									"nameLocation": "5156:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "__eventPeriod",
												"nameLocation": "5179:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "5171:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5171:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5170:23:7"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5213:0:7"
									},
									"scope": 1844,
									"src": "5147:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "5479:198:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1673,
																"name": "__unstakingFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "5508:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5529:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5508:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5532:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															},
															"value": "Invalid Unstaking Fee Rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															}
														],
														"id": 1672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5500:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5500:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "5500:61:7"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1679,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "5574:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1680,
														"name": "__unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "5594:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5574:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "5574:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1684,
															"name": "__unstakingFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "5650:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1683,
														"name": "SetUnstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "5630:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5630:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "EmitStatement",
												"src": "5625:44:7"
											}
										]
									},
									"functionSelector": "91e07e7a",
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1670,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1669,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5469:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5469:9:7"
										}
									],
									"name": "setUnstakingFeeRate",
									"nameLocation": "5412:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "__unstakingFeeRate",
												"nameLocation": "5440:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "5432:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5432:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5431:28:7"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5479:0:7"
									},
									"scope": 1844,
									"src": "5403:274:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "5753:199:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1696,
																"name": "__bountyWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "5782:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5807:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5799:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1697,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5799:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5799:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5782:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420416464726573732e20416464726573732063616e2774206265207a65726f",
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5811:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																"typeString": "literal_string \"Invalid Address. Address can't be zero\""
															},
															"value": "Invalid Address. Address can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																"typeString": "literal_string \"Invalid Address. Address can't be zero\""
															}
														],
														"id": 1695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "5774:78:7"
											},
											{
												"expression": {
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1705,
														"name": "_bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "5865:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1706,
														"name": "__bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "5881:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5865:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "5865:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1710,
															"name": "__bountyWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "5929:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1709,
														"name": "SetBountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "5913:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5913:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1712,
												"nodeType": "EmitStatement",
												"src": "5908:36:7"
											}
										]
									},
									"functionSelector": "8a9d3839",
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1693,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1692,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5743:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5743:9:7"
										}
									],
									"name": "setBountyWallet",
									"nameLocation": "5694:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "__bountyWallet",
												"nameLocation": "5718:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "5710:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:24:7"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5753:0:7"
									},
									"scope": 1844,
									"src": "5685:267:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "6022:100:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1722,
																"name": "lockupTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "6043:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6056:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6043:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6059:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6035:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6035:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "6035:40:7"
											},
											{
												"expression": {
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1728,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "6088:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1729,
														"name": "lockupTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "6104:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6088:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "6088:26:7"
											}
										]
									},
									"functionSelector": "4b62b70b",
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1719,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1718,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6012:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6012:9:7"
										}
									],
									"name": "setLockupTime",
									"nameLocation": "5969:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "lockupTime",
												"nameLocation": "5991:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "5983:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5982:20:7"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6022:0:7"
									},
									"scope": 1844,
									"src": "5960:162:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "6237:103:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1738,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "6293:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1741,
														"indexExpression": {
															"expression": {
																"id": 1739,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6301:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6301:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6293:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "6293:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1743,
												"nodeType": "Return",
												"src": "6286:46:7"
											}
										]
									},
									"functionSelector": "5d2ec65d",
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToHarvest",
									"nameLocation": "6190:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6205:2:7"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "6229:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:9:7"
									},
									"scope": 1844,
									"src": "6181:159:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "6406:578:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1748,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "6427:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6427:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "6427:14:7"
											},
											{
												"assignments": [
													1753
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "6467:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1818,
														"src": "6452:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1752,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1751,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1158,
																"src": "6452:6:7"
															},
															"referencedDeclaration": 1158,
															"src": "6452:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1758,
												"initialValue": {
													"baseExpression": {
														"id": 1754,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "6476:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1757,
													"indexExpression": {
														"expression": {
															"id": 1755,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6484:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6484:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6476:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1158_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6452:43:7"
											},
											{
												"assignments": [
													1760
												],
												"declarations": [
													{
														"constant": false,
														"id": 1760,
														"mutability": "mutable",
														"name": "rewardToClaim",
														"nameLocation": "6514:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1818,
														"src": "6506:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1759,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6506:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1775,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6612:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "34",
																		"id": 1771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6616:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	},
																	"src": "6612:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1767,
																			"name": "_rewardFeeRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "6592:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1764,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1753,
																				"src": "6561:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakerCurrentReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1147,
																			"src": "6561:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "6561:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6561:46:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "6561:50:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6561:57:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1761,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1753,
																"src": "6530:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakerCurrentReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1147,
															"src": "6530:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "6530:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6530:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6506:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1777,
																"name": "rewardToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "6648:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6664:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6648:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6667:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 1776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6640:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6640:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "6640:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1783,
														"name": "rewardToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "6701:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"id": 1786,
																"name": "_bountyWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "6733:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1784,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "6717:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "6717:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6717:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6701:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1796,
												"nodeType": "IfStatement",
												"src": "6697:111:7",
												"trueBody": {
													"expression": {
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1789,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1760,
															"src": "6762:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 1792,
																	"name": "_bountyWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "6794:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1790,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "6778:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "6778:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6778:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6762:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1795,
													"nodeType": "ExpressionStatement",
													"src": "6762:46:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1800,
															"name": "_bountyWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "6842:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1801,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6857:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6857:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1803,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1760,
															"src": "6869:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1797,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "6819:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "6819:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6819:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "6819:64:7"
											},
											{
												"expression": {
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1806,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "6894:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1808,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "6894:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6923:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6894:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1811,
												"nodeType": "ExpressionStatement",
												"src": "6894:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1813,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6950:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6950:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1815,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1760,
															"src": "6962:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1812,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "6942:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6942:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1817,
												"nodeType": "EmitStatement",
												"src": "6937:39:7"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "6390:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6397:2:7"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6406:0:7"
									},
									"scope": 1844,
									"src": "6381:603:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "7094:68:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1824,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "7122:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1827,
														"indexExpression": {
															"expression": {
																"id": 1825,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7130:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7130:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7122:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "7122:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1823,
												"id": 1829,
												"nodeType": "Return",
												"src": "7115:39:7"
											}
										]
									},
									"functionSelector": "373d6132",
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "7049:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7061:2:7"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "7085:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7084:9:7"
									},
									"scope": 1844,
									"src": "7040:122:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "7228:65:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1836,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "7246:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1839,
														"indexExpression": {
															"expression": {
																"id": 1837,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7254:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7254:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7246:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "7246:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1835,
												"id": 1841,
												"nodeType": "Return",
												"src": "7239:46:7"
											}
										]
									},
									"functionSelector": "f7b2a7be",
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardAmount",
									"nameLocation": "7183:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:2:7"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "7219:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7219:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7218:9:7"
									},
									"scope": 1844,
									"src": "7174:119:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1845,
							"src": "260:7036:7",
							"usedErrors": []
						}
					],
					"src": "33:7265:7"
				},
				"id": 7
			}
		}
	}
}