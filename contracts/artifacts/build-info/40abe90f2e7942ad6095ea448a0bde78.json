{
	"id": "40abe90f2e7942ad6095ea448a0bde78",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Staking_flat.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n\ninterface IBEP20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address _owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/SafeMath.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\n\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: contracts/SafeBEP20.sol\n\n\nlibrary SafeBEP20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IBEP20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n    \n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n        \n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\n        }\n    }\n}\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\n\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\n\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\n\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: contracts/Staking.sol\n\ncontract StakingPlatform is Ownable {\n\n    using SafeMath for uint256;\n    using SafeBEP20 for IBEP20;\n\n    // args for _stakers\n    struct Staker {\n        uint256 stakerCurrentReward;\n        uint256 stakedAmount;\n        uint256 mode;\n        uint256 stakeStartTime;\n        uint256 lastUpdatedBlockNumber;\n        uint256 staked;\n    }   \n    \n    // refer to CRSFANS token. Address: 0x7AD8A62451f79399c940fC1A6FE96358a80B1931\n    \n    uint256 private _unstakingFeeRate;\n    uint256 private _eventPeriod;\n    uint256 private _rewardRate;\n    uint256 private _rewardFeeRate;\n    uint256 private _lockupPeriod;\n    address[] private _stakers;\n\n    mapping(address => Staker) private _staker;\n\n    // Total amount of token staked in staking pool.\n    uint256 public totalStaked;\n    IBEP20 public token;\n    \n    // Events triggered when start, stake, unstake(withdraw), get reward.\n    event Staked(address staker, uint256 amount);\n    event Harvest(address staker, uint256 rewardToClaim);\n    event Withdraw(address staker, uint256 amount);\n    event SetRewardRate(uint256 rewardRate);\n    event SetEventPeriod(uint256 lockupDuration);\n    event SetUnstakingFeeRate(uint256 unstakingFeeRate);\n\n    constructor(address _token) {\n        \n        Init();\n        token = IBEP20(_token);\n    }\n\n    function Init() internal {\n        \n        _rewardRate = 200; // per day\n        _unstakingFeeRate = 1500;\n        _rewardFeeRate = 100;\n        _eventPeriod = 7 days;\n        _lockupPeriod = 90 days;\n    }\n\n    function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\n        \n        return timedur.div(1 days);\n    }\n\n    // Update rewards for _stakers according to deposited amount.\n    function updateReward() private{\n        \n        Staker storage staker = _staker[msg.sender];\n        uint256 newReward = staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4);\n        staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward);\n        staker.lastUpdatedBlockNumber = block.number;\n    }\n    \n    function startStaking(uint256 _amount, uint256 _mode) external {\n        \n        require(_amount > 0, \"Amount should be greater than 0\");\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\n        require(_staker[msg.sender].staked != 0x55, \"Already started\");\n\n        _staker[msg.sender].mode = _mode;\n        _staker[msg.sender].stakeStartTime = block.timestamp;\n        _staker[msg.sender].staked = 0x55;\n        _stakers.push(msg.sender);\n        stake(_amount);\n    }\n    \n    // Staker tries to stake specific amount of token.\n    function stake(uint256 _amount) public{\n        \n        require(_amount > 0, \"Amount should be greater than 0\");\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\n        require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\");\n        \n        updateReward();\n        Staker storage staker = _staker[msg.sender];\n        token.safeTransferFrom(msg.sender, address(this), _amount);\n        staker.stakedAmount = staker.stakedAmount.add(_amount);\n        totalStaked = totalStaked.add(_amount);\n        \n        emit Staked(msg.sender, _amount);\n    }\n\n    function getTotalStaked() public view returns (uint256) {\n\n        return totalStaked;\n    }\n\n    function getNumberofStakers() public view returns (uint256) {\n\n        return _stakers.length;\n    }\n\n    // Withdraw some of token staked.\n    function withdraw(uint256 amount) external{\n        \n        Staker storage staker = _staker[msg.sender];\n\n        require(amount > 0, \"Amount should be greater than 0\");\n        require(amount <= staker.stakedAmount, \"Invalid amount\");\n\n        updateReward();\n        uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this));\n        uint256 during = block.timestamp.sub(staker.stakeStartTime).div(1 days);\n        uint256 fee = 100;\n        bool isLockupTimeOver = staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\n            block.timestamp >= staker.stakeStartTime.add(_lockupPeriod);\n        if (!isLockupTimeOver) {\n            fee = _unstakingFeeRate;\n        }\n        amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4));\n        totalStaked = totalStaked.sub(amountTobeWithdrawn);\n        staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn);\n        token.safeTransfer(msg.sender, amountTobeWithdrawn);\n\n        emit Withdraw(msg.sender, amountTobeWithdrawn);\n        // return block.timestamp.sub(staker.stakeStartTime);\n    }\n    \n    function setRewardRate(uint256 __rewardRate) external onlyOwner {\n        \n        require(__rewardRate > 0, \"Invalid value\");\n        \n        _rewardRate = __rewardRate;\n\n        emit SetRewardRate(__rewardRate);\n    }\n\n    function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\n        \n        require(__eventPeriod > 0, \"Invalid Lockup Duration\");\n\n        _eventPeriod = __eventPeriod.mul(1 days);\n\n        emit SetEventPeriod(__eventPeriod);\n    }\n\n    function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\n        \n        require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\");\n\n        _unstakingFeeRate = __unstakingFeeRate;\n\n        emit SetUnstakingFeeRate(__unstakingFeeRate);\n    }\n\n    function setLockupTime(uint256 lockupTime) external onlyOwner {\n\n        require(lockupTime > 0, \"Can't be zero\");\n\n        _lockupPeriod = lockupTime;\n    }\n    \n    // Amount of reward staker can be guaranteed.\n    function rewardToHarvest() public view returns (uint256){\n        \n        // updateReward();\n        return _staker[msg.sender].stakerCurrentReward;\n    }\n\n    // Get reward of msg.sender\n    function harvest() public{\n        \n        updateReward();\n        Staker storage staker = _staker[msg.sender];\n        uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4));\n        \n        require(rewardToClaim > 0, \"Nothing to claim\");\n        if (rewardToClaim > token.balanceOf(address(this)))\n            rewardToClaim = token.balanceOf(address(this));\n        token.safeTransfer(msg.sender, rewardToClaim);\n        staker.stakerCurrentReward = 0;\n\n        emit Harvest(msg.sender, rewardToClaim);\n    }\n\n    // Amount of token staked in staking pool.\n    function stakedAmount() public view returns (uint256) {\n        \n        return _staker[msg.sender].stakedAmount;\n    }\n    \n    function rewardAmount() public view returns (uint256) {\n        return _staker[msg.sender].stakerCurrentReward;\n    }\n\n    function getRewardRate() public view returns (uint256) {\n        return _rewardRate;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Staking_flat.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking_flat.sol\":3271:11332  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Staking_flat.sol\":3271:11332  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bab8e29f50a06f8341036b49a28cffb005ac0b27ab40413f682aa56fb063615764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bab8e29f50a06f8341036b49a28cffb005ac0b27ab40413f682aa56fb063615764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xB8 0xE2 SWAP16 POP LOG0 PUSH16 0x8341036B49A28CFFB005AC0B27AB4041 EXTCODEHASH PUSH9 0x2AA56FB06361576473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "3271:8061:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bab8e29f50a06f8341036b49a28cffb005ac0b27ab40413f682aa56fb063615764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xB8 0xE2 SWAP16 POP LOG0 PUSH16 0x8341036B49A28CFFB005AC0B27AB4041 EXTCODEHASH PUSH9 0x2AA56FB06361576473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "3271:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3271,
									"end": 11332,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bab8e29f50a06f8341036b49a28cffb005ac0b27ab40413f682aa56fb063615764736f6c63430008070033",
									".code": [
										{
											"begin": 3271,
											"end": 11332,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 11332,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 11332,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 11332,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3271,
											"end": 11332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 11332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 11332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 11332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 11332,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking_flat.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Staking_flat.sol\":{\"keccak256\":\"0x14c9c8bc6e0b3523c6998effa6f71da53a295fc82ed31250a77485410b8a2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3724a956fba97cc6114bab3e08cf2d0b0fb916787cfc034b447f78c428093c3a\",\"dweb:/ipfs/QmZHJvujFb8n2fSR5bQMqisx2uKhnQrSqxaiSCUTAEJm4w\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Staking_flat.sol\":{\"keccak256\":\"0x14c9c8bc6e0b3523c6998effa6f71da53a295fc82ed31250a77485410b8a2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3724a956fba97cc6114bab3e08cf2d0b0fb916787cfc034b447f78c428093c3a\",\"dweb:/ipfs/QmZHJvujFb8n2fSR5bQMqisx2uKhnQrSqxaiSCUTAEJm4w\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking_flat.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Staking_flat.sol\":{\"keccak256\":\"0x14c9c8bc6e0b3523c6998effa6f71da53a295fc82ed31250a77485410b8a2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3724a956fba97cc6114bab3e08cf2d0b0fb916787cfc034b447f78c428093c3a\",\"dweb:/ipfs/QmZHJvujFb8n2fSR5bQMqisx2uKhnQrSqxaiSCUTAEJm4w\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking_flat.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Staking_flat.sol\":{\"keccak256\":\"0x14c9c8bc6e0b3523c6998effa6f71da53a295fc82ed31250a77485410b8a2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3724a956fba97cc6114bab3e08cf2d0b0fb916787cfc034b447f78c428093c3a\",\"dweb:/ipfs/QmZHJvujFb8n2fSR5bQMqisx2uKhnQrSqxaiSCUTAEJm4w\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking_flat.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Staking_flat.sol\":{\"keccak256\":\"0x14c9c8bc6e0b3523c6998effa6f71da53a295fc82ed31250a77485410b8a2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3724a956fba97cc6114bab3e08cf2d0b0fb916787cfc034b447f78c428093c3a\",\"dweb:/ipfs/QmZHJvujFb8n2fSR5bQMqisx2uKhnQrSqxaiSCUTAEJm4w\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking_flat.sol\":18143:21259  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Staking_flat.sol\":18143:21259  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c89a5c8eecb147dc8de42a1ff5f8b424c6123d41047404cfe7a93237a50275a264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c89a5c8eecb147dc8de42a1ff5f8b424c6123d41047404cfe7a93237a50275a264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 SWAP11 0x5C DUP15 0xEC 0xB1 SELFBALANCE 0xDC DUP14 0xE4 0x2A 0x1F CREATE2 0xF8 0xB4 0x24 0xC6 SLT RETURNDATASIZE COINBASE DIV PUSH21 0x4CFE7A93237A50275A264736F6C63430008070033 ",
							"sourceMap": "18143:3116:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c89a5c8eecb147dc8de42a1ff5f8b424c6123d41047404cfe7a93237a50275a264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 SWAP11 0x5C DUP15 0xEC 0xB1 SELFBALANCE 0xDC DUP14 0xE4 0x2A 0x1F CREATE2 0xF8 0xB4 0x24 0xC6 SLT RETURNDATASIZE COINBASE DIV PUSH21 0x4CFE7A93237A50275A264736F6C63430008070033 ",
							"sourceMap": "18143:3116:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18143,
									"end": 21259,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c89a5c8eecb147dc8de42a1ff5f8b424c6123d41047404cfe7a93237a50275a264736f6c63430008070033",
									".code": [
										{
											"begin": 18143,
											"end": 21259,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18143,
											"end": 21259,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18143,
											"end": 21259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18143,
											"end": 21259,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18143,
											"end": 21259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18143,
											"end": 21259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18143,
											"end": 21259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18143,
											"end": 21259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18143,
											"end": 21259,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking_flat.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Staking_flat.sol\":{\"keccak256\":\"0x14c9c8bc6e0b3523c6998effa6f71da53a295fc82ed31250a77485410b8a2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3724a956fba97cc6114bab3e08cf2d0b0fb916787cfc034b447f78c428093c3a\",\"dweb:/ipfs/QmZHJvujFb8n2fSR5bQMqisx2uKhnQrSqxaiSCUTAEJm4w\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking_flat.sol\":11805:18106  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Staking_flat.sol\":11805:18106  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209655d7e68d0dbd2c45f4cc3541debd8071a91ae2de5e9e3f65ed1d61461395ea64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209655d7e68d0dbd2c45f4cc3541debd8071a91ae2de5e9e3f65ed1d61461395ea64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SSTORE 0xD7 0xE6 DUP14 0xD 0xBD 0x2C GASLIMIT DELEGATECALL 0xCC CALLDATALOAD COINBASE 0xDE 0xBD DUP1 PUSH18 0xA91AE2DE5E9E3F65ED1D61461395EA64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "11805:6301:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209655d7e68d0dbd2c45f4cc3541debd8071a91ae2de5e9e3f65ed1d61461395ea64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SSTORE 0xD7 0xE6 DUP14 0xD 0xBD 0x2C GASLIMIT DELEGATECALL 0xCC CALLDATALOAD COINBASE 0xDE 0xBD DUP1 PUSH18 0xA91AE2DE5E9E3F65ED1D61461395EA64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "11805:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11805,
									"end": 18106,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209655d7e68d0dbd2c45f4cc3541debd8071a91ae2de5e9e3f65ed1d61461395ea64736f6c63430008070033",
									".code": [
										{
											"begin": 11805,
											"end": 18106,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 11805,
											"end": 18106,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11805,
											"end": 18106,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11805,
											"end": 18106,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11805,
											"end": 18106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11805,
											"end": 18106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11805,
											"end": 18106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 18106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11805,
											"end": 18106,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking_flat.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Staking_flat.sol\":{\"keccak256\":\"0x14c9c8bc6e0b3523c6998effa6f71da53a295fc82ed31250a77485410b8a2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3724a956fba97cc6114bab3e08cf2d0b0fb916787cfc034b447f78c428093c3a\",\"dweb:/ipfs/QmZHJvujFb8n2fSR5bQMqisx2uKhnQrSqxaiSCUTAEJm4w\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardToClaim",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockupDuration",
									"type": "uint256"
								}
							],
							"name": "SetEventPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "SetRewardRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "SetUnstakingFeeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getNumberofStakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToHarvest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__eventPeriod",
									"type": "uint256"
								}
							],
							"name": "setEventPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lockupTime",
									"type": "uint256"
								}
							],
							"name": "setLockupTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__rewardRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "setUnstakingFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "startStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking_flat.sol\":27335:34115  contract StakingPlatform is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Staking_flat.sol\":28536:28628  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Staking_flat.sol\":25763:25795  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"Staking_flat.sol\":25782:25794  _msgSender() */\n  tag_8\n    /* \"Staking_flat.sol\":25782:25792  _msgSender */\n  shl(0x20, tag_9)\n    /* \"Staking_flat.sol\":25782:25794  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"Staking_flat.sol\":25763:25781  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"Staking_flat.sol\":25763:25795  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"Staking_flat.sol\":28583:28589  Init() */\n  tag_12\n    /* \"Staking_flat.sol\":28583:28587  Init */\n  shl(0x20, tag_13)\n    /* \"Staking_flat.sol\":28583:28589  Init() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"Staking_flat.sol\":28614:28620  _token */\n  dup1\n    /* \"Staking_flat.sol\":28599:28604  token */\n  0x09\n  0x00\n    /* \"Staking_flat.sol\":28599:28621  token = IBEP20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking_flat.sol\":28536:28628  constructor(address _token) {... */\n  pop\n    /* \"Staking_flat.sol\":27335:34115  contract StakingPlatform is Ownable {... */\n  jump(tag_14)\n    /* \"Staking_flat.sol\":24669:24765  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"Staking_flat.sol\":24722:24729  address */\n  0x00\n    /* \"Staking_flat.sol\":24748:24758  msg.sender */\n  caller\n    /* \"Staking_flat.sol\":24741:24758  return msg.sender */\n  swap1\n  pop\n    /* \"Staking_flat.sol\":24669:24765  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Staking_flat.sol\":27112:27299  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"Staking_flat.sol\":27185:27201  address oldOwner */\n  0x00\n    /* \"Staking_flat.sol\":27204:27210  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Staking_flat.sol\":27185:27210  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Staking_flat.sol\":27229:27237  newOwner */\n  dup2\n    /* \"Staking_flat.sol\":27220:27226  _owner */\n  0x00\n  dup1\n    /* \"Staking_flat.sol\":27220:27237  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking_flat.sol\":27283:27291  newOwner */\n  dup2\n    /* \"Staking_flat.sol\":27252:27292  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Staking_flat.sol\":27273:27281  oldOwner */\n  dup2\n    /* \"Staking_flat.sol\":27252:27292  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Staking_flat.sol\":27175:27299  {... */\n  pop\n    /* \"Staking_flat.sol\":27112:27299  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Staking_flat.sol\":28634:28841  function Init() internal {... */\ntag_13:\n    /* \"Staking_flat.sol\":28692:28695  200 */\n  0xc8\n    /* \"Staking_flat.sol\":28678:28689  _rewardRate */\n  0x03\n    /* \"Staking_flat.sol\":28678:28695  _rewardRate = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Staking_flat.sol\":28736:28740  1500 */\n  0x05dc\n    /* \"Staking_flat.sol\":28716:28733  _unstakingFeeRate */\n  0x01\n    /* \"Staking_flat.sol\":28716:28740  _unstakingFeeRate = 1500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Staking_flat.sol\":28767:28770  100 */\n  0x64\n    /* \"Staking_flat.sol\":28750:28764  _rewardFeeRate */\n  0x04\n    /* \"Staking_flat.sol\":28750:28770  _rewardFeeRate = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Staking_flat.sol\":28795:28801  7 days */\n  0x093a80\n    /* \"Staking_flat.sol\":28780:28792  _eventPeriod */\n  0x02\n    /* \"Staking_flat.sol\":28780:28801  _eventPeriod = 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Staking_flat.sol\":28827:28834  90 days */\n  0x76a700\n    /* \"Staking_flat.sol\":28811:28824  _lockupPeriod */\n  0x05\n    /* \"Staking_flat.sol\":28811:28834  _lockupPeriod = 90 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Staking_flat.sol\":28634:28841  function Init() internal {... */\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_19:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_21\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":243:362   */\ntag_24:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_27\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_19\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_30:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_32\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_33:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_26:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_22:\n    /* \"#utility.yul\":1147:1171   */\n  tag_39\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_30\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_40:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"Staking_flat.sol\":27335:34115  contract StakingPlatform is Ownable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Staking_flat.sol\":27335:34115  contract StakingPlatform is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x9e447fc6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf7b2a7be\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7e1a3786\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91e07e7a\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x4b62b70b\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x4b62b70b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4b77dd9e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5715ec11\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5d2ec65d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x692642e7\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x0917e776\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x373d6132\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Staking_flat.sol\":30586:30678  function getTotalStaked() public view returns (uint256) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking_flat.sol\":30828:31981  function withdraw(uint256 amount) external{... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Staking_flat.sol\":33771:33890  function stakedAmount() public view returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking_flat.sol\":33147:33718  function harvest() public{... */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"Staking_flat.sol\":32737:32894  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Staking_flat.sol\":29432:29928  function startStaking(uint256 _amount, uint256 _mode) external {... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"Staking_flat.sol\":30684:30784  function getNumberofStakers() public view returns (uint256) {... */\n    tag_9:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking_flat.sol\":32954:33109  function rewardToHarvest() public view returns (uint256){... */\n    tag_10:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking_flat.sol\":32217:32458  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Staking_flat.sol\":26510:26611  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"Staking_flat.sol\":34023:34113  function getRewardRate() public view returns (uint256) {... */\n    tag_13:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking_flat.sol\":28087:28113  uint256 public totalStaked */\n    tag_14:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking_flat.sol\":25878:25963  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking_flat.sol\":32464:32731  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n    tag_16:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"Staking_flat.sol\":31991:32211  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n    tag_17:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"Staking_flat.sol\":29993:30580  function stake(uint256 _amount) public{... */\n    tag_18:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"Staking_flat.sol\":26760:26958  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"Staking_flat.sol\":33900:34017  function rewardAmount() public view returns (uint256) {... */\n    tag_20:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking_flat.sol\":28119:28138  IBEP20 public token */\n    tag_21:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking_flat.sol\":30586:30678  function getTotalStaked() public view returns (uint256) {... */\n    tag_26:\n        /* \"Staking_flat.sol\":30633:30640  uint256 */\n      0x00\n        /* \"Staking_flat.sol\":30660:30671  totalStaked */\n      sload(0x08)\n        /* \"Staking_flat.sol\":30653:30671  return totalStaked */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":30586:30678  function getTotalStaked() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Staking_flat.sol\":30828:31981  function withdraw(uint256 amount) external{... */\n    tag_32:\n        /* \"Staking_flat.sol\":30889:30910  Staker storage staker */\n      0x00\n        /* \"Staking_flat.sol\":30913:30920  _staker */\n      0x07\n        /* \"Staking_flat.sol\":30913:30932  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":30921:30931  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":30913:30932  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":30889:30932  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":30960:30961  0 */\n      0x00\n        /* \"Staking_flat.sol\":30951:30957  amount */\n      dup3\n        /* \"Staking_flat.sol\":30951:30961  amount > 0 */\n      gt\n        /* \"Staking_flat.sol\":30943:30997  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"Staking_flat.sol\":31025:31031  staker */\n      dup1\n        /* \"Staking_flat.sol\":31025:31044  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"Staking_flat.sol\":31015:31021  amount */\n      dup3\n        /* \"Staking_flat.sol\":31015:31044  amount <= staker.stakedAmount */\n      gt\n      iszero\n        /* \"Staking_flat.sol\":31007:31063  require(amount <= staker.stakedAmount, \"Invalid amount\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"Staking_flat.sol\":31074:31088  updateReward() */\n      tag_94\n        /* \"Staking_flat.sol\":31074:31086  updateReward */\n      tag_95\n        /* \"Staking_flat.sol\":31074:31088  updateReward() */\n      jump\t// in\n    tag_94:\n        /* \"Staking_flat.sol\":31098:31125  uint256 amountTobeWithdrawn */\n      0x00\n        /* \"Staking_flat.sol\":31137:31142  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":31137:31152  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Staking_flat.sol\":31161:31165  this */\n      address\n        /* \"Staking_flat.sol\":31137:31167  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_96:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"Staking_flat.sol\":31128:31134  amount */\n      dup4\n        /* \"Staking_flat.sol\":31128:31167  amount < token.balanceOf(address(this)) */\n      lt\n        /* \"Staking_flat.sol\":31128:31209  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      tag_102\n      jumpi\n        /* \"Staking_flat.sol\":31179:31184  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":31179:31194  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Staking_flat.sol\":31203:31207  this */\n      address\n        /* \"Staking_flat.sol\":31179:31209  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_107:\n        /* \"Staking_flat.sol\":31128:31209  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      jump(tag_108)\n    tag_102:\n        /* \"Staking_flat.sol\":31170:31176  amount */\n      dup3\n        /* \"Staking_flat.sol\":31128:31209  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n    tag_108:\n        /* \"Staking_flat.sol\":31098:31209  uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":31219:31233  uint256 during */\n      0x00\n        /* \"Staking_flat.sol\":31236:31290  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      tag_109\n        /* \"Staking_flat.sol\":31283:31289  1 days */\n      0x015180\n        /* \"Staking_flat.sol\":31236:31278  block.timestamp.sub(staker.stakeStartTime) */\n      tag_110\n        /* \"Staking_flat.sol\":31256:31262  staker */\n      dup6\n        /* \"Staking_flat.sol\":31256:31277  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"Staking_flat.sol\":31236:31251  block.timestamp */\n      timestamp\n        /* \"Staking_flat.sol\":31236:31255  block.timestamp.sub */\n      tag_111\n      swap1\n        /* \"Staking_flat.sol\":31236:31278  block.timestamp.sub(staker.stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"Staking_flat.sol\":31236:31282  block.timestamp.sub(staker.stakeStartTime).div */\n      tag_112\n      swap1\n        /* \"Staking_flat.sol\":31236:31290  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"Staking_flat.sol\":31219:31290  uint256 during = block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":31300:31311  uint256 fee */\n      0x00\n        /* \"Staking_flat.sol\":31314:31317  100 */\n      0x64\n        /* \"Staking_flat.sol\":31300:31317  uint256 fee = 100 */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":31327:31348  bool isLockupTimeOver */\n      0x00\n        /* \"Staking_flat.sol\":31366:31367  1 */\n      0x01\n        /* \"Staking_flat.sol\":31351:31357  staker */\n      dup6\n        /* \"Staking_flat.sol\":31351:31362  staker.mode */\n      0x02\n      add\n      sload\n        /* \"Staking_flat.sol\":31351:31367  staker.mode == 1 */\n      eq\n        /* \"Staking_flat.sol\":31351:31484  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :... */\n      tag_113\n      jumpi\n        /* \"Staking_flat.sol\":31444:31484  staker.stakeStartTime.add(_lockupPeriod) */\n      tag_114\n        /* \"Staking_flat.sol\":31470:31483  _lockupPeriod */\n      sload(0x05)\n        /* \"Staking_flat.sol\":31444:31450  staker */\n      dup7\n        /* \"Staking_flat.sol\":31444:31465  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"Staking_flat.sol\":31444:31469  staker.stakeStartTime.add */\n      tag_115\n      swap1\n        /* \"Staking_flat.sol\":31444:31484  staker.stakeStartTime.add(_lockupPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"Staking_flat.sol\":31425:31440  block.timestamp */\n      timestamp\n        /* \"Staking_flat.sol\":31425:31484  block.timestamp >= staker.stakeStartTime.add(_lockupPeriod) */\n      lt\n      iszero\n        /* \"Staking_flat.sol\":31351:31484  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :... */\n      jump(tag_116)\n    tag_113:\n        /* \"Staking_flat.sol\":31395:31396  0 */\n      0x00\n        /* \"Staking_flat.sol\":31379:31391  _eventPeriod */\n      sload(0x02)\n        /* \"Staking_flat.sol\":31370:31376  during */\n      dup5\n        /* \"Staking_flat.sol\":31370:31391  during % _eventPeriod */\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"Staking_flat.sol\":31370:31396  during % _eventPeriod == 0 */\n      eq\n        /* \"Staking_flat.sol\":31370:31410  during % _eventPeriod == 0 && during > 0 */\n      dup1\n      iszero\n      tag_119\n      jumpi\n      pop\n        /* \"Staking_flat.sol\":31409:31410  0 */\n      0x00\n        /* \"Staking_flat.sol\":31400:31406  during */\n      dup4\n        /* \"Staking_flat.sol\":31400:31410  during > 0 */\n      gt\n        /* \"Staking_flat.sol\":31370:31410  during % _eventPeriod == 0 && during > 0 */\n    tag_119:\n        /* \"Staking_flat.sol\":31351:31484  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :... */\n    tag_116:\n        /* \"Staking_flat.sol\":31327:31484  bool isLockupTimeOver = staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :... */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":31499:31515  isLockupTimeOver */\n      dup1\n        /* \"Staking_flat.sol\":31494:31565  if (!isLockupTimeOver) {... */\n      tag_120\n      jumpi\n        /* \"Staking_flat.sol\":31537:31554  _unstakingFeeRate */\n      sload(0x01)\n        /* \"Staking_flat.sol\":31531:31554  fee = _unstakingFeeRate */\n      swap2\n      pop\n        /* \"Staking_flat.sol\":31494:31565  if (!isLockupTimeOver) {... */\n    tag_120:\n        /* \"Staking_flat.sol\":31596:31658  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      tag_121\n        /* \"Staking_flat.sol\":31620:31657  amountTobeWithdrawn.mul(fee).div(1e4) */\n      tag_122\n        /* \"Staking_flat.sol\":31653:31656  1e4 */\n      0x2710\n        /* \"Staking_flat.sol\":31620:31648  amountTobeWithdrawn.mul(fee) */\n      tag_123\n        /* \"Staking_flat.sol\":31644:31647  fee */\n      dup6\n        /* \"Staking_flat.sol\":31620:31639  amountTobeWithdrawn */\n      dup9\n        /* \"Staking_flat.sol\":31620:31643  amountTobeWithdrawn.mul */\n      tag_124\n      swap1\n        /* \"Staking_flat.sol\":31620:31648  amountTobeWithdrawn.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"Staking_flat.sol\":31620:31652  amountTobeWithdrawn.mul(fee).div */\n      tag_112\n      swap1\n        /* \"Staking_flat.sol\":31620:31657  amountTobeWithdrawn.mul(fee).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"Staking_flat.sol\":31596:31615  amountTobeWithdrawn */\n      dup6\n        /* \"Staking_flat.sol\":31596:31619  amountTobeWithdrawn.sub */\n      tag_111\n      swap1\n        /* \"Staking_flat.sol\":31596:31658  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"Staking_flat.sol\":31574:31658  amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap4\n      pop\n        /* \"Staking_flat.sol\":31682:31718  totalStaked.sub(amountTobeWithdrawn) */\n      tag_125\n        /* \"Staking_flat.sol\":31698:31717  amountTobeWithdrawn */\n      dup5\n        /* \"Staking_flat.sol\":31682:31693  totalStaked */\n      sload(0x08)\n        /* \"Staking_flat.sol\":31682:31697  totalStaked.sub */\n      tag_111\n      swap1\n        /* \"Staking_flat.sol\":31682:31718  totalStaked.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"Staking_flat.sol\":31668:31679  totalStaked */\n      0x08\n        /* \"Staking_flat.sol\":31668:31718  totalStaked = totalStaked.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":31750:31794  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      tag_126\n        /* \"Staking_flat.sol\":31774:31793  amountTobeWithdrawn */\n      dup5\n        /* \"Staking_flat.sol\":31750:31756  staker */\n      dup7\n        /* \"Staking_flat.sol\":31750:31769  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"Staking_flat.sol\":31750:31773  staker.stakedAmount.sub */\n      tag_111\n      swap1\n        /* \"Staking_flat.sol\":31750:31794  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"Staking_flat.sol\":31728:31734  staker */\n      dup6\n        /* \"Staking_flat.sol\":31728:31747  staker.stakedAmount */\n      0x01\n      add\n        /* \"Staking_flat.sol\":31728:31794  staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":31804:31855  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      tag_127\n        /* \"Staking_flat.sol\":31823:31833  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":31835:31854  amountTobeWithdrawn */\n      dup6\n        /* \"Staking_flat.sol\":31804:31809  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":31804:31822  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_128\n      swap1\n        /* \"Staking_flat.sol\":31804:31855  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"Staking_flat.sol\":31871:31912  Withdraw(msg.sender, amountTobeWithdrawn) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"Staking_flat.sol\":31880:31890  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":31892:31911  amountTobeWithdrawn */\n      dup6\n        /* \"Staking_flat.sol\":31871:31912  Withdraw(msg.sender, amountTobeWithdrawn) */\n      mload(0x40)\n      tag_129\n      swap3\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Staking_flat.sol\":30870:31981  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking_flat.sol\":30828:31981  function withdraw(uint256 amount) external{... */\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":33771:33890  function stakedAmount() public view returns (uint256) {... */\n    tag_34:\n        /* \"Staking_flat.sol\":33816:33823  uint256 */\n      0x00\n        /* \"Staking_flat.sol\":33851:33858  _staker */\n      0x07\n        /* \"Staking_flat.sol\":33851:33870  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":33859:33869  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":33851:33870  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":33851:33883  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"Staking_flat.sol\":33844:33883  return _staker[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":33771:33890  function stakedAmount() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Staking_flat.sol\":33147:33718  function harvest() public{... */\n    tag_37:\n        /* \"Staking_flat.sol\":33191:33205  updateReward() */\n      tag_133\n        /* \"Staking_flat.sol\":33191:33203  updateReward */\n      tag_95\n        /* \"Staking_flat.sol\":33191:33205  updateReward() */\n      jump\t// in\n    tag_133:\n        /* \"Staking_flat.sol\":33215:33236  Staker storage staker */\n      0x00\n        /* \"Staking_flat.sol\":33239:33246  _staker */\n      0x07\n        /* \"Staking_flat.sol\":33239:33258  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":33247:33257  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":33239:33258  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":33215:33258  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":33268:33289  uint256 rewardToClaim */\n      0x00\n        /* \"Staking_flat.sol\":33292:33381  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      tag_134\n        /* \"Staking_flat.sol\":33323:33380  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      tag_135\n        /* \"Staking_flat.sol\":33374:33379  10**4 */\n      0x2710\n        /* \"Staking_flat.sol\":33323:33369  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      tag_136\n        /* \"Staking_flat.sol\":33354:33368  _rewardFeeRate */\n      sload(0x04)\n        /* \"Staking_flat.sol\":33323:33329  staker */\n      dup7\n        /* \"Staking_flat.sol\":33323:33349  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"Staking_flat.sol\":33323:33353  staker.stakerCurrentReward.mul */\n      tag_124\n      swap1\n        /* \"Staking_flat.sol\":33323:33369  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"Staking_flat.sol\":33323:33373  staker.stakerCurrentReward.mul(_rewardFeeRate).div */\n      tag_112\n      swap1\n        /* \"Staking_flat.sol\":33323:33380  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"Staking_flat.sol\":33292:33298  staker */\n      dup4\n        /* \"Staking_flat.sol\":33292:33318  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"Staking_flat.sol\":33292:33322  staker.stakerCurrentReward.sub */\n      tag_111\n      swap1\n        /* \"Staking_flat.sol\":33292:33381  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"Staking_flat.sol\":33268:33381  uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":33424:33425  0 */\n      0x00\n        /* \"Staking_flat.sol\":33408:33421  rewardToClaim */\n      dup2\n        /* \"Staking_flat.sol\":33408:33425  rewardToClaim > 0 */\n      gt\n        /* \"Staking_flat.sol\":33400:33446  require(rewardToClaim > 0, \"Nothing to claim\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"Staking_flat.sol\":33476:33481  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":33476:33491  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Staking_flat.sol\":33500:33504  this */\n      address\n        /* \"Staking_flat.sol\":33476:33506  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_140:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_144:\n        /* \"Staking_flat.sol\":33460:33473  rewardToClaim */\n      dup2\n        /* \"Staking_flat.sol\":33460:33506  rewardToClaim > token.balanceOf(address(this)) */\n      gt\n        /* \"Staking_flat.sol\":33456:33566  if (rewardToClaim > token.balanceOf(address(this)))... */\n      iszero\n      tag_145\n      jumpi\n        /* \"Staking_flat.sol\":33536:33541  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":33536:33551  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Staking_flat.sol\":33560:33564  this */\n      address\n        /* \"Staking_flat.sol\":33536:33566  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_146:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_150:\n        /* \"Staking_flat.sol\":33520:33566  rewardToClaim = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":33456:33566  if (rewardToClaim > token.balanceOf(address(this)))... */\n    tag_145:\n        /* \"Staking_flat.sol\":33576:33621  token.safeTransfer(msg.sender, rewardToClaim) */\n      tag_151\n        /* \"Staking_flat.sol\":33595:33605  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":33607:33620  rewardToClaim */\n      dup3\n        /* \"Staking_flat.sol\":33576:33581  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":33576:33594  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_128\n      swap1\n        /* \"Staking_flat.sol\":33576:33621  token.safeTransfer(msg.sender, rewardToClaim) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"Staking_flat.sol\":33660:33661  0 */\n      0x00\n        /* \"Staking_flat.sol\":33631:33637  staker */\n      dup3\n        /* \"Staking_flat.sol\":33631:33657  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"Staking_flat.sol\":33631:33661  staker.stakerCurrentReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":33677:33711  Harvest(msg.sender, rewardToClaim) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"Staking_flat.sol\":33685:33695  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":33697:33710  rewardToClaim */\n      dup3\n        /* \"Staking_flat.sol\":33677:33711  Harvest(msg.sender, rewardToClaim) */\n      mload(0x40)\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Staking_flat.sol\":33172:33718  {... */\n      pop\n      pop\n        /* \"Staking_flat.sol\":33147:33718  function harvest() public{... */\n      jump\t// out\n        /* \"Staking_flat.sol\":32737:32894  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n    tag_40:\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      tag_154\n        /* \"Staking_flat.sol\":26101:26111  _msgSender */\n      tag_155\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      tag_156\n        /* \"Staking_flat.sol\":26090:26095  owner */\n      tag_63\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      jump\t// in\n    tag_156:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking_flat.sol\":26082:26150  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"Staking_flat.sol\":32831:32832  0 */\n      0x00\n        /* \"Staking_flat.sol\":32818:32828  lockupTime */\n      dup2\n        /* \"Staking_flat.sol\":32818:32832  lockupTime > 0 */\n      gt\n        /* \"Staking_flat.sol\":32810:32850  require(lockupTime > 0, \"Can't be zero\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"Staking_flat.sol\":32877:32887  lockupTime */\n      dup1\n        /* \"Staking_flat.sol\":32861:32874  _lockupPeriod */\n      0x05\n        /* \"Staking_flat.sol\":32861:32887  _lockupPeriod = lockupTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":32737:32894  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":29432:29928  function startStaking(uint256 _amount, uint256 _mode) external {... */\n    tag_44:\n        /* \"Staking_flat.sol\":29532:29533  0 */\n      0x00\n        /* \"Staking_flat.sol\":29522:29529  _amount */\n      dup3\n        /* \"Staking_flat.sol\":29522:29533  _amount > 0 */\n      gt\n        /* \"Staking_flat.sol\":29514:29569  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_90\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"Staking_flat.sol\":29617:29624  _amount */\n      dup2\n        /* \"Staking_flat.sol\":29587:29592  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":29587:29602  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Staking_flat.sol\":29603:29613  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":29587:29614  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_167:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_171:\n        /* \"Staking_flat.sol\":29587:29624  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"Staking_flat.sol\":29579:29642  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"Staking_flat.sol\":29690:29694  0x55 */\n      0x55\n        /* \"Staking_flat.sol\":29660:29667  _staker */\n      0x07\n        /* \"Staking_flat.sol\":29660:29679  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":29668:29678  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":29660:29679  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":29660:29686  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"Staking_flat.sol\":29660:29694  _staker[msg.sender].staked != 0x55 */\n      eq\n      iszero\n        /* \"Staking_flat.sol\":29652:29714  require(_staker[msg.sender].staked != 0x55, \"Already started\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"Staking_flat.sol\":29752:29757  _mode */\n      dup1\n        /* \"Staking_flat.sol\":29725:29732  _staker */\n      0x07\n        /* \"Staking_flat.sol\":29725:29744  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":29733:29743  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":29725:29744  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":29725:29749  _staker[msg.sender].mode */\n      0x02\n      add\n        /* \"Staking_flat.sol\":29725:29757  _staker[msg.sender].mode = _mode */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":29804:29819  block.timestamp */\n      timestamp\n        /* \"Staking_flat.sol\":29767:29774  _staker */\n      0x07\n        /* \"Staking_flat.sol\":29767:29786  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":29775:29785  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":29767:29786  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":29767:29801  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n        /* \"Staking_flat.sol\":29767:29819  _staker[msg.sender].stakeStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":29858:29862  0x55 */\n      0x55\n        /* \"Staking_flat.sol\":29829:29836  _staker */\n      0x07\n        /* \"Staking_flat.sol\":29829:29848  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":29837:29847  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":29829:29848  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":29829:29855  _staker[msg.sender].staked */\n      0x05\n      add\n        /* \"Staking_flat.sol\":29829:29862  _staker[msg.sender].staked = 0x55 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":29872:29880  _stakers */\n      0x06\n        /* \"Staking_flat.sol\":29886:29896  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":29872:29897  _stakers.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":29907:29921  stake(_amount) */\n      tag_179\n        /* \"Staking_flat.sol\":29913:29920  _amount */\n      dup3\n        /* \"Staking_flat.sol\":29907:29912  stake */\n      tag_74\n        /* \"Staking_flat.sol\":29907:29921  stake(_amount) */\n      jump\t// in\n    tag_179:\n        /* \"Staking_flat.sol\":29432:29928  function startStaking(uint256 _amount, uint256 _mode) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":30684:30784  function getNumberofStakers() public view returns (uint256) {... */\n    tag_46:\n        /* \"Staking_flat.sol\":30735:30742  uint256 */\n      0x00\n        /* \"Staking_flat.sol\":30762:30770  _stakers */\n      0x06\n        /* \"Staking_flat.sol\":30762:30777  _stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking_flat.sol\":30755:30777  return _stakers.length */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":30684:30784  function getNumberofStakers() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Staking_flat.sol\":32954:33109  function rewardToHarvest() public view returns (uint256){... */\n    tag_49:\n        /* \"Staking_flat.sol\":33002:33009  uint256 */\n      0x00\n        /* \"Staking_flat.sol\":33063:33070  _staker */\n      0x07\n        /* \"Staking_flat.sol\":33063:33082  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":33071:33081  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":33063:33082  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":33063:33102  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"Staking_flat.sol\":33056:33102  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":32954:33109  function rewardToHarvest() public view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"Staking_flat.sol\":32217:32458  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n    tag_53:\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      tag_183\n        /* \"Staking_flat.sol\":26101:26111  _msgSender */\n      tag_155\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      jump\t// in\n    tag_183:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      tag_184\n        /* \"Staking_flat.sol\":26090:26095  owner */\n      tag_63\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      jump\t// in\n    tag_184:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking_flat.sol\":26082:26150  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_159\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"Staking_flat.sol\":32326:32327  0 */\n      0x00\n        /* \"Staking_flat.sol\":32310:32323  __eventPeriod */\n      dup2\n        /* \"Staking_flat.sol\":32310:32327  __eventPeriod > 0 */\n      gt\n        /* \"Staking_flat.sol\":32302:32355  require(__eventPeriod > 0, \"Invalid Lockup Duration\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"Staking_flat.sol\":32381:32406  __eventPeriod.mul(1 days) */\n      tag_191\n        /* \"Staking_flat.sol\":32399:32405  1 days */\n      0x015180\n        /* \"Staking_flat.sol\":32381:32394  __eventPeriod */\n      dup3\n        /* \"Staking_flat.sol\":32381:32398  __eventPeriod.mul */\n      tag_124\n      swap1\n        /* \"Staking_flat.sol\":32381:32406  __eventPeriod.mul(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"Staking_flat.sol\":32366:32378  _eventPeriod */\n      0x02\n        /* \"Staking_flat.sol\":32366:32406  _eventPeriod = __eventPeriod.mul(1 days) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":32422:32451  SetEventPeriod(__eventPeriod) */\n      0x189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c\n        /* \"Staking_flat.sol\":32437:32450  __eventPeriod */\n      dup2\n        /* \"Staking_flat.sol\":32422:32451  SetEventPeriod(__eventPeriod) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Staking_flat.sol\":32217:32458  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":26510:26611  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      tag_194\n        /* \"Staking_flat.sol\":26101:26111  _msgSender */\n      tag_155\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      jump\t// in\n    tag_194:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      tag_195\n        /* \"Staking_flat.sol\":26090:26095  owner */\n      tag_63\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      jump\t// in\n    tag_195:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking_flat.sol\":26082:26150  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_159\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"Staking_flat.sol\":26574:26604  _transferOwnership(address(0)) */\n      tag_199\n        /* \"Staking_flat.sol\":26601:26602  0 */\n      0x00\n        /* \"Staking_flat.sol\":26574:26592  _transferOwnership */\n      tag_200\n        /* \"Staking_flat.sol\":26574:26604  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_199:\n        /* \"Staking_flat.sol\":26510:26611  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Staking_flat.sol\":34023:34113  function getRewardRate() public view returns (uint256) {... */\n    tag_57:\n        /* \"Staking_flat.sol\":34069:34076  uint256 */\n      0x00\n        /* \"Staking_flat.sol\":34095:34106  _rewardRate */\n      sload(0x03)\n        /* \"Staking_flat.sol\":34088:34106  return _rewardRate */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":34023:34113  function getRewardRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Staking_flat.sol\":28087:28113  uint256 public totalStaked */\n    tag_60:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"Staking_flat.sol\":25878:25963  function owner() public view virtual returns (address) {... */\n    tag_63:\n        /* \"Staking_flat.sol\":25924:25931  address */\n      0x00\n        /* \"Staking_flat.sol\":25950:25956  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":25943:25956  return _owner */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":25878:25963  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Staking_flat.sol\":32464:32731  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n    tag_68:\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      tag_204\n        /* \"Staking_flat.sol\":26101:26111  _msgSender */\n      tag_155\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      jump\t// in\n    tag_204:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      tag_205\n        /* \"Staking_flat.sol\":26090:26095  owner */\n      tag_63\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      jump\t// in\n    tag_205:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking_flat.sol\":26082:26150  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_159\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"Staking_flat.sol\":32588:32589  0 */\n      0x00\n        /* \"Staking_flat.sol\":32567:32585  __unstakingFeeRate */\n      dup2\n        /* \"Staking_flat.sol\":32567:32589  __unstakingFeeRate > 0 */\n      gt\n        /* \"Staking_flat.sol\":32559:32620  require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"Staking_flat.sol\":32651:32669  __unstakingFeeRate */\n      dup1\n        /* \"Staking_flat.sol\":32631:32648  _unstakingFeeRate */\n      0x01\n        /* \"Staking_flat.sol\":32631:32669  _unstakingFeeRate = __unstakingFeeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":32685:32724  SetUnstakingFeeRate(__unstakingFeeRate) */\n      0x150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81\n        /* \"Staking_flat.sol\":32705:32723  __unstakingFeeRate */\n      dup2\n        /* \"Staking_flat.sol\":32685:32724  SetUnstakingFeeRate(__unstakingFeeRate) */\n      mload(0x40)\n      tag_212\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Staking_flat.sol\":32464:32731  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":31991:32211  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n    tag_71:\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      tag_214\n        /* \"Staking_flat.sol\":26101:26111  _msgSender */\n      tag_155\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      jump\t// in\n    tag_214:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      tag_215\n        /* \"Staking_flat.sol\":26090:26095  owner */\n      tag_63\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      jump\t// in\n    tag_215:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking_flat.sol\":26082:26150  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_159\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"Staking_flat.sol\":32097:32098  0 */\n      0x00\n        /* \"Staking_flat.sol\":32082:32094  __rewardRate */\n      dup2\n        /* \"Staking_flat.sol\":32082:32098  __rewardRate > 0 */\n      gt\n        /* \"Staking_flat.sol\":32074:32116  require(__rewardRate > 0, \"Invalid value\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"Staking_flat.sol\":32149:32161  __rewardRate */\n      dup1\n        /* \"Staking_flat.sol\":32135:32146  _rewardRate */\n      0x03\n        /* \"Staking_flat.sol\":32135:32161  _rewardRate = __rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":32177:32204  SetRewardRate(__rewardRate) */\n      0x1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f\n        /* \"Staking_flat.sol\":32191:32203  __rewardRate */\n      dup2\n        /* \"Staking_flat.sol\":32177:32204  SetRewardRate(__rewardRate) */\n      mload(0x40)\n      tag_222\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Staking_flat.sol\":31991:32211  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":29993:30580  function stake(uint256 _amount) public{... */\n    tag_74:\n        /* \"Staking_flat.sol\":30068:30069  0 */\n      0x00\n        /* \"Staking_flat.sol\":30058:30065  _amount */\n      dup2\n        /* \"Staking_flat.sol\":30058:30069  _amount > 0 */\n      gt\n        /* \"Staking_flat.sol\":30050:30105  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_90\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"Staking_flat.sol\":30153:30160  _amount */\n      dup1\n        /* \"Staking_flat.sol\":30123:30128  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":30123:30138  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Staking_flat.sol\":30139:30149  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":30123:30150  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_226:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_227:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_230:\n        /* \"Staking_flat.sol\":30123:30160  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"Staking_flat.sol\":30115:30178  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_174\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"Staking_flat.sol\":30226:30230  0x55 */\n      0x55\n        /* \"Staking_flat.sol\":30196:30203  _staker */\n      0x07\n        /* \"Staking_flat.sol\":30196:30215  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":30204:30214  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":30196:30215  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":30196:30222  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"Staking_flat.sol\":30196:30230  _staker[msg.sender].staked == 0x55 */\n      eq\n        /* \"Staking_flat.sol\":30188:30256  require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"Staking_flat.sol\":30275:30289  updateReward() */\n      tag_236\n        /* \"Staking_flat.sol\":30275:30287  updateReward */\n      tag_95\n        /* \"Staking_flat.sol\":30275:30289  updateReward() */\n      jump\t// in\n    tag_236:\n        /* \"Staking_flat.sol\":30299:30320  Staker storage staker */\n      0x00\n        /* \"Staking_flat.sol\":30323:30330  _staker */\n      0x07\n        /* \"Staking_flat.sol\":30323:30342  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":30331:30341  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":30323:30342  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":30299:30342  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":30352:30410  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_237\n        /* \"Staking_flat.sol\":30375:30385  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":30395:30399  this */\n      address\n        /* \"Staking_flat.sol\":30402:30409  _amount */\n      dup5\n        /* \"Staking_flat.sol\":30352:30357  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":30352:30374  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_238\n      swap1\n        /* \"Staking_flat.sol\":30352:30410  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"Staking_flat.sol\":30442:30474  staker.stakedAmount.add(_amount) */\n      tag_239\n        /* \"Staking_flat.sol\":30466:30473  _amount */\n      dup3\n        /* \"Staking_flat.sol\":30442:30448  staker */\n      dup3\n        /* \"Staking_flat.sol\":30442:30461  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"Staking_flat.sol\":30442:30465  staker.stakedAmount.add */\n      tag_115\n      swap1\n        /* \"Staking_flat.sol\":30442:30474  staker.stakedAmount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"Staking_flat.sol\":30420:30426  staker */\n      dup2\n        /* \"Staking_flat.sol\":30420:30439  staker.stakedAmount */\n      0x01\n      add\n        /* \"Staking_flat.sol\":30420:30474  staker.stakedAmount = staker.stakedAmount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":30498:30522  totalStaked.add(_amount) */\n      tag_240\n        /* \"Staking_flat.sol\":30514:30521  _amount */\n      dup3\n        /* \"Staking_flat.sol\":30498:30509  totalStaked */\n      sload(0x08)\n        /* \"Staking_flat.sol\":30498:30513  totalStaked.add */\n      tag_115\n      swap1\n        /* \"Staking_flat.sol\":30498:30522  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"Staking_flat.sol\":30484:30495  totalStaked */\n      0x08\n        /* \"Staking_flat.sol\":30484:30522  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":30546:30573  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"Staking_flat.sol\":30553:30563  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":30565:30572  _amount */\n      dup4\n        /* \"Staking_flat.sol\":30546:30573  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_241\n      swap3\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Staking_flat.sol\":30031:30580  {... */\n      pop\n        /* \"Staking_flat.sol\":29993:30580  function stake(uint256 _amount) public{... */\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":26760:26958  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_78:\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      tag_243\n        /* \"Staking_flat.sol\":26101:26111  _msgSender */\n      tag_155\n        /* \"Staking_flat.sol\":26101:26113  _msgSender() */\n      jump\t// in\n    tag_243:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      tag_244\n        /* \"Staking_flat.sol\":26090:26095  owner */\n      tag_63\n        /* \"Staking_flat.sol\":26090:26097  owner() */\n      jump\t// in\n    tag_244:\n        /* \"Staking_flat.sol\":26090:26113  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking_flat.sol\":26082:26150  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_159\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"Staking_flat.sol\":26868:26869  0 */\n      0x00\n        /* \"Staking_flat.sol\":26848:26870  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":26848:26856  newOwner */\n      dup2\n        /* \"Staking_flat.sol\":26848:26870  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Staking_flat.sol\":26840:26913  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"Staking_flat.sol\":26923:26951  _transferOwnership(newOwner) */\n      tag_251\n        /* \"Staking_flat.sol\":26942:26950  newOwner */\n      dup2\n        /* \"Staking_flat.sol\":26923:26941  _transferOwnership */\n      tag_200\n        /* \"Staking_flat.sol\":26923:26951  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_251:\n        /* \"Staking_flat.sol\":26760:26958  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":33900:34017  function rewardAmount() public view returns (uint256) {... */\n    tag_80:\n        /* \"Staking_flat.sol\":33945:33952  uint256 */\n      0x00\n        /* \"Staking_flat.sol\":33971:33978  _staker */\n      0x07\n        /* \"Staking_flat.sol\":33971:33990  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":33979:33989  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":33971:33990  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":33971:34010  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"Staking_flat.sol\":33964:34010  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":33900:34017  function rewardAmount() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Staking_flat.sol\":28119:28138  IBEP20 public token */\n    tag_83:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking_flat.sol\":29050:29422  function updateReward() private{... */\n    tag_95:\n        /* \"Staking_flat.sol\":29100:29121  Staker storage staker */\n      0x00\n        /* \"Staking_flat.sol\":29124:29131  _staker */\n      0x07\n        /* \"Staking_flat.sol\":29124:29143  _staker[msg.sender] */\n      0x00\n        /* \"Staking_flat.sol\":29132:29142  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":29124:29143  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking_flat.sol\":29100:29143  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":29153:29170  uint256 newReward */\n      0x00\n        /* \"Staking_flat.sol\":29173:29281  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      tag_254\n        /* \"Staking_flat.sol\":29277:29280  1e4 */\n      0x2710\n        /* \"Staking_flat.sol\":29173:29272  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      tag_255\n        /* \"Staking_flat.sol\":29260:29271  _rewardRate */\n      sload(0x03)\n        /* \"Staking_flat.sol\":29173:29255  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)) */\n      tag_256\n        /* \"Staking_flat.sol\":29197:29254  block.number.sub(staker.lastUpdatedBlockNumber).div(8640) */\n      tag_257\n        /* \"Staking_flat.sol\":29249:29253  8640 */\n      0x21c0\n        /* \"Staking_flat.sol\":29197:29244  block.number.sub(staker.lastUpdatedBlockNumber) */\n      tag_258\n        /* \"Staking_flat.sol\":29214:29220  staker */\n      dup10\n        /* \"Staking_flat.sol\":29214:29243  staker.lastUpdatedBlockNumber */\n      0x04\n      add\n      sload\n        /* \"Staking_flat.sol\":29197:29209  block.number */\n      number\n        /* \"Staking_flat.sol\":29197:29213  block.number.sub */\n      tag_111\n      swap1\n        /* \"Staking_flat.sol\":29197:29244  block.number.sub(staker.lastUpdatedBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_258:\n        /* \"Staking_flat.sol\":29197:29248  block.number.sub(staker.lastUpdatedBlockNumber).div */\n      tag_112\n      swap1\n        /* \"Staking_flat.sol\":29197:29254  block.number.sub(staker.lastUpdatedBlockNumber).div(8640) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"Staking_flat.sol\":29173:29179  staker */\n      dup8\n        /* \"Staking_flat.sol\":29173:29192  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"Staking_flat.sol\":29173:29196  staker.stakedAmount.mul */\n      tag_124\n      swap1\n        /* \"Staking_flat.sol\":29173:29255  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"Staking_flat.sol\":29173:29259  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul */\n      tag_124\n      swap1\n        /* \"Staking_flat.sol\":29173:29272  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"Staking_flat.sol\":29173:29276  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div */\n      tag_112\n      swap1\n        /* \"Staking_flat.sol\":29173:29281  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"Staking_flat.sol\":29153:29281  uint256 newReward = staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":29320:29361  staker.stakerCurrentReward.add(newReward) */\n      tag_259\n        /* \"Staking_flat.sol\":29351:29360  newReward */\n      dup2\n        /* \"Staking_flat.sol\":29320:29326  staker */\n      dup4\n        /* \"Staking_flat.sol\":29320:29346  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"Staking_flat.sol\":29320:29350  staker.stakerCurrentReward.add */\n      tag_115\n      swap1\n        /* \"Staking_flat.sol\":29320:29361  staker.stakerCurrentReward.add(newReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"Staking_flat.sol\":29291:29297  staker */\n      dup3\n        /* \"Staking_flat.sol\":29291:29317  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"Staking_flat.sol\":29291:29361  staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":29403:29415  block.number */\n      number\n        /* \"Staking_flat.sol\":29371:29377  staker */\n      dup3\n        /* \"Staking_flat.sol\":29371:29400  staker.lastUpdatedBlockNumber */\n      0x04\n      add\n        /* \"Staking_flat.sol\":29371:29415  staker.lastUpdatedBlockNumber = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":29081:29422  {... */\n      pop\n      pop\n        /* \"Staking_flat.sol\":29050:29422  function updateReward() private{... */\n      jump\t// out\n        /* \"Staking_flat.sol\":14446:14542  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_111:\n        /* \"Staking_flat.sol\":14504:14511  uint256 */\n      0x00\n        /* \"Staking_flat.sol\":14534:14535  b */\n      dup2\n        /* \"Staking_flat.sol\":14530:14531  a */\n      dup4\n        /* \"Staking_flat.sol\":14530:14535  a - b */\n      tag_261\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"Staking_flat.sol\":14523:14535  return a - b */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":14446:14542  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":15174:15270  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_112:\n        /* \"Staking_flat.sol\":15232:15239  uint256 */\n      0x00\n        /* \"Staking_flat.sol\":15262:15263  b */\n      dup2\n        /* \"Staking_flat.sol\":15258:15259  a */\n      dup4\n        /* \"Staking_flat.sol\":15258:15263  a / b */\n      tag_264\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n        /* \"Staking_flat.sol\":15251:15263  return a / b */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":15174:15270  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":14079:14175  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_115:\n        /* \"Staking_flat.sol\":14137:14144  uint256 */\n      0x00\n        /* \"Staking_flat.sol\":14167:14168  b */\n      dup2\n        /* \"Staking_flat.sol\":14163:14164  a */\n      dup4\n        /* \"Staking_flat.sol\":14163:14168  a + b */\n      tag_267\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"Staking_flat.sol\":14156:14168  return a + b */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":14079:14175  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":14789:14885  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"Staking_flat.sol\":14847:14854  uint256 */\n      0x00\n        /* \"Staking_flat.sol\":14877:14878  b */\n      dup2\n        /* \"Staking_flat.sol\":14873:14874  a */\n      dup4\n        /* \"Staking_flat.sol\":14873:14878  a * b */\n      tag_270\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n        /* \"Staking_flat.sol\":14866:14878  return a * b */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":14789:14885  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":18231:18406  function safeTransfer(IBEP20 token, address to, uint256 value) internal {... */\n    tag_128:\n        /* \"Staking_flat.sol\":18313:18399  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_273\n        /* \"Staking_flat.sol\":18333:18338  token */\n      dup4\n        /* \"Staking_flat.sol\":18363:18386  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"Staking_flat.sol\":18388:18390  to */\n      dup5\n        /* \"Staking_flat.sol\":18392:18397  value */\n      dup5\n        /* \"Staking_flat.sol\":18340:18398  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_274\n      swap3\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking_flat.sol\":18313:18332  _callOptionalReturn */\n      tag_275\n        /* \"Staking_flat.sol\":18313:18399  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_273:\n        /* \"Staking_flat.sol\":18231:18406  function safeTransfer(IBEP20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":24669:24765  function _msgSender() internal view virtual returns (address) {... */\n    tag_155:\n        /* \"Staking_flat.sol\":24722:24729  address */\n      0x00\n        /* \"Staking_flat.sol\":24748:24758  msg.sender */\n      caller\n        /* \"Staking_flat.sol\":24741:24758  return msg.sender */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":24669:24765  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Staking_flat.sol\":27112:27299  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_200:\n        /* \"Staking_flat.sol\":27185:27201  address oldOwner */\n      0x00\n        /* \"Staking_flat.sol\":27204:27210  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":27185:27210  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":27229:27237  newOwner */\n      dup2\n        /* \"Staking_flat.sol\":27220:27226  _owner */\n      0x00\n      dup1\n        /* \"Staking_flat.sol\":27220:27237  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking_flat.sol\":27283:27291  newOwner */\n      dup2\n        /* \"Staking_flat.sol\":27252:27292  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":27273:27281  oldOwner */\n      dup2\n        /* \"Staking_flat.sol\":27252:27292  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Staking_flat.sol\":27175:27299  {... */\n      pop\n        /* \"Staking_flat.sol\":27112:27299  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":18412:18615  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {... */\n    tag_238:\n        /* \"Staking_flat.sol\":18512:18608  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_279\n        /* \"Staking_flat.sol\":18532:18537  token */\n      dup5\n        /* \"Staking_flat.sol\":18562:18589  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"Staking_flat.sol\":18591:18595  from */\n      dup6\n        /* \"Staking_flat.sol\":18597:18599  to */\n      dup6\n        /* \"Staking_flat.sol\":18601:18606  value */\n      dup6\n        /* \"Staking_flat.sol\":18539:18607  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_280\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking_flat.sol\":18512:18531  _callOptionalReturn */\n      tag_275\n        /* \"Staking_flat.sol\":18512:18608  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_279:\n        /* \"Staking_flat.sol\":18412:18615  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":20498:21257  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_275:\n        /* \"Staking_flat.sol\":20925:20948  bytes memory returndata */\n      0x00\n        /* \"Staking_flat.sol\":20951:21020  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_283\n        /* \"Staking_flat.sol\":20979:20983  data */\n      dup3\n        /* \"Staking_flat.sol\":20951:21020  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"Staking_flat.sol\":20959:20964  token */\n      dup6\n        /* \"Staking_flat.sol\":20951:20978  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_284\n      swap1\n        /* \"Staking_flat.sol\":20951:21020  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n        /* \"Staking_flat.sol\":20925:21020  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":21054:21055  0 */\n      0x00\n        /* \"Staking_flat.sol\":21034:21044  returndata */\n      dup2\n        /* \"Staking_flat.sol\":21034:21051  returndata.length */\n      mload\n        /* \"Staking_flat.sol\":21034:21055  returndata.length > 0 */\n      gt\n        /* \"Staking_flat.sol\":21030:21251  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_285\n      jumpi\n        /* \"Staking_flat.sol\":21174:21184  returndata */\n      dup1\n        /* \"Staking_flat.sol\":21163:21193  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_286\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"Staking_flat.sol\":21155:21240  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"Staking_flat.sol\":21030:21251  if (returndata.length > 0) { // Return data is optional... */\n    tag_285:\n        /* \"Staking_flat.sol\":20568:21257  {... */\n      pop\n        /* \"Staking_flat.sol\":20498:21257  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":6938:7161  function functionCall(... */\n    tag_284:\n        /* \"Staking_flat.sol\":7071:7083  bytes memory */\n      0x60\n        /* \"Staking_flat.sol\":7102:7154  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_292\n        /* \"Staking_flat.sol\":7124:7130  target */\n      dup5\n        /* \"Staking_flat.sol\":7132:7136  data */\n      dup5\n        /* \"Staking_flat.sol\":7138:7139  0 */\n      0x00\n        /* \"Staking_flat.sol\":7141:7153  errorMessage */\n      dup6\n        /* \"Staking_flat.sol\":7102:7123  functionCallWithValue */\n      tag_293\n        /* \"Staking_flat.sol\":7102:7154  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_292:\n        /* \"Staking_flat.sol\":7095:7154  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":6938:7161  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":8025:8524  function functionCallWithValue(... */\n    tag_293:\n        /* \"Staking_flat.sol\":8190:8202  bytes memory */\n      0x60\n        /* \"Staking_flat.sol\":8247:8252  value */\n      dup3\n        /* \"Staking_flat.sol\":8222:8243  address(this).balance */\n      selfbalance\n        /* \"Staking_flat.sol\":8222:8252  address(this).balance >= value */\n      lt\n      iszero\n        /* \"Staking_flat.sol\":8214:8295  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"Staking_flat.sol\":8313:8331  isContract(target) */\n      tag_298\n        /* \"Staking_flat.sol\":8324:8330  target */\n      dup6\n        /* \"Staking_flat.sol\":8313:8323  isContract */\n      tag_299\n        /* \"Staking_flat.sol\":8313:8331  isContract(target) */\n      jump\t// in\n    tag_298:\n        /* \"Staking_flat.sol\":8305:8365  require(isContract(target), \"Address: call to non-contract\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"Staking_flat.sol\":8377:8389  bool success */\n      0x00\n        /* \"Staking_flat.sol\":8391:8414  bytes memory returndata */\n      dup1\n        /* \"Staking_flat.sol\":8418:8424  target */\n      dup7\n        /* \"Staking_flat.sol\":8418:8429  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking_flat.sol\":8437:8442  value */\n      dup6\n        /* \"Staking_flat.sol\":8444:8448  data */\n      dup8\n        /* \"Staking_flat.sol\":8418:8449  target.call{value: value}(data) */\n      mload(0x40)\n      tag_303\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_307\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_306)\n    tag_307:\n      0x60\n      swap2\n      pop\n    tag_306:\n      pop\n        /* \"Staking_flat.sol\":8376:8449  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Staking_flat.sol\":8466:8517  verifyCallResult(success, returndata, errorMessage) */\n      tag_308\n        /* \"Staking_flat.sol\":8483:8490  success */\n      dup3\n        /* \"Staking_flat.sol\":8492:8502  returndata */\n      dup3\n        /* \"Staking_flat.sol\":8504:8516  errorMessage */\n      dup7\n        /* \"Staking_flat.sol\":8466:8482  verifyCallResult */\n      tag_309\n        /* \"Staking_flat.sol\":8466:8517  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_308:\n        /* \"Staking_flat.sol\":8459:8517  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Staking_flat.sol\":8025:8524  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":4252:4572  function isContract(address account) internal view returns (bool) {... */\n    tag_299:\n        /* \"Staking_flat.sol\":4312:4316  bool */\n      0x00\n        /* \"Staking_flat.sol\":4564:4565  0 */\n      dup1\n        /* \"Staking_flat.sol\":4542:4549  account */\n      dup3\n        /* \"Staking_flat.sol\":4542:4561  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"Staking_flat.sol\":4542:4565  account.code.length > 0 */\n      gt\n        /* \"Staking_flat.sol\":4535:4565  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"Staking_flat.sol\":4252:4572  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Staking_flat.sol\":10638:11330  function verifyCallResult(... */\n    tag_309:\n        /* \"Staking_flat.sol\":10784:10796  bytes memory */\n      0x60\n        /* \"Staking_flat.sol\":10812:10819  success */\n      dup4\n        /* \"Staking_flat.sol\":10808:11324  if (success) {... */\n      iszero\n      tag_312\n      jumpi\n        /* \"Staking_flat.sol\":10842:10852  returndata */\n      dup3\n        /* \"Staking_flat.sol\":10835:10852  return returndata */\n      swap1\n      pop\n      jump(tag_311)\n        /* \"Staking_flat.sol\":10808:11324  if (success) {... */\n    tag_312:\n        /* \"Staking_flat.sol\":10973:10974  0 */\n      0x00\n        /* \"Staking_flat.sol\":10953:10963  returndata */\n      dup4\n        /* \"Staking_flat.sol\":10953:10970  returndata.length */\n      mload\n        /* \"Staking_flat.sol\":10953:10974  returndata.length > 0 */\n      gt\n        /* \"Staking_flat.sol\":10949:11314  if (returndata.length > 0) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"Staking_flat.sol\":11147:11157  returndata */\n      dup3\n        /* \"Staking_flat.sol\":11141:11158  mload(returndata) */\n      mload\n        /* \"Staking_flat.sol\":11207:11222  returndata_size */\n      dup1\n        /* \"Staking_flat.sol\":11194:11204  returndata */\n      dup5\n        /* \"Staking_flat.sol\":11190:11192  32 */\n      0x20\n        /* \"Staking_flat.sol\":11186:11205  add(32, returndata) */\n      add\n        /* \"Staking_flat.sol\":11179:11223  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"Staking_flat.sol\":10949:11314  if (returndata.length > 0) {... */\n    tag_314:\n        /* \"Staking_flat.sol\":11286:11298  errorMessage */\n      dup2\n        /* \"Staking_flat.sol\":11279:11299  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap2\n      swap1\n      tag_317\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Staking_flat.sol\":10638:11330  function verifyCallResult(... */\n    tag_311:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_319:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_321\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_323:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_325\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_327:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_329\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_331:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_333\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_330\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_77:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_336\n      tag_337\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":665:784   */\n    tag_335:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_338\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_319\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_287:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_341\n      tag_337\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1008:1127   */\n    tag_340:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_342\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_323\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_31:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_345\n      tag_337\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1351:1470   */\n    tag_344:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_346\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_327\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_101:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_349\n      tag_337\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":1697:1816   */\n    tag_348:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_350\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_331\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2441   */\n    tag_43:\n        /* \"#utility.yul\":2035:2041   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup1\n        /* \"#utility.yul\":2092:2094   */\n      0x40\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2071:2078   */\n      dup6\n        /* \"#utility.yul\":2067:2090   */\n      sub\n        /* \"#utility.yul\":2063:2095   */\n      slt\n        /* \"#utility.yul\":2060:2179   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2098:2177   */\n      tag_353\n      tag_337\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2060:2179   */\n    tag_352:\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2243:2296   */\n      tag_354\n        /* \"#utility.yul\":2288:2295   */\n      dup6\n        /* \"#utility.yul\":2279:2285   */\n      dup3\n        /* \"#utility.yul\":2268:2277   */\n      dup7\n        /* \"#utility.yul\":2264:2286   */\n      add\n        /* \"#utility.yul\":2243:2296   */\n      tag_327\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2233:2296   */\n      swap3\n      pop\n        /* \"#utility.yul\":2189:2306   */\n      pop\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"#utility.yul\":2371:2424   */\n      tag_355\n        /* \"#utility.yul\":2416:2423   */\n      dup6\n        /* \"#utility.yul\":2407:2413   */\n      dup3\n        /* \"#utility.yul\":2396:2405   */\n      dup7\n        /* \"#utility.yul\":2392:2414   */\n      add\n        /* \"#utility.yul\":2371:2424   */\n      tag_327\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2361:2424   */\n      swap2\n      pop\n        /* \"#utility.yul\":2316:2434   */\n      pop\n        /* \"#utility.yul\":1967:2441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2447:2565   */\n    tag_356:\n        /* \"#utility.yul\":2534:2558   */\n      tag_358\n        /* \"#utility.yul\":2552:2557   */\n      dup2\n        /* \"#utility.yul\":2534:2558   */\n      tag_359\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2529:2532   */\n      dup3\n        /* \"#utility.yul\":2522:2559   */\n      mstore\n        /* \"#utility.yul\":2447:2565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2944   */\n    tag_360:\n        /* \"#utility.yul\":2675:2678   */\n      0x00\n        /* \"#utility.yul\":2703:2741   */\n      tag_362\n        /* \"#utility.yul\":2735:2740   */\n      dup3\n        /* \"#utility.yul\":2703:2741   */\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":2757:2845   */\n      tag_364\n        /* \"#utility.yul\":2838:2844   */\n      dup2\n        /* \"#utility.yul\":2833:2836   */\n      dup6\n        /* \"#utility.yul\":2757:2845   */\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":2750:2845   */\n      swap4\n      pop\n        /* \"#utility.yul\":2854:2906   */\n      tag_366\n        /* \"#utility.yul\":2899:2905   */\n      dup2\n        /* \"#utility.yul\":2894:2897   */\n      dup6\n        /* \"#utility.yul\":2887:2891   */\n      0x20\n        /* \"#utility.yul\":2880:2885   */\n      dup7\n        /* \"#utility.yul\":2876:2892   */\n      add\n        /* \"#utility.yul\":2854:2906   */\n      tag_367\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2931:2937   */\n      dup1\n        /* \"#utility.yul\":2926:2929   */\n      dup5\n        /* \"#utility.yul\":2922:2938   */\n      add\n        /* \"#utility.yul\":2915:2938   */\n      swap2\n      pop\n        /* \"#utility.yul\":2679:2944   */\n      pop\n        /* \"#utility.yul\":2571:2944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2950:3109   */\n    tag_368:\n        /* \"#utility.yul\":3051:3102   */\n      tag_370\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3051:3102   */\n      tag_371\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":3046:3049   */\n      dup3\n        /* \"#utility.yul\":3039:3103   */\n      mstore\n        /* \"#utility.yul\":2950:3109   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3479   */\n    tag_372:\n        /* \"#utility.yul\":3203:3206   */\n      0x00\n        /* \"#utility.yul\":3231:3270   */\n      tag_374\n        /* \"#utility.yul\":3264:3269   */\n      dup3\n        /* \"#utility.yul\":3231:3270   */\n      tag_375\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3286:3357   */\n      tag_376\n        /* \"#utility.yul\":3350:3356   */\n      dup2\n        /* \"#utility.yul\":3345:3348   */\n      dup6\n        /* \"#utility.yul\":3286:3357   */\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3279:3357   */\n      swap4\n      pop\n        /* \"#utility.yul\":3366:3418   */\n      tag_378\n        /* \"#utility.yul\":3411:3417   */\n      dup2\n        /* \"#utility.yul\":3406:3409   */\n      dup6\n        /* \"#utility.yul\":3399:3403   */\n      0x20\n        /* \"#utility.yul\":3392:3397   */\n      dup7\n        /* \"#utility.yul\":3388:3404   */\n      add\n        /* \"#utility.yul\":3366:3418   */\n      tag_367\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3443:3472   */\n      tag_379\n        /* \"#utility.yul\":3465:3471   */\n      dup2\n        /* \"#utility.yul\":3443:3472   */\n      tag_380\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3438:3441   */\n      dup5\n        /* \"#utility.yul\":3434:3473   */\n      add\n        /* \"#utility.yul\":3427:3473   */\n      swap2\n      pop\n        /* \"#utility.yul\":3207:3479   */\n      pop\n        /* \"#utility.yul\":3115:3479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3485:3851   */\n    tag_381:\n        /* \"#utility.yul\":3627:3630   */\n      0x00\n        /* \"#utility.yul\":3648:3715   */\n      tag_383\n        /* \"#utility.yul\":3712:3714   */\n      0x10\n        /* \"#utility.yul\":3707:3710   */\n      dup4\n        /* \"#utility.yul\":3648:3715   */\n      tag_377\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3641:3715   */\n      swap2\n      pop\n        /* \"#utility.yul\":3724:3817   */\n      tag_384\n        /* \"#utility.yul\":3813:3816   */\n      dup3\n        /* \"#utility.yul\":3724:3817   */\n      tag_385\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3842:3844   */\n      0x20\n        /* \"#utility.yul\":3837:3840   */\n      dup3\n        /* \"#utility.yul\":3833:3845   */\n      add\n        /* \"#utility.yul\":3826:3845   */\n      swap1\n      pop\n        /* \"#utility.yul\":3485:3851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3857:4223   */\n    tag_386:\n        /* \"#utility.yul\":3999:4002   */\n      0x00\n        /* \"#utility.yul\":4020:4087   */\n      tag_388\n        /* \"#utility.yul\":4084:4086   */\n      0x15\n        /* \"#utility.yul\":4079:4082   */\n      dup4\n        /* \"#utility.yul\":4020:4087   */\n      tag_377\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4013:4087   */\n      swap2\n      pop\n        /* \"#utility.yul\":4096:4189   */\n      tag_389\n        /* \"#utility.yul\":4185:4188   */\n      dup3\n        /* \"#utility.yul\":4096:4189   */\n      tag_390\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"#utility.yul\":4209:4212   */\n      dup3\n        /* \"#utility.yul\":4205:4217   */\n      add\n        /* \"#utility.yul\":4198:4217   */\n      swap1\n      pop\n        /* \"#utility.yul\":3857:4223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4229:4595   */\n    tag_391:\n        /* \"#utility.yul\":4371:4374   */\n      0x00\n        /* \"#utility.yul\":4392:4459   */\n      tag_393\n        /* \"#utility.yul\":4456:4458   */\n      0x2a\n        /* \"#utility.yul\":4451:4454   */\n      dup4\n        /* \"#utility.yul\":4392:4459   */\n      tag_377\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4385:4459   */\n      swap2\n      pop\n        /* \"#utility.yul\":4468:4561   */\n      tag_394\n        /* \"#utility.yul\":4557:4560   */\n      dup3\n        /* \"#utility.yul\":4468:4561   */\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4586:4588   */\n      0x40\n        /* \"#utility.yul\":4581:4584   */\n      dup3\n        /* \"#utility.yul\":4577:4589   */\n      add\n        /* \"#utility.yul\":4570:4589   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4601:4967   */\n    tag_396:\n        /* \"#utility.yul\":4743:4746   */\n      0x00\n        /* \"#utility.yul\":4764:4831   */\n      tag_398\n        /* \"#utility.yul\":4828:4830   */\n      0x26\n        /* \"#utility.yul\":4823:4826   */\n      dup4\n        /* \"#utility.yul\":4764:4831   */\n      tag_377\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4757:4831   */\n      swap2\n      pop\n        /* \"#utility.yul\":4840:4933   */\n      tag_399\n        /* \"#utility.yul\":4929:4932   */\n      dup3\n        /* \"#utility.yul\":4840:4933   */\n      tag_400\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4958:4960   */\n      0x40\n        /* \"#utility.yul\":4953:4956   */\n      dup3\n        /* \"#utility.yul\":4949:4961   */\n      add\n        /* \"#utility.yul\":4942:4961   */\n      swap1\n      pop\n        /* \"#utility.yul\":4601:4967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4973:5339   */\n    tag_401:\n        /* \"#utility.yul\":5115:5118   */\n      0x00\n        /* \"#utility.yul\":5136:5203   */\n      tag_403\n        /* \"#utility.yul\":5200:5202   */\n      0x0e\n        /* \"#utility.yul\":5195:5198   */\n      dup4\n        /* \"#utility.yul\":5136:5203   */\n      tag_377\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5129:5203   */\n      swap2\n      pop\n        /* \"#utility.yul\":5212:5305   */\n      tag_404\n        /* \"#utility.yul\":5301:5304   */\n      dup3\n        /* \"#utility.yul\":5212:5305   */\n      tag_405\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5330:5332   */\n      0x20\n        /* \"#utility.yul\":5325:5328   */\n      dup3\n        /* \"#utility.yul\":5321:5333   */\n      add\n        /* \"#utility.yul\":5314:5333   */\n      swap1\n      pop\n        /* \"#utility.yul\":4973:5339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5345:5711   */\n    tag_406:\n        /* \"#utility.yul\":5487:5490   */\n      0x00\n        /* \"#utility.yul\":5508:5575   */\n      tag_408\n        /* \"#utility.yul\":5572:5574   */\n      0x0f\n        /* \"#utility.yul\":5567:5570   */\n      dup4\n        /* \"#utility.yul\":5508:5575   */\n      tag_377\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5501:5575   */\n      swap2\n      pop\n        /* \"#utility.yul\":5584:5677   */\n      tag_409\n        /* \"#utility.yul\":5673:5676   */\n      dup3\n        /* \"#utility.yul\":5584:5677   */\n      tag_410\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5702:5704   */\n      0x20\n        /* \"#utility.yul\":5697:5700   */\n      dup3\n        /* \"#utility.yul\":5693:5705   */\n      add\n        /* \"#utility.yul\":5686:5705   */\n      swap1\n      pop\n        /* \"#utility.yul\":5345:5711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5717:6083   */\n    tag_411:\n        /* \"#utility.yul\":5859:5862   */\n      0x00\n        /* \"#utility.yul\":5880:5947   */\n      tag_413\n        /* \"#utility.yul\":5944:5946   */\n      0x26\n        /* \"#utility.yul\":5939:5942   */\n      dup4\n        /* \"#utility.yul\":5880:5947   */\n      tag_377\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5873:5947   */\n      swap2\n      pop\n        /* \"#utility.yul\":5956:6049   */\n      tag_414\n        /* \"#utility.yul\":6045:6048   */\n      dup3\n        /* \"#utility.yul\":5956:6049   */\n      tag_415\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":6074:6076   */\n      0x40\n        /* \"#utility.yul\":6069:6072   */\n      dup3\n        /* \"#utility.yul\":6065:6077   */\n      add\n        /* \"#utility.yul\":6058:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5717:6083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6089:6455   */\n    tag_416:\n        /* \"#utility.yul\":6231:6234   */\n      0x00\n        /* \"#utility.yul\":6252:6319   */\n      tag_418\n        /* \"#utility.yul\":6316:6318   */\n      0x1f\n        /* \"#utility.yul\":6311:6314   */\n      dup4\n        /* \"#utility.yul\":6252:6319   */\n      tag_377\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6245:6319   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6421   */\n      tag_419\n        /* \"#utility.yul\":6417:6420   */\n      dup3\n        /* \"#utility.yul\":6328:6421   */\n      tag_420\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6446:6448   */\n      0x20\n        /* \"#utility.yul\":6441:6444   */\n      dup3\n        /* \"#utility.yul\":6437:6449   */\n      add\n        /* \"#utility.yul\":6430:6449   */\n      swap1\n      pop\n        /* \"#utility.yul\":6089:6455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6461:6827   */\n    tag_421:\n        /* \"#utility.yul\":6603:6606   */\n      0x00\n        /* \"#utility.yul\":6624:6691   */\n      tag_423\n        /* \"#utility.yul\":6688:6690   */\n      0x20\n        /* \"#utility.yul\":6683:6686   */\n      dup4\n        /* \"#utility.yul\":6624:6691   */\n      tag_377\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6617:6691   */\n      swap2\n      pop\n        /* \"#utility.yul\":6700:6793   */\n      tag_424\n        /* \"#utility.yul\":6789:6792   */\n      dup3\n        /* \"#utility.yul\":6700:6793   */\n      tag_425\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":6818:6820   */\n      0x20\n        /* \"#utility.yul\":6813:6816   */\n      dup3\n        /* \"#utility.yul\":6809:6821   */\n      add\n        /* \"#utility.yul\":6802:6821   */\n      swap1\n      pop\n        /* \"#utility.yul\":6461:6827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6833:7199   */\n    tag_426:\n        /* \"#utility.yul\":6975:6978   */\n      0x00\n        /* \"#utility.yul\":6996:7063   */\n      tag_428\n        /* \"#utility.yul\":7060:7062   */\n      0x0d\n        /* \"#utility.yul\":7055:7058   */\n      dup4\n        /* \"#utility.yul\":6996:7063   */\n      tag_377\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":6989:7063   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7165   */\n      tag_429\n        /* \"#utility.yul\":7161:7164   */\n      dup3\n        /* \"#utility.yul\":7072:7165   */\n      tag_430\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7190:7192   */\n      0x20\n        /* \"#utility.yul\":7185:7188   */\n      dup3\n        /* \"#utility.yul\":7181:7193   */\n      add\n        /* \"#utility.yul\":7174:7193   */\n      swap1\n      pop\n        /* \"#utility.yul\":6833:7199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7205:7571   */\n    tag_431:\n        /* \"#utility.yul\":7347:7350   */\n      0x00\n        /* \"#utility.yul\":7368:7435   */\n      tag_433\n        /* \"#utility.yul\":7432:7434   */\n      0x1d\n        /* \"#utility.yul\":7427:7430   */\n      dup4\n        /* \"#utility.yul\":7368:7435   */\n      tag_377\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7361:7435   */\n      swap2\n      pop\n        /* \"#utility.yul\":7444:7537   */\n      tag_434\n        /* \"#utility.yul\":7533:7536   */\n      dup3\n        /* \"#utility.yul\":7444:7537   */\n      tag_435\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7557:7560   */\n      dup3\n        /* \"#utility.yul\":7553:7565   */\n      add\n        /* \"#utility.yul\":7546:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7205:7571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7577:7943   */\n    tag_436:\n        /* \"#utility.yul\":7719:7722   */\n      0x00\n        /* \"#utility.yul\":7740:7807   */\n      tag_438\n        /* \"#utility.yul\":7804:7806   */\n      0x1a\n        /* \"#utility.yul\":7799:7802   */\n      dup4\n        /* \"#utility.yul\":7740:7807   */\n      tag_377\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7733:7807   */\n      swap2\n      pop\n        /* \"#utility.yul\":7816:7909   */\n      tag_439\n        /* \"#utility.yul\":7905:7908   */\n      dup3\n        /* \"#utility.yul\":7816:7909   */\n      tag_440\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":7934:7936   */\n      0x20\n        /* \"#utility.yul\":7929:7932   */\n      dup3\n        /* \"#utility.yul\":7925:7937   */\n      add\n        /* \"#utility.yul\":7918:7937   */\n      swap1\n      pop\n        /* \"#utility.yul\":7577:7943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7949:8315   */\n    tag_441:\n        /* \"#utility.yul\":8091:8094   */\n      0x00\n        /* \"#utility.yul\":8112:8179   */\n      tag_443\n        /* \"#utility.yul\":8176:8178   */\n      0x17\n        /* \"#utility.yul\":8171:8174   */\n      dup4\n        /* \"#utility.yul\":8112:8179   */\n      tag_377\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8105:8179   */\n      swap2\n      pop\n        /* \"#utility.yul\":8188:8281   */\n      tag_444\n        /* \"#utility.yul\":8277:8280   */\n      dup3\n        /* \"#utility.yul\":8188:8281   */\n      tag_445\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8306:8308   */\n      0x20\n        /* \"#utility.yul\":8301:8304   */\n      dup3\n        /* \"#utility.yul\":8297:8309   */\n      add\n        /* \"#utility.yul\":8290:8309   */\n      swap1\n      pop\n        /* \"#utility.yul\":7949:8315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8321:8687   */\n    tag_446:\n        /* \"#utility.yul\":8463:8466   */\n      0x00\n        /* \"#utility.yul\":8484:8551   */\n      tag_448\n        /* \"#utility.yul\":8548:8550   */\n      0x0d\n        /* \"#utility.yul\":8543:8546   */\n      dup4\n        /* \"#utility.yul\":8484:8551   */\n      tag_377\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8477:8551   */\n      swap2\n      pop\n        /* \"#utility.yul\":8560:8653   */\n      tag_449\n        /* \"#utility.yul\":8649:8652   */\n      dup3\n        /* \"#utility.yul\":8560:8653   */\n      tag_450\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8678:8680   */\n      0x20\n        /* \"#utility.yul\":8673:8676   */\n      dup3\n        /* \"#utility.yul\":8669:8681   */\n      add\n        /* \"#utility.yul\":8662:8681   */\n      swap1\n      pop\n        /* \"#utility.yul\":8321:8687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8693:9059   */\n    tag_451:\n        /* \"#utility.yul\":8835:8838   */\n      0x00\n        /* \"#utility.yul\":8856:8923   */\n      tag_453\n        /* \"#utility.yul\":8920:8922   */\n      0x0d\n        /* \"#utility.yul\":8915:8918   */\n      dup4\n        /* \"#utility.yul\":8856:8923   */\n      tag_377\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8849:8923   */\n      swap2\n      pop\n        /* \"#utility.yul\":8932:9025   */\n      tag_454\n        /* \"#utility.yul\":9021:9024   */\n      dup3\n        /* \"#utility.yul\":8932:9025   */\n      tag_455\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9050:9052   */\n      0x20\n        /* \"#utility.yul\":9045:9048   */\n      dup3\n        /* \"#utility.yul\":9041:9053   */\n      add\n        /* \"#utility.yul\":9034:9053   */\n      swap1\n      pop\n        /* \"#utility.yul\":8693:9059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9065:9183   */\n    tag_456:\n        /* \"#utility.yul\":9152:9176   */\n      tag_458\n        /* \"#utility.yul\":9170:9175   */\n      dup2\n        /* \"#utility.yul\":9152:9176   */\n      tag_459\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9147:9150   */\n      dup3\n        /* \"#utility.yul\":9140:9177   */\n      mstore\n        /* \"#utility.yul\":9065:9183   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9189:9460   */\n    tag_304:\n        /* \"#utility.yul\":9319:9322   */\n      0x00\n        /* \"#utility.yul\":9341:9434   */\n      tag_461\n        /* \"#utility.yul\":9430:9433   */\n      dup3\n        /* \"#utility.yul\":9421:9427   */\n      dup5\n        /* \"#utility.yul\":9341:9434   */\n      tag_360\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9334:9434   */\n      swap2\n      pop\n        /* \"#utility.yul\":9451:9454   */\n      dup2\n        /* \"#utility.yul\":9444:9454   */\n      swap1\n      pop\n        /* \"#utility.yul\":9189:9460   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9466:9688   */\n    tag_65:\n        /* \"#utility.yul\":9559:9563   */\n      0x00\n        /* \"#utility.yul\":9597:9599   */\n      0x20\n        /* \"#utility.yul\":9586:9595   */\n      dup3\n        /* \"#utility.yul\":9582:9600   */\n      add\n        /* \"#utility.yul\":9574:9600   */\n      swap1\n      pop\n        /* \"#utility.yul\":9610:9681   */\n      tag_463\n        /* \"#utility.yul\":9678:9679   */\n      0x00\n        /* \"#utility.yul\":9667:9676   */\n      dup4\n        /* \"#utility.yul\":9663:9680   */\n      add\n        /* \"#utility.yul\":9654:9660   */\n      dup5\n        /* \"#utility.yul\":9610:9681   */\n      tag_356\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":9466:9688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9694:10136   */\n    tag_281:\n        /* \"#utility.yul\":9843:9847   */\n      0x00\n        /* \"#utility.yul\":9881:9883   */\n      0x60\n        /* \"#utility.yul\":9870:9879   */\n      dup3\n        /* \"#utility.yul\":9866:9884   */\n      add\n        /* \"#utility.yul\":9858:9884   */\n      swap1\n      pop\n        /* \"#utility.yul\":9894:9965   */\n      tag_465\n        /* \"#utility.yul\":9962:9963   */\n      0x00\n        /* \"#utility.yul\":9951:9960   */\n      dup4\n        /* \"#utility.yul\":9947:9964   */\n      add\n        /* \"#utility.yul\":9938:9944   */\n      dup7\n        /* \"#utility.yul\":9894:9965   */\n      tag_356\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9975:10047   */\n      tag_466\n        /* \"#utility.yul\":10043:10045   */\n      0x20\n        /* \"#utility.yul\":10032:10041   */\n      dup4\n        /* \"#utility.yul\":10028:10046   */\n      add\n        /* \"#utility.yul\":10019:10025   */\n      dup6\n        /* \"#utility.yul\":9975:10047   */\n      tag_356\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":10057:10129   */\n      tag_467\n        /* \"#utility.yul\":10125:10127   */\n      0x40\n        /* \"#utility.yul\":10114:10123   */\n      dup4\n        /* \"#utility.yul\":10110:10128   */\n      add\n        /* \"#utility.yul\":10101:10107   */\n      dup5\n        /* \"#utility.yul\":10057:10129   */\n      tag_456\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":9694:10136   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10142:10474   */\n    tag_130:\n        /* \"#utility.yul\":10263:10267   */\n      0x00\n        /* \"#utility.yul\":10301:10303   */\n      0x40\n        /* \"#utility.yul\":10290:10299   */\n      dup3\n        /* \"#utility.yul\":10286:10304   */\n      add\n        /* \"#utility.yul\":10278:10304   */\n      swap1\n      pop\n        /* \"#utility.yul\":10314:10385   */\n      tag_469\n        /* \"#utility.yul\":10382:10383   */\n      0x00\n        /* \"#utility.yul\":10371:10380   */\n      dup4\n        /* \"#utility.yul\":10367:10384   */\n      add\n        /* \"#utility.yul\":10358:10364   */\n      dup6\n        /* \"#utility.yul\":10314:10385   */\n      tag_356\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10395:10467   */\n      tag_470\n        /* \"#utility.yul\":10463:10465   */\n      0x20\n        /* \"#utility.yul\":10452:10461   */\n      dup4\n        /* \"#utility.yul\":10448:10466   */\n      add\n        /* \"#utility.yul\":10439:10445   */\n      dup5\n        /* \"#utility.yul\":10395:10467   */\n      tag_456\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":10142:10474   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10480:10730   */\n    tag_85:\n        /* \"#utility.yul\":10587:10591   */\n      0x00\n        /* \"#utility.yul\":10625:10627   */\n      0x20\n        /* \"#utility.yul\":10614:10623   */\n      dup3\n        /* \"#utility.yul\":10610:10628   */\n      add\n        /* \"#utility.yul\":10602:10628   */\n      swap1\n      pop\n        /* \"#utility.yul\":10638:10723   */\n      tag_472\n        /* \"#utility.yul\":10720:10721   */\n      0x00\n        /* \"#utility.yul\":10709:10718   */\n      dup4\n        /* \"#utility.yul\":10705:10722   */\n      add\n        /* \"#utility.yul\":10696:10702   */\n      dup5\n        /* \"#utility.yul\":10638:10723   */\n      tag_368\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10480:10730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10736:11049   */\n    tag_317:\n        /* \"#utility.yul\":10849:10853   */\n      0x00\n        /* \"#utility.yul\":10887:10889   */\n      0x20\n        /* \"#utility.yul\":10876:10885   */\n      dup3\n        /* \"#utility.yul\":10872:10890   */\n      add\n        /* \"#utility.yul\":10864:10890   */\n      swap1\n      pop\n        /* \"#utility.yul\":10936:10945   */\n      dup2\n        /* \"#utility.yul\":10930:10934   */\n      dup2\n        /* \"#utility.yul\":10926:10946   */\n      sub\n        /* \"#utility.yul\":10922:10923   */\n      0x00\n        /* \"#utility.yul\":10911:10920   */\n      dup4\n        /* \"#utility.yul\":10907:10924   */\n      add\n        /* \"#utility.yul\":10900:10947   */\n      mstore\n        /* \"#utility.yul\":10964:11042   */\n      tag_474\n        /* \"#utility.yul\":11037:11041   */\n      dup2\n        /* \"#utility.yul\":11028:11034   */\n      dup5\n        /* \"#utility.yul\":10964:11042   */\n      tag_372\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10956:11042   */\n      swap1\n      pop\n        /* \"#utility.yul\":10736:11049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11055:11474   */\n    tag_139:\n        /* \"#utility.yul\":11221:11225   */\n      0x00\n        /* \"#utility.yul\":11259:11261   */\n      0x20\n        /* \"#utility.yul\":11248:11257   */\n      dup3\n        /* \"#utility.yul\":11244:11262   */\n      add\n        /* \"#utility.yul\":11236:11262   */\n      swap1\n      pop\n        /* \"#utility.yul\":11308:11317   */\n      dup2\n        /* \"#utility.yul\":11302:11306   */\n      dup2\n        /* \"#utility.yul\":11298:11318   */\n      sub\n        /* \"#utility.yul\":11294:11295   */\n      0x00\n        /* \"#utility.yul\":11283:11292   */\n      dup4\n        /* \"#utility.yul\":11279:11296   */\n      add\n        /* \"#utility.yul\":11272:11319   */\n      mstore\n        /* \"#utility.yul\":11336:11467   */\n      tag_476\n        /* \"#utility.yul\":11462:11466   */\n      dup2\n        /* \"#utility.yul\":11336:11467   */\n      tag_381\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":11328:11467   */\n      swap1\n      pop\n        /* \"#utility.yul\":11055:11474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11480:11899   */\n    tag_235:\n        /* \"#utility.yul\":11646:11650   */\n      0x00\n        /* \"#utility.yul\":11684:11686   */\n      0x20\n        /* \"#utility.yul\":11673:11682   */\n      dup3\n        /* \"#utility.yul\":11669:11687   */\n      add\n        /* \"#utility.yul\":11661:11687   */\n      swap1\n      pop\n        /* \"#utility.yul\":11733:11742   */\n      dup2\n        /* \"#utility.yul\":11727:11731   */\n      dup2\n        /* \"#utility.yul\":11723:11743   */\n      sub\n        /* \"#utility.yul\":11719:11720   */\n      0x00\n        /* \"#utility.yul\":11708:11717   */\n      dup4\n        /* \"#utility.yul\":11704:11721   */\n      add\n        /* \"#utility.yul\":11697:11744   */\n      mstore\n        /* \"#utility.yul\":11761:11892   */\n      tag_478\n        /* \"#utility.yul\":11887:11891   */\n      dup2\n        /* \"#utility.yul\":11761:11892   */\n      tag_386\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":11753:11892   */\n      swap1\n      pop\n        /* \"#utility.yul\":11480:11899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11905:12324   */\n    tag_290:\n        /* \"#utility.yul\":12071:12075   */\n      0x00\n        /* \"#utility.yul\":12109:12111   */\n      0x20\n        /* \"#utility.yul\":12098:12107   */\n      dup3\n        /* \"#utility.yul\":12094:12112   */\n      add\n        /* \"#utility.yul\":12086:12112   */\n      swap1\n      pop\n        /* \"#utility.yul\":12158:12167   */\n      dup2\n        /* \"#utility.yul\":12152:12156   */\n      dup2\n        /* \"#utility.yul\":12148:12168   */\n      sub\n        /* \"#utility.yul\":12144:12145   */\n      0x00\n        /* \"#utility.yul\":12133:12142   */\n      dup4\n        /* \"#utility.yul\":12129:12146   */\n      add\n        /* \"#utility.yul\":12122:12169   */\n      mstore\n        /* \"#utility.yul\":12186:12317   */\n      tag_480\n        /* \"#utility.yul\":12312:12316   */\n      dup2\n        /* \"#utility.yul\":12186:12317   */\n      tag_391\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12178:12317   */\n      swap1\n      pop\n        /* \"#utility.yul\":11905:12324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12330:12749   */\n    tag_250:\n        /* \"#utility.yul\":12496:12500   */\n      0x00\n        /* \"#utility.yul\":12534:12536   */\n      0x20\n        /* \"#utility.yul\":12523:12532   */\n      dup3\n        /* \"#utility.yul\":12519:12537   */\n      add\n        /* \"#utility.yul\":12511:12537   */\n      swap1\n      pop\n        /* \"#utility.yul\":12583:12592   */\n      dup2\n        /* \"#utility.yul\":12577:12581   */\n      dup2\n        /* \"#utility.yul\":12573:12593   */\n      sub\n        /* \"#utility.yul\":12569:12570   */\n      0x00\n        /* \"#utility.yul\":12558:12567   */\n      dup4\n        /* \"#utility.yul\":12554:12571   */\n      add\n        /* \"#utility.yul\":12547:12594   */\n      mstore\n        /* \"#utility.yul\":12611:12742   */\n      tag_482\n        /* \"#utility.yul\":12737:12741   */\n      dup2\n        /* \"#utility.yul\":12611:12742   */\n      tag_396\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":12603:12742   */\n      swap1\n      pop\n        /* \"#utility.yul\":12330:12749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12755:13174   */\n    tag_93:\n        /* \"#utility.yul\":12921:12925   */\n      0x00\n        /* \"#utility.yul\":12959:12961   */\n      0x20\n        /* \"#utility.yul\":12948:12957   */\n      dup3\n        /* \"#utility.yul\":12944:12962   */\n      add\n        /* \"#utility.yul\":12936:12962   */\n      swap1\n      pop\n        /* \"#utility.yul\":13008:13017   */\n      dup2\n        /* \"#utility.yul\":13002:13006   */\n      dup2\n        /* \"#utility.yul\":12998:13018   */\n      sub\n        /* \"#utility.yul\":12994:12995   */\n      0x00\n        /* \"#utility.yul\":12983:12992   */\n      dup4\n        /* \"#utility.yul\":12979:12996   */\n      add\n        /* \"#utility.yul\":12972:13019   */\n      mstore\n        /* \"#utility.yul\":13036:13167   */\n      tag_484\n        /* \"#utility.yul\":13162:13166   */\n      dup2\n        /* \"#utility.yul\":13036:13167   */\n      tag_401\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":13028:13167   */\n      swap1\n      pop\n        /* \"#utility.yul\":12755:13174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13180:13599   */\n    tag_177:\n        /* \"#utility.yul\":13346:13350   */\n      0x00\n        /* \"#utility.yul\":13384:13386   */\n      0x20\n        /* \"#utility.yul\":13373:13382   */\n      dup3\n        /* \"#utility.yul\":13369:13387   */\n      add\n        /* \"#utility.yul\":13361:13387   */\n      swap1\n      pop\n        /* \"#utility.yul\":13433:13442   */\n      dup2\n        /* \"#utility.yul\":13427:13431   */\n      dup2\n        /* \"#utility.yul\":13423:13443   */\n      sub\n        /* \"#utility.yul\":13419:13420   */\n      0x00\n        /* \"#utility.yul\":13408:13417   */\n      dup4\n        /* \"#utility.yul\":13404:13421   */\n      add\n        /* \"#utility.yul\":13397:13444   */\n      mstore\n        /* \"#utility.yul\":13461:13592   */\n      tag_486\n        /* \"#utility.yul\":13587:13591   */\n      dup2\n        /* \"#utility.yul\":13461:13592   */\n      tag_406\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":13453:13592   */\n      swap1\n      pop\n        /* \"#utility.yul\":13180:13599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13605:14024   */\n    tag_297:\n        /* \"#utility.yul\":13771:13775   */\n      0x00\n        /* \"#utility.yul\":13809:13811   */\n      0x20\n        /* \"#utility.yul\":13798:13807   */\n      dup3\n        /* \"#utility.yul\":13794:13812   */\n      add\n        /* \"#utility.yul\":13786:13812   */\n      swap1\n      pop\n        /* \"#utility.yul\":13858:13867   */\n      dup2\n        /* \"#utility.yul\":13852:13856   */\n      dup2\n        /* \"#utility.yul\":13848:13868   */\n      sub\n        /* \"#utility.yul\":13844:13845   */\n      0x00\n        /* \"#utility.yul\":13833:13842   */\n      dup4\n        /* \"#utility.yul\":13829:13846   */\n      add\n        /* \"#utility.yul\":13822:13869   */\n      mstore\n        /* \"#utility.yul\":13886:14017   */\n      tag_488\n        /* \"#utility.yul\":14012:14016   */\n      dup2\n        /* \"#utility.yul\":13886:14017   */\n      tag_411\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13878:14017   */\n      swap1\n      pop\n        /* \"#utility.yul\":13605:14024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14030:14449   */\n    tag_90:\n        /* \"#utility.yul\":14196:14200   */\n      0x00\n        /* \"#utility.yul\":14234:14236   */\n      0x20\n        /* \"#utility.yul\":14223:14232   */\n      dup3\n        /* \"#utility.yul\":14219:14237   */\n      add\n        /* \"#utility.yul\":14211:14237   */\n      swap1\n      pop\n        /* \"#utility.yul\":14283:14292   */\n      dup2\n        /* \"#utility.yul\":14277:14281   */\n      dup2\n        /* \"#utility.yul\":14273:14293   */\n      sub\n        /* \"#utility.yul\":14269:14270   */\n      0x00\n        /* \"#utility.yul\":14258:14267   */\n      dup4\n        /* \"#utility.yul\":14254:14271   */\n      add\n        /* \"#utility.yul\":14247:14294   */\n      mstore\n        /* \"#utility.yul\":14311:14442   */\n      tag_490\n        /* \"#utility.yul\":14437:14441   */\n      dup2\n        /* \"#utility.yul\":14311:14442   */\n      tag_416\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":14303:14442   */\n      swap1\n      pop\n        /* \"#utility.yul\":14030:14449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14455:14874   */\n    tag_159:\n        /* \"#utility.yul\":14621:14625   */\n      0x00\n        /* \"#utility.yul\":14659:14661   */\n      0x20\n        /* \"#utility.yul\":14648:14657   */\n      dup3\n        /* \"#utility.yul\":14644:14662   */\n      add\n        /* \"#utility.yul\":14636:14662   */\n      swap1\n      pop\n        /* \"#utility.yul\":14708:14717   */\n      dup2\n        /* \"#utility.yul\":14702:14706   */\n      dup2\n        /* \"#utility.yul\":14698:14718   */\n      sub\n        /* \"#utility.yul\":14694:14695   */\n      0x00\n        /* \"#utility.yul\":14683:14692   */\n      dup4\n        /* \"#utility.yul\":14679:14696   */\n      add\n        /* \"#utility.yul\":14672:14719   */\n      mstore\n        /* \"#utility.yul\":14736:14867   */\n      tag_492\n        /* \"#utility.yul\":14862:14866   */\n      dup2\n        /* \"#utility.yul\":14736:14867   */\n      tag_421\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":14728:14867   */\n      swap1\n      pop\n        /* \"#utility.yul\":14455:14874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14880:15299   */\n    tag_221:\n        /* \"#utility.yul\":15046:15050   */\n      0x00\n        /* \"#utility.yul\":15084:15086   */\n      0x20\n        /* \"#utility.yul\":15073:15082   */\n      dup3\n        /* \"#utility.yul\":15069:15087   */\n      add\n        /* \"#utility.yul\":15061:15087   */\n      swap1\n      pop\n        /* \"#utility.yul\":15133:15142   */\n      dup2\n        /* \"#utility.yul\":15127:15131   */\n      dup2\n        /* \"#utility.yul\":15123:15143   */\n      sub\n        /* \"#utility.yul\":15119:15120   */\n      0x00\n        /* \"#utility.yul\":15108:15117   */\n      dup4\n        /* \"#utility.yul\":15104:15121   */\n      add\n        /* \"#utility.yul\":15097:15144   */\n      mstore\n        /* \"#utility.yul\":15161:15292   */\n      tag_494\n        /* \"#utility.yul\":15287:15291   */\n      dup2\n        /* \"#utility.yul\":15161:15292   */\n      tag_426\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":15153:15292   */\n      swap1\n      pop\n        /* \"#utility.yul\":14880:15299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15305:15724   */\n    tag_302:\n        /* \"#utility.yul\":15471:15475   */\n      0x00\n        /* \"#utility.yul\":15509:15511   */\n      0x20\n        /* \"#utility.yul\":15498:15507   */\n      dup3\n        /* \"#utility.yul\":15494:15512   */\n      add\n        /* \"#utility.yul\":15486:15512   */\n      swap1\n      pop\n        /* \"#utility.yul\":15558:15567   */\n      dup2\n        /* \"#utility.yul\":15552:15556   */\n      dup2\n        /* \"#utility.yul\":15548:15568   */\n      sub\n        /* \"#utility.yul\":15544:15545   */\n      0x00\n        /* \"#utility.yul\":15533:15542   */\n      dup4\n        /* \"#utility.yul\":15529:15546   */\n      add\n        /* \"#utility.yul\":15522:15569   */\n      mstore\n        /* \"#utility.yul\":15586:15717   */\n      tag_496\n        /* \"#utility.yul\":15712:15716   */\n      dup2\n        /* \"#utility.yul\":15586:15717   */\n      tag_431\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":15578:15717   */\n      swap1\n      pop\n        /* \"#utility.yul\":15305:15724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15730:16149   */\n    tag_211:\n        /* \"#utility.yul\":15896:15900   */\n      0x00\n        /* \"#utility.yul\":15934:15936   */\n      0x20\n        /* \"#utility.yul\":15923:15932   */\n      dup3\n        /* \"#utility.yul\":15919:15937   */\n      add\n        /* \"#utility.yul\":15911:15937   */\n      swap1\n      pop\n        /* \"#utility.yul\":15983:15992   */\n      dup2\n        /* \"#utility.yul\":15977:15981   */\n      dup2\n        /* \"#utility.yul\":15973:15993   */\n      sub\n        /* \"#utility.yul\":15969:15970   */\n      0x00\n        /* \"#utility.yul\":15958:15967   */\n      dup4\n        /* \"#utility.yul\":15954:15971   */\n      add\n        /* \"#utility.yul\":15947:15994   */\n      mstore\n        /* \"#utility.yul\":16011:16142   */\n      tag_498\n        /* \"#utility.yul\":16137:16141   */\n      dup2\n        /* \"#utility.yul\":16011:16142   */\n      tag_436\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":16003:16142   */\n      swap1\n      pop\n        /* \"#utility.yul\":15730:16149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16155:16574   */\n    tag_190:\n        /* \"#utility.yul\":16321:16325   */\n      0x00\n        /* \"#utility.yul\":16359:16361   */\n      0x20\n        /* \"#utility.yul\":16348:16357   */\n      dup3\n        /* \"#utility.yul\":16344:16362   */\n      add\n        /* \"#utility.yul\":16336:16362   */\n      swap1\n      pop\n        /* \"#utility.yul\":16408:16417   */\n      dup2\n        /* \"#utility.yul\":16402:16406   */\n      dup2\n        /* \"#utility.yul\":16398:16418   */\n      sub\n        /* \"#utility.yul\":16394:16395   */\n      0x00\n        /* \"#utility.yul\":16383:16392   */\n      dup4\n        /* \"#utility.yul\":16379:16396   */\n      add\n        /* \"#utility.yul\":16372:16419   */\n      mstore\n        /* \"#utility.yul\":16436:16567   */\n      tag_500\n        /* \"#utility.yul\":16562:16566   */\n      dup2\n        /* \"#utility.yul\":16436:16567   */\n      tag_441\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":16428:16567   */\n      swap1\n      pop\n        /* \"#utility.yul\":16155:16574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16580:16999   */\n    tag_163:\n        /* \"#utility.yul\":16746:16750   */\n      0x00\n        /* \"#utility.yul\":16784:16786   */\n      0x20\n        /* \"#utility.yul\":16773:16782   */\n      dup3\n        /* \"#utility.yul\":16769:16787   */\n      add\n        /* \"#utility.yul\":16761:16787   */\n      swap1\n      pop\n        /* \"#utility.yul\":16833:16842   */\n      dup2\n        /* \"#utility.yul\":16827:16831   */\n      dup2\n        /* \"#utility.yul\":16823:16843   */\n      sub\n        /* \"#utility.yul\":16819:16820   */\n      0x00\n        /* \"#utility.yul\":16808:16817   */\n      dup4\n        /* \"#utility.yul\":16804:16821   */\n      add\n        /* \"#utility.yul\":16797:16844   */\n      mstore\n        /* \"#utility.yul\":16861:16992   */\n      tag_502\n        /* \"#utility.yul\":16987:16991   */\n      dup2\n        /* \"#utility.yul\":16861:16992   */\n      tag_446\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":16853:16992   */\n      swap1\n      pop\n        /* \"#utility.yul\":16580:16999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17005:17424   */\n    tag_174:\n        /* \"#utility.yul\":17171:17175   */\n      0x00\n        /* \"#utility.yul\":17209:17211   */\n      0x20\n        /* \"#utility.yul\":17198:17207   */\n      dup3\n        /* \"#utility.yul\":17194:17212   */\n      add\n        /* \"#utility.yul\":17186:17212   */\n      swap1\n      pop\n        /* \"#utility.yul\":17258:17267   */\n      dup2\n        /* \"#utility.yul\":17252:17256   */\n      dup2\n        /* \"#utility.yul\":17248:17268   */\n      sub\n        /* \"#utility.yul\":17244:17245   */\n      0x00\n        /* \"#utility.yul\":17233:17242   */\n      dup4\n        /* \"#utility.yul\":17229:17246   */\n      add\n        /* \"#utility.yul\":17222:17269   */\n      mstore\n        /* \"#utility.yul\":17286:17417   */\n      tag_504\n        /* \"#utility.yul\":17412:17416   */\n      dup2\n        /* \"#utility.yul\":17286:17417   */\n      tag_451\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":17278:17417   */\n      swap1\n      pop\n        /* \"#utility.yul\":17005:17424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17430:17652   */\n    tag_28:\n        /* \"#utility.yul\":17523:17527   */\n      0x00\n        /* \"#utility.yul\":17561:17563   */\n      0x20\n        /* \"#utility.yul\":17550:17559   */\n      dup3\n        /* \"#utility.yul\":17546:17564   */\n      add\n        /* \"#utility.yul\":17538:17564   */\n      swap1\n      pop\n        /* \"#utility.yul\":17574:17645   */\n      tag_506\n        /* \"#utility.yul\":17642:17643   */\n      0x00\n        /* \"#utility.yul\":17631:17640   */\n      dup4\n        /* \"#utility.yul\":17627:17644   */\n      add\n        /* \"#utility.yul\":17618:17624   */\n      dup5\n        /* \"#utility.yul\":17574:17645   */\n      tag_456\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":17430:17652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17739:17837   */\n    tag_363:\n        /* \"#utility.yul\":17790:17796   */\n      0x00\n        /* \"#utility.yul\":17824:17829   */\n      dup2\n        /* \"#utility.yul\":17818:17830   */\n      mload\n        /* \"#utility.yul\":17808:17830   */\n      swap1\n      pop\n        /* \"#utility.yul\":17739:17837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17843:17942   */\n    tag_375:\n        /* \"#utility.yul\":17895:17901   */\n      0x00\n        /* \"#utility.yul\":17929:17934   */\n      dup2\n        /* \"#utility.yul\":17923:17935   */\n      mload\n        /* \"#utility.yul\":17913:17935   */\n      swap1\n      pop\n        /* \"#utility.yul\":17843:17942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17948:18095   */\n    tag_365:\n        /* \"#utility.yul\":18049:18060   */\n      0x00\n        /* \"#utility.yul\":18086:18089   */\n      dup2\n        /* \"#utility.yul\":18071:18089   */\n      swap1\n      pop\n        /* \"#utility.yul\":17948:18095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18101:18270   */\n    tag_377:\n        /* \"#utility.yul\":18185:18196   */\n      0x00\n        /* \"#utility.yul\":18219:18225   */\n      dup3\n        /* \"#utility.yul\":18214:18217   */\n      dup3\n        /* \"#utility.yul\":18207:18226   */\n      mstore\n        /* \"#utility.yul\":18259:18263   */\n      0x20\n        /* \"#utility.yul\":18254:18257   */\n      dup3\n        /* \"#utility.yul\":18250:18264   */\n      add\n        /* \"#utility.yul\":18235:18264   */\n      swap1\n      pop\n        /* \"#utility.yul\":18101:18270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18276:18581   */\n    tag_268:\n        /* \"#utility.yul\":18316:18319   */\n      0x00\n        /* \"#utility.yul\":18335:18355   */\n      tag_514\n        /* \"#utility.yul\":18353:18354   */\n      dup3\n        /* \"#utility.yul\":18335:18355   */\n      tag_459\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":18330:18355   */\n      swap2\n      pop\n        /* \"#utility.yul\":18369:18389   */\n      tag_515\n        /* \"#utility.yul\":18387:18388   */\n      dup4\n        /* \"#utility.yul\":18369:18389   */\n      tag_459\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":18364:18389   */\n      swap3\n      pop\n        /* \"#utility.yul\":18523:18524   */\n      dup3\n        /* \"#utility.yul\":18455:18521   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18451:18525   */\n      sub\n        /* \"#utility.yul\":18448:18449   */\n      dup3\n        /* \"#utility.yul\":18445:18526   */\n      gt\n        /* \"#utility.yul\":18442:18549   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":18529:18547   */\n      tag_517\n      tag_518\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":18442:18549   */\n    tag_516:\n        /* \"#utility.yul\":18573:18574   */\n      dup3\n        /* \"#utility.yul\":18570:18571   */\n      dup3\n        /* \"#utility.yul\":18566:18575   */\n      add\n        /* \"#utility.yul\":18559:18575   */\n      swap1\n      pop\n        /* \"#utility.yul\":18276:18581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18587:18772   */\n    tag_265:\n        /* \"#utility.yul\":18627:18628   */\n      0x00\n        /* \"#utility.yul\":18644:18664   */\n      tag_520\n        /* \"#utility.yul\":18662:18663   */\n      dup3\n        /* \"#utility.yul\":18644:18664   */\n      tag_459\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":18639:18664   */\n      swap2\n      pop\n        /* \"#utility.yul\":18678:18698   */\n      tag_521\n        /* \"#utility.yul\":18696:18697   */\n      dup4\n        /* \"#utility.yul\":18678:18698   */\n      tag_459\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":18673:18698   */\n      swap3\n      pop\n        /* \"#utility.yul\":18717:18718   */\n      dup3\n        /* \"#utility.yul\":18707:18742   */\n      tag_522\n      jumpi\n        /* \"#utility.yul\":18722:18740   */\n      tag_523\n      tag_524\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":18707:18742   */\n    tag_522:\n        /* \"#utility.yul\":18764:18765   */\n      dup3\n        /* \"#utility.yul\":18761:18762   */\n      dup3\n        /* \"#utility.yul\":18757:18766   */\n      div\n        /* \"#utility.yul\":18752:18766   */\n      swap1\n      pop\n        /* \"#utility.yul\":18587:18772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18778:19126   */\n    tag_271:\n        /* \"#utility.yul\":18818:18825   */\n      0x00\n        /* \"#utility.yul\":18841:18861   */\n      tag_526\n        /* \"#utility.yul\":18859:18860   */\n      dup3\n        /* \"#utility.yul\":18841:18861   */\n      tag_459\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":18836:18861   */\n      swap2\n      pop\n        /* \"#utility.yul\":18875:18895   */\n      tag_527\n        /* \"#utility.yul\":18893:18894   */\n      dup4\n        /* \"#utility.yul\":18875:18895   */\n      tag_459\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":18870:18895   */\n      swap3\n      pop\n        /* \"#utility.yul\":19063:19064   */\n      dup2\n        /* \"#utility.yul\":18995:19061   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18991:19065   */\n      div\n        /* \"#utility.yul\":18988:18989   */\n      dup4\n        /* \"#utility.yul\":18985:19066   */\n      gt\n        /* \"#utility.yul\":18980:18981   */\n      dup3\n        /* \"#utility.yul\":18973:18982   */\n      iszero\n        /* \"#utility.yul\":18966:18983   */\n      iszero\n        /* \"#utility.yul\":18962:19067   */\n      and\n        /* \"#utility.yul\":18959:19090   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":19070:19088   */\n      tag_529\n      tag_518\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":18959:19090   */\n    tag_528:\n        /* \"#utility.yul\":19118:19119   */\n      dup3\n        /* \"#utility.yul\":19115:19116   */\n      dup3\n        /* \"#utility.yul\":19111:19120   */\n      mul\n        /* \"#utility.yul\":19100:19120   */\n      swap1\n      pop\n        /* \"#utility.yul\":18778:19126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19132:19323   */\n    tag_262:\n        /* \"#utility.yul\":19172:19176   */\n      0x00\n        /* \"#utility.yul\":19192:19212   */\n      tag_531\n        /* \"#utility.yul\":19210:19211   */\n      dup3\n        /* \"#utility.yul\":19192:19212   */\n      tag_459\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":19187:19212   */\n      swap2\n      pop\n        /* \"#utility.yul\":19226:19246   */\n      tag_532\n        /* \"#utility.yul\":19244:19245   */\n      dup4\n        /* \"#utility.yul\":19226:19246   */\n      tag_459\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":19221:19246   */\n      swap3\n      pop\n        /* \"#utility.yul\":19265:19266   */\n      dup3\n        /* \"#utility.yul\":19262:19263   */\n      dup3\n        /* \"#utility.yul\":19259:19267   */\n      lt\n        /* \"#utility.yul\":19256:19290   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":19270:19288   */\n      tag_534\n      tag_518\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":19256:19290   */\n    tag_533:\n        /* \"#utility.yul\":19315:19316   */\n      dup3\n        /* \"#utility.yul\":19312:19313   */\n      dup3\n        /* \"#utility.yul\":19308:19317   */\n      sub\n        /* \"#utility.yul\":19300:19317   */\n      swap1\n      pop\n        /* \"#utility.yul\":19132:19323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19329:19425   */\n    tag_359:\n        /* \"#utility.yul\":19366:19373   */\n      0x00\n        /* \"#utility.yul\":19395:19419   */\n      tag_536\n        /* \"#utility.yul\":19413:19418   */\n      dup3\n        /* \"#utility.yul\":19395:19419   */\n      tag_537\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":19384:19419   */\n      swap1\n      pop\n        /* \"#utility.yul\":19329:19425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19431:19521   */\n    tag_538:\n        /* \"#utility.yul\":19465:19472   */\n      0x00\n        /* \"#utility.yul\":19508:19513   */\n      dup2\n        /* \"#utility.yul\":19501:19514   */\n      iszero\n        /* \"#utility.yul\":19494:19515   */\n      iszero\n        /* \"#utility.yul\":19483:19515   */\n      swap1\n      pop\n        /* \"#utility.yul\":19431:19521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19527:19653   */\n    tag_537:\n        /* \"#utility.yul\":19564:19571   */\n      0x00\n        /* \"#utility.yul\":19604:19646   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19597:19602   */\n      dup3\n        /* \"#utility.yul\":19593:19647   */\n      and\n        /* \"#utility.yul\":19582:19647   */\n      swap1\n      pop\n        /* \"#utility.yul\":19527:19653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19659:19736   */\n    tag_459:\n        /* \"#utility.yul\":19696:19703   */\n      0x00\n        /* \"#utility.yul\":19725:19730   */\n      dup2\n        /* \"#utility.yul\":19714:19730   */\n      swap1\n      pop\n        /* \"#utility.yul\":19659:19736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19742:19882   */\n    tag_371:\n        /* \"#utility.yul\":19806:19815   */\n      0x00\n        /* \"#utility.yul\":19839:19876   */\n      tag_543\n        /* \"#utility.yul\":19870:19875   */\n      dup3\n        /* \"#utility.yul\":19839:19876   */\n      tag_544\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":19826:19876   */\n      swap1\n      pop\n        /* \"#utility.yul\":19742:19882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19888:20014   */\n    tag_544:\n        /* \"#utility.yul\":19938:19947   */\n      0x00\n        /* \"#utility.yul\":19971:20008   */\n      tag_546\n        /* \"#utility.yul\":20002:20007   */\n      dup3\n        /* \"#utility.yul\":19971:20008   */\n      tag_547\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":19958:20008   */\n      swap1\n      pop\n        /* \"#utility.yul\":19888:20014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20020:20133   */\n    tag_547:\n        /* \"#utility.yul\":20070:20079   */\n      0x00\n        /* \"#utility.yul\":20103:20127   */\n      tag_549\n        /* \"#utility.yul\":20121:20126   */\n      dup3\n        /* \"#utility.yul\":20103:20127   */\n      tag_537\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":20090:20127   */\n      swap1\n      pop\n        /* \"#utility.yul\":20020:20133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20139:20446   */\n    tag_367:\n        /* \"#utility.yul\":20207:20208   */\n      0x00\n        /* \"#utility.yul\":20217:20330   */\n    tag_551:\n        /* \"#utility.yul\":20231:20237   */\n      dup4\n        /* \"#utility.yul\":20228:20229   */\n      dup2\n        /* \"#utility.yul\":20225:20238   */\n      lt\n        /* \"#utility.yul\":20217:20330   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":20316:20317   */\n      dup1\n        /* \"#utility.yul\":20311:20314   */\n      dup3\n        /* \"#utility.yul\":20307:20318   */\n      add\n        /* \"#utility.yul\":20301:20319   */\n      mload\n        /* \"#utility.yul\":20297:20298   */\n      dup2\n        /* \"#utility.yul\":20292:20295   */\n      dup5\n        /* \"#utility.yul\":20288:20299   */\n      add\n        /* \"#utility.yul\":20281:20320   */\n      mstore\n        /* \"#utility.yul\":20253:20255   */\n      0x20\n        /* \"#utility.yul\":20250:20251   */\n      dup2\n        /* \"#utility.yul\":20246:20256   */\n      add\n        /* \"#utility.yul\":20241:20256   */\n      swap1\n      pop\n        /* \"#utility.yul\":20217:20330   */\n      jump(tag_551)\n    tag_553:\n        /* \"#utility.yul\":20348:20354   */\n      dup4\n        /* \"#utility.yul\":20345:20346   */\n      dup2\n        /* \"#utility.yul\":20342:20355   */\n      gt\n        /* \"#utility.yul\":20339:20440   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":20428:20429   */\n      0x00\n        /* \"#utility.yul\":20419:20425   */\n      dup5\n        /* \"#utility.yul\":20414:20417   */\n      dup5\n        /* \"#utility.yul\":20410:20426   */\n      add\n        /* \"#utility.yul\":20403:20430   */\n      mstore\n        /* \"#utility.yul\":20339:20440   */\n    tag_554:\n        /* \"#utility.yul\":20188:20446   */\n      pop\n        /* \"#utility.yul\":20139:20446   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20452:20628   */\n    tag_118:\n        /* \"#utility.yul\":20484:20485   */\n      0x00\n        /* \"#utility.yul\":20501:20521   */\n      tag_556\n        /* \"#utility.yul\":20519:20520   */\n      dup3\n        /* \"#utility.yul\":20501:20521   */\n      tag_459\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":20496:20521   */\n      swap2\n      pop\n        /* \"#utility.yul\":20535:20555   */\n      tag_557\n        /* \"#utility.yul\":20553:20554   */\n      dup4\n        /* \"#utility.yul\":20535:20555   */\n      tag_459\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":20530:20555   */\n      swap3\n      pop\n        /* \"#utility.yul\":20574:20575   */\n      dup3\n        /* \"#utility.yul\":20564:20599   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":20579:20597   */\n      tag_559\n      tag_524\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":20564:20599   */\n    tag_558:\n        /* \"#utility.yul\":20620:20621   */\n      dup3\n        /* \"#utility.yul\":20617:20618   */\n      dup3\n        /* \"#utility.yul\":20613:20622   */\n      mod\n        /* \"#utility.yul\":20608:20622   */\n      swap1\n      pop\n        /* \"#utility.yul\":20452:20628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20634:20814   */\n    tag_518:\n        /* \"#utility.yul\":20682:20759   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20679:20680   */\n      0x00\n        /* \"#utility.yul\":20672:20760   */\n      mstore\n        /* \"#utility.yul\":20779:20783   */\n      0x11\n        /* \"#utility.yul\":20776:20777   */\n      0x04\n        /* \"#utility.yul\":20769:20784   */\n      mstore\n        /* \"#utility.yul\":20803:20807   */\n      0x24\n        /* \"#utility.yul\":20800:20801   */\n      0x00\n        /* \"#utility.yul\":20793:20808   */\n      revert\n        /* \"#utility.yul\":20820:21000   */\n    tag_524:\n        /* \"#utility.yul\":20868:20945   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20865:20866   */\n      0x00\n        /* \"#utility.yul\":20858:20946   */\n      mstore\n        /* \"#utility.yul\":20965:20969   */\n      0x12\n        /* \"#utility.yul\":20962:20963   */\n      0x04\n        /* \"#utility.yul\":20955:20970   */\n      mstore\n        /* \"#utility.yul\":20989:20993   */\n      0x24\n        /* \"#utility.yul\":20986:20987   */\n      0x00\n        /* \"#utility.yul\":20979:20994   */\n      revert\n        /* \"#utility.yul\":21129:21246   */\n    tag_337:\n        /* \"#utility.yul\":21238:21239   */\n      0x00\n        /* \"#utility.yul\":21235:21236   */\n      dup1\n        /* \"#utility.yul\":21228:21240   */\n      revert\n        /* \"#utility.yul\":21252:21354   */\n    tag_380:\n        /* \"#utility.yul\":21293:21299   */\n      0x00\n        /* \"#utility.yul\":21344:21346   */\n      0x1f\n        /* \"#utility.yul\":21340:21347   */\n      not\n        /* \"#utility.yul\":21335:21337   */\n      0x1f\n        /* \"#utility.yul\":21328:21333   */\n      dup4\n        /* \"#utility.yul\":21324:21338   */\n      add\n        /* \"#utility.yul\":21320:21348   */\n      and\n        /* \"#utility.yul\":21310:21348   */\n      swap1\n      pop\n        /* \"#utility.yul\":21252:21354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21360:21526   */\n    tag_385:\n        /* \"#utility.yul\":21500:21518   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":21496:21497   */\n      0x00\n        /* \"#utility.yul\":21488:21494   */\n      dup3\n        /* \"#utility.yul\":21484:21498   */\n      add\n        /* \"#utility.yul\":21477:21519   */\n      mstore\n        /* \"#utility.yul\":21360:21526   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21532:21703   */\n    tag_390:\n        /* \"#utility.yul\":21672:21695   */\n      0x4572726f723a20696e76616c6964207374616b65720000000000000000000000\n        /* \"#utility.yul\":21668:21669   */\n      0x00\n        /* \"#utility.yul\":21660:21666   */\n      dup3\n        /* \"#utility.yul\":21656:21670   */\n      add\n        /* \"#utility.yul\":21649:21696   */\n      mstore\n        /* \"#utility.yul\":21532:21703   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21709:21938   */\n    tag_395:\n        /* \"#utility.yul\":21849:21883   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":21845:21846   */\n      0x00\n        /* \"#utility.yul\":21837:21843   */\n      dup3\n        /* \"#utility.yul\":21833:21847   */\n      add\n        /* \"#utility.yul\":21826:21884   */\n      mstore\n        /* \"#utility.yul\":21918:21930   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21913:21915   */\n      0x20\n        /* \"#utility.yul\":21905:21911   */\n      dup3\n        /* \"#utility.yul\":21901:21916   */\n      add\n        /* \"#utility.yul\":21894:21931   */\n      mstore\n        /* \"#utility.yul\":21709:21938   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21944:22169   */\n    tag_400:\n        /* \"#utility.yul\":22084:22118   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":22080:22081   */\n      0x00\n        /* \"#utility.yul\":22072:22078   */\n      dup3\n        /* \"#utility.yul\":22068:22082   */\n      add\n        /* \"#utility.yul\":22061:22119   */\n      mstore\n        /* \"#utility.yul\":22153:22161   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22148:22150   */\n      0x20\n        /* \"#utility.yul\":22140:22146   */\n      dup3\n        /* \"#utility.yul\":22136:22151   */\n      add\n        /* \"#utility.yul\":22129:22162   */\n      mstore\n        /* \"#utility.yul\":21944:22169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22175:22339   */\n    tag_405:\n        /* \"#utility.yul\":22315:22331   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":22311:22312   */\n      0x00\n        /* \"#utility.yul\":22303:22309   */\n      dup3\n        /* \"#utility.yul\":22299:22313   */\n      add\n        /* \"#utility.yul\":22292:22332   */\n      mstore\n        /* \"#utility.yul\":22175:22339   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22345:22510   */\n    tag_410:\n        /* \"#utility.yul\":22485:22502   */\n      0x416c726561647920737461727465640000000000000000000000000000000000\n        /* \"#utility.yul\":22481:22482   */\n      0x00\n        /* \"#utility.yul\":22473:22479   */\n      dup3\n        /* \"#utility.yul\":22469:22483   */\n      add\n        /* \"#utility.yul\":22462:22503   */\n      mstore\n        /* \"#utility.yul\":22345:22510   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22516:22741   */\n    tag_415:\n        /* \"#utility.yul\":22656:22690   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":22652:22653   */\n      0x00\n        /* \"#utility.yul\":22644:22650   */\n      dup3\n        /* \"#utility.yul\":22640:22654   */\n      add\n        /* \"#utility.yul\":22633:22691   */\n      mstore\n        /* \"#utility.yul\":22725:22733   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22720:22722   */\n      0x20\n        /* \"#utility.yul\":22712:22718   */\n      dup3\n        /* \"#utility.yul\":22708:22723   */\n      add\n        /* \"#utility.yul\":22701:22734   */\n      mstore\n        /* \"#utility.yul\":22516:22741   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22747:22928   */\n    tag_420:\n        /* \"#utility.yul\":22887:22920   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":22883:22884   */\n      0x00\n        /* \"#utility.yul\":22875:22881   */\n      dup3\n        /* \"#utility.yul\":22871:22885   */\n      add\n        /* \"#utility.yul\":22864:22921   */\n      mstore\n        /* \"#utility.yul\":22747:22928   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22934:23116   */\n    tag_425:\n        /* \"#utility.yul\":23074:23108   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":23070:23071   */\n      0x00\n        /* \"#utility.yul\":23062:23068   */\n      dup3\n        /* \"#utility.yul\":23058:23072   */\n      add\n        /* \"#utility.yul\":23051:23109   */\n      mstore\n        /* \"#utility.yul\":22934:23116   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23122:23285   */\n    tag_430:\n        /* \"#utility.yul\":23262:23277   */\n      0x496e76616c69642076616c756500000000000000000000000000000000000000\n        /* \"#utility.yul\":23258:23259   */\n      0x00\n        /* \"#utility.yul\":23250:23256   */\n      dup3\n        /* \"#utility.yul\":23246:23260   */\n      add\n        /* \"#utility.yul\":23239:23278   */\n      mstore\n        /* \"#utility.yul\":23122:23285   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23291:23470   */\n    tag_435:\n        /* \"#utility.yul\":23431:23462   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":23427:23428   */\n      0x00\n        /* \"#utility.yul\":23419:23425   */\n      dup3\n        /* \"#utility.yul\":23415:23429   */\n      add\n        /* \"#utility.yul\":23408:23463   */\n      mstore\n        /* \"#utility.yul\":23291:23470   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23476:23652   */\n    tag_440:\n        /* \"#utility.yul\":23616:23644   */\n      0x496e76616c696420556e7374616b696e67204665652052617465000000000000\n        /* \"#utility.yul\":23612:23613   */\n      0x00\n        /* \"#utility.yul\":23604:23610   */\n      dup3\n        /* \"#utility.yul\":23600:23614   */\n      add\n        /* \"#utility.yul\":23593:23645   */\n      mstore\n        /* \"#utility.yul\":23476:23652   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23658:23831   */\n    tag_445:\n        /* \"#utility.yul\":23798:23823   */\n      0x496e76616c6964204c6f636b7570204475726174696f6e000000000000000000\n        /* \"#utility.yul\":23794:23795   */\n      0x00\n        /* \"#utility.yul\":23786:23792   */\n      dup3\n        /* \"#utility.yul\":23782:23796   */\n      add\n        /* \"#utility.yul\":23775:23824   */\n      mstore\n        /* \"#utility.yul\":23658:23831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23837:24000   */\n    tag_450:\n        /* \"#utility.yul\":23977:23992   */\n      0x43616e2774206265207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":23973:23974   */\n      0x00\n        /* \"#utility.yul\":23965:23971   */\n      dup3\n        /* \"#utility.yul\":23961:23975   */\n      add\n        /* \"#utility.yul\":23954:23993   */\n      mstore\n        /* \"#utility.yul\":23837:24000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24006:24169   */\n    tag_455:\n        /* \"#utility.yul\":24146:24161   */\n      0x496e73756666696369656e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":24142:24143   */\n      0x00\n        /* \"#utility.yul\":24134:24140   */\n      dup3\n        /* \"#utility.yul\":24130:24144   */\n      add\n        /* \"#utility.yul\":24123:24162   */\n      mstore\n        /* \"#utility.yul\":24006:24169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24175:24297   */\n    tag_322:\n        /* \"#utility.yul\":24248:24272   */\n      tag_582\n        /* \"#utility.yul\":24266:24271   */\n      dup2\n        /* \"#utility.yul\":24248:24272   */\n      tag_359\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":24241:24246   */\n      dup2\n        /* \"#utility.yul\":24238:24273   */\n      eq\n        /* \"#utility.yul\":24228:24291   */\n      tag_583\n      jumpi\n        /* \"#utility.yul\":24287:24288   */\n      0x00\n        /* \"#utility.yul\":24284:24285   */\n      dup1\n        /* \"#utility.yul\":24277:24289   */\n      revert\n        /* \"#utility.yul\":24228:24291   */\n    tag_583:\n        /* \"#utility.yul\":24175:24297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24303:24419   */\n    tag_326:\n        /* \"#utility.yul\":24373:24394   */\n      tag_585\n        /* \"#utility.yul\":24388:24393   */\n      dup2\n        /* \"#utility.yul\":24373:24394   */\n      tag_538\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":24366:24371   */\n      dup2\n        /* \"#utility.yul\":24363:24395   */\n      eq\n        /* \"#utility.yul\":24353:24413   */\n      tag_586\n      jumpi\n        /* \"#utility.yul\":24409:24410   */\n      0x00\n        /* \"#utility.yul\":24406:24407   */\n      dup1\n        /* \"#utility.yul\":24399:24411   */\n      revert\n        /* \"#utility.yul\":24353:24413   */\n    tag_586:\n        /* \"#utility.yul\":24303:24419   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24425:24547   */\n    tag_330:\n        /* \"#utility.yul\":24498:24522   */\n      tag_588\n        /* \"#utility.yul\":24516:24521   */\n      dup2\n        /* \"#utility.yul\":24498:24522   */\n      tag_459\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":24491:24496   */\n      dup2\n        /* \"#utility.yul\":24488:24523   */\n      eq\n        /* \"#utility.yul\":24478:24541   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":24537:24538   */\n      0x00\n        /* \"#utility.yul\":24534:24535   */\n      dup1\n        /* \"#utility.yul\":24527:24539   */\n      revert\n        /* \"#utility.yul\":24478:24541   */\n    tag_589:\n        /* \"#utility.yul\":24425:24547   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207cc1a47140e0c601e4e3fe7efb06eff72aa9049445a765de43f31b23d6c08b4c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@Init_1228": {
									"entryPoint": 379,
									"id": 1228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1033": {
									"entryPoint": null,
									"id": 1033,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1204": {
									"entryPoint": null,
									"id": 1204,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_1002": {
									"entryPoint": 175,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1113": {
									"entryPoint": 183,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:1",
														"type": ""
													}
												],
												"src": "513:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:1",
														"type": ""
													}
												],
												"src": "594:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:1",
														"type": ""
													}
												],
												"src": "696:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:1"
															},
															"nodeType": "YulIf",
															"src": "1127:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:1",
														"type": ""
													}
												],
												"src": "1074:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002abb38038062002abb8339818101604052810190620000379190620001c1565b620000576200004b620000af60201b60201c565b620000b760201b60201c565b620000676200017b60201b60201c565b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000246565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60c86003819055506105dc600181905550606460048190555062093a806002819055506276a700600581905550565b600081519050620001bb816200022c565b92915050565b600060208284031215620001da57620001d962000227565b5b6000620001ea84828501620001aa565b91505092915050565b6000620002008262000207565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200023781620001f3565b81146200024357600080fd5b50565b61286580620002566000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad5780639e447fc6116100715780639e447fc614610298578063a694fc3a146102b4578063f2fde38b146102d0578063f7b2a7be146102ec578063fc0c546a1461030a57610121565b8063715018a6146102185780637e1a378614610222578063817b1cd2146102405780638da5cb5b1461025e57806391e07e7a1461027c57610121565b80634b62b70b116100f45780634b62b70b146101885780634b77dd9e146101a45780635715ec11146101c05780635d2ec65d146101de578063692642e7146101fc57610121565b80630917e776146101265780632e1a7d4d14610144578063373d6132146101605780634641257d1461017e575b600080fd5b61012e610328565b60405161013b9190612259565b60405180910390f35b61015e60048036038101906101599190611c6c565b610332565b005b610168610701565b6040516101759190612259565b60405180910390f35b61018661074b565b005b6101a2600480360381019061019d9190611c6c565b610a14565b005b6101be60048036038101906101b99190611cc6565b610add565b005b6101c8610dd8565b6040516101d59190612259565b60405180910390f35b6101e6610de5565b6040516101f39190612259565b60405180910390f35b61021660048036038101906102119190611c6c565b610e2f565b005b610220610f44565b005b61022a610fcc565b6040516102379190612259565b60405180910390f35b610248610fd6565b6040516102559190612259565b60405180910390f35b610266610fdc565b6040516102739190611fc1565b60405180910390f35b61029660048036038101906102919190611c6c565b611005565b005b6102b260048036038101906102ad9190611c6c565b611105565b005b6102ce60048036038101906102c99190611c6c565b611205565b005b6102ea60048036038101906102e59190611c12565b6114ca565b005b6102f46115c2565b6040516103019190612259565b60405180910390f35b61031261160c565b60405161031f919061203c565b60405180910390f35b6000600854905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600082116103b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103af90612159565b60405180910390fd5b80600101548211156103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f6906120f9565b60405180910390fd5b610407611632565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104649190611fc1565b60206040518083038186803b15801561047c57600080fd5b505afa158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b49190611c99565b831061056a57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105159190611fc1565b60206040518083038186803b15801561052d57600080fd5b505afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105659190611c99565b61056c565b825b9050600061059c6201518061058e85600301544261170e90919063ffffffff16565b61172490919063ffffffff16565b9050600060649050600060018560020154146105d3576105cb600554866003015461173a90919063ffffffff16565b4210156105f1565b6000600254846105e3919061246c565b1480156105f05750600083115b5b9050806105fe5760015491505b61063761062861271061061a858861175090919063ffffffff16565b61172490919063ffffffff16565b8561170e90919063ffffffff16565b935061064e8460085461170e90919063ffffffff16565b60088190555061066b84866001015461170e90919063ffffffff16565b85600101819055506106c03385600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117669092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433856040516106f1929190612013565b60405180910390a1505050505050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b610753611632565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006107db6107c86127106107ba600454866000015461175090919063ffffffff16565b61172490919063ffffffff16565b836000015461170e90919063ffffffff16565b905060008111610820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081790612079565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161087b9190611fc1565b60206040518083038186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cb9190611c99565b81111561098057600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161092d9190611fc1565b60206040518083038186803b15801561094557600080fd5b505afa158015610959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097d9190611c99565b90505b6109cd3382600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117669092919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610a08929190612013565b60405180910390a15050565b610a1c6117ec565b73ffffffffffffffffffffffffffffffffffffffff16610a3a610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8790612179565b60405180910390fd5b60008111610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aca90612219565b60405180910390fd5b8060058190555050565b60008211610b20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1790612159565b60405180910390fd5b81600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b7c9190611fc1565b60206040518083038186803b158015610b9457600080fd5b505afa158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc9190611c99565b11610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0390612239565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8990612119565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610dd482611205565b5050565b6000600680549050905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610e376117ec565b73ffffffffffffffffffffffffffffffffffffffff16610e55610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea290612179565b60405180910390fd5b60008111610eee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee5906121f9565b60405180910390fd5b610f04620151808261175090919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610f399190612259565b60405180910390a150565b610f4c6117ec565b73ffffffffffffffffffffffffffffffffffffffff16610f6a610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614610fc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb790612179565b60405180910390fd5b610fca60006117f4565b565b6000600354905090565b60085481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61100d6117ec565b73ffffffffffffffffffffffffffffffffffffffff1661102b610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614611081576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107890612179565b60405180910390fd5b600081116110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bb906121d9565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516110fa9190612259565b60405180910390a150565b61110d6117ec565b73ffffffffffffffffffffffffffffffffffffffff1661112b610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614611181576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117890612179565b60405180910390fd5b600081116111c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bb90612199565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516111fa9190612259565b60405180910390a150565b60008111611248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123f90612159565b60405180910390fd5b80600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016112a49190611fc1565b60206040518083038186803b1580156112bc57600080fd5b505afa1580156112d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f49190611c99565b11611334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132b90612239565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154146113b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b090612099565b60405180910390fd5b6113c1611632565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611453333084600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118b8909392919063ffffffff16565b61146a82826001015461173a90919063ffffffff16565b81600101819055506114878260085461173a90919063ffffffff16565b6008819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33836040516114be929190612013565b60405180910390a15050565b6114d26117ec565b73ffffffffffffffffffffffffffffffffffffffff166114f0610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614611546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153d90612179565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ad906120d9565b60405180910390fd5b6115bf816117f4565b50565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006116e06127106116d26003546116c46116b16121c06116a389600401544361170e90919063ffffffff16565b61172490919063ffffffff16565b876001015461175090919063ffffffff16565b61175090919063ffffffff16565b61172490919063ffffffff16565b90506116f981836000015461173a90919063ffffffff16565b82600001819055504382600401819055505050565b6000818361171c9190612387565b905092915050565b6000818361173291906122fc565b905092915050565b6000818361174891906122a6565b905092915050565b6000818361175e919061232d565b905092915050565b6117e78363a9059cbb60e01b8484604051602401611785929190612013565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611941565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61193b846323b872dd60e01b8585856040516024016118d993929190611fdc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611941565b50505050565b60006119a3826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a089092919063ffffffff16565b9050600081511115611a0357808060200190518101906119c39190611c3f565b611a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f9906120b9565b60405180910390fd5b5b505050565b6060611a178484600085611a20565b90509392505050565b606082471015611a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5c90612139565b60405180910390fd5b611a6e85611b34565b611aad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa4906121b9565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611ad69190611faa565b60006040518083038185875af1925050503d8060008114611b13576040519150601f19603f3d011682016040523d82523d6000602084013e611b18565b606091505b5091509150611b28828286611b57565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611b6757829050611bb7565b600083511115611b7a5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bae9190612057565b60405180910390fd5b9392505050565b600081359050611bcd816127ea565b92915050565b600081519050611be281612801565b92915050565b600081359050611bf781612818565b92915050565b600081519050611c0c81612818565b92915050565b600060208284031215611c2857611c276124fb565b5b6000611c3684828501611bbe565b91505092915050565b600060208284031215611c5557611c546124fb565b5b6000611c6384828501611bd3565b91505092915050565b600060208284031215611c8257611c816124fb565b5b6000611c9084828501611be8565b91505092915050565b600060208284031215611caf57611cae6124fb565b5b6000611cbd84828501611bfd565b91505092915050565b60008060408385031215611cdd57611cdc6124fb565b5b6000611ceb85828601611be8565b9250506020611cfc85828601611be8565b9150509250929050565b611d0f816123bb565b82525050565b6000611d2082612274565b611d2a818561228a565b9350611d3a818560208601612439565b80840191505092915050565b611d4f81612403565b82525050565b6000611d608261227f565b611d6a8185612295565b9350611d7a818560208601612439565b611d8381612500565b840191505092915050565b6000611d9b601083612295565b9150611da682612511565b602082019050919050565b6000611dbe601583612295565b9150611dc98261253a565b602082019050919050565b6000611de1602a83612295565b9150611dec82612563565b604082019050919050565b6000611e04602683612295565b9150611e0f826125b2565b604082019050919050565b6000611e27600e83612295565b9150611e3282612601565b602082019050919050565b6000611e4a600f83612295565b9150611e558261262a565b602082019050919050565b6000611e6d602683612295565b9150611e7882612653565b604082019050919050565b6000611e90601f83612295565b9150611e9b826126a2565b602082019050919050565b6000611eb3602083612295565b9150611ebe826126cb565b602082019050919050565b6000611ed6600d83612295565b9150611ee1826126f4565b602082019050919050565b6000611ef9601d83612295565b9150611f048261271d565b602082019050919050565b6000611f1c601a83612295565b9150611f2782612746565b602082019050919050565b6000611f3f601783612295565b9150611f4a8261276f565b602082019050919050565b6000611f62600d83612295565b9150611f6d82612798565b602082019050919050565b6000611f85600d83612295565b9150611f90826127c1565b602082019050919050565b611fa4816123f9565b82525050565b6000611fb68284611d15565b915081905092915050565b6000602082019050611fd66000830184611d06565b92915050565b6000606082019050611ff16000830186611d06565b611ffe6020830185611d06565b61200b6040830184611f9b565b949350505050565b60006040820190506120286000830185611d06565b6120356020830184611f9b565b9392505050565b60006020820190506120516000830184611d46565b92915050565b600060208201905081810360008301526120718184611d55565b905092915050565b6000602082019050818103600083015261209281611d8e565b9050919050565b600060208201905081810360008301526120b281611db1565b9050919050565b600060208201905081810360008301526120d281611dd4565b9050919050565b600060208201905081810360008301526120f281611df7565b9050919050565b6000602082019050818103600083015261211281611e1a565b9050919050565b6000602082019050818103600083015261213281611e3d565b9050919050565b6000602082019050818103600083015261215281611e60565b9050919050565b6000602082019050818103600083015261217281611e83565b9050919050565b6000602082019050818103600083015261219281611ea6565b9050919050565b600060208201905081810360008301526121b281611ec9565b9050919050565b600060208201905081810360008301526121d281611eec565b9050919050565b600060208201905081810360008301526121f281611f0f565b9050919050565b6000602082019050818103600083015261221281611f32565b9050919050565b6000602082019050818103600083015261223281611f55565b9050919050565b6000602082019050818103600083015261225281611f78565b9050919050565b600060208201905061226e6000830184611f9b565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006122b1826123f9565b91506122bc836123f9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122f1576122f061249d565b5b828201905092915050565b6000612307826123f9565b9150612312836123f9565b925082612322576123216124cc565b5b828204905092915050565b6000612338826123f9565b9150612343836123f9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561237c5761237b61249d565b5b828202905092915050565b6000612392826123f9565b915061239d836123f9565b9250828210156123b0576123af61249d565b5b828203905092915050565b60006123c6826123d9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061240e82612415565b9050919050565b600061242082612427565b9050919050565b6000612432826123d9565b9050919050565b60005b8381101561245757808201518184015260208101905061243c565b83811115612466576000848401525b50505050565b6000612477826123f9565b9150612482836123f9565b925082612492576124916124cc565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b6127f3816123bb565b81146127fe57600080fd5b50565b61280a816123cd565b811461281557600080fd5b50565b612821816123f9565b811461282c57600080fd5b5056fea26469706673582212207cc1a47140e0c601e4e3fe7efb06eff72aa9049445a765de43f31b23d6c08b4c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2ABB CODESIZE SUB DUP1 PUSH3 0x2ABB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1C1 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH3 0x17B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x246 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC8 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5DC PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x76A700 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1BB DUP2 PUSH3 0x22C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x227 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1EA DUP5 DUP3 DUP6 ADD PUSH3 0x1AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x200 DUP3 PUSH3 0x207 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x237 DUP2 PUSH3 0x1F3 JUMP JUMPDEST DUP2 EQ PUSH3 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2865 DUP1 PUSH3 0x256 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9E447FC6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x30A JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x27C JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x4B62B70B GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x1FC JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x168 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH2 0x74B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0xE2F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0xF44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x1105 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x1205 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x14CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F4 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AF SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F6 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x407 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x490 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST DUP4 LT PUSH2 0x56A JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x59C PUSH3 0x15180 PUSH2 0x58E DUP6 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x5D3 JUMPI PUSH2 0x5CB PUSH1 0x5 SLOAD DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x173A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x246C JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x5F0 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x5FE JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x637 PUSH2 0x628 PUSH2 0x2710 PUSH2 0x61A DUP6 DUP9 PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x64E DUP5 PUSH1 0x8 SLOAD PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x66B DUP5 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x6C0 CALLER DUP6 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1766 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP3 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x753 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x7DB PUSH2 0x7C8 PUSH2 0x2710 PUSH2 0x7BA PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x817 SWAP1 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x980 JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92D SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x945 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x959 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x9CD CALLER DUP3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1766 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xA08 SWAP3 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xA1C PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA3A PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB17 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST GT PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC89 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDD4 DUP3 PUSH2 0x1205 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE37 PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE55 PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xEEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE5 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF04 PUSH3 0x15180 DUP3 PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xF39 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xF4C PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF6A PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB7 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFCA PUSH1 0x0 PUSH2 0x17F4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x100D PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x102B PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1081 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1078 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BB SWAP1 PUSH2 0x21D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x10FA SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x110D PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x112B PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1181 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1178 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123F SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST GT PUSH2 0x1334 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132B SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x13B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B0 SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13C1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1453 CALLER ADDRESS DUP5 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18B8 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x146A DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x173A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1487 DUP3 PUSH1 0x8 SLOAD PUSH2 0x173A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x14BE SWAP3 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x14D2 PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14F0 PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AD SWAP1 PUSH2 0x20D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15BF DUP2 PUSH2 0x17F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x16E0 PUSH2 0x2710 PUSH2 0x16D2 PUSH1 0x3 SLOAD PUSH2 0x16C4 PUSH2 0x16B1 PUSH2 0x21C0 PUSH2 0x16A3 DUP10 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x16F9 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x173A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x171C SWAP2 SWAP1 PUSH2 0x2387 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1732 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1748 SWAP2 SWAP1 PUSH2 0x22A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x175E SWAP2 SWAP1 PUSH2 0x232D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1785 SWAP3 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1941 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x193B DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18D9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1941 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A08 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1A03 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x19C3 SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0x1A02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F9 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A17 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1A20 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1A65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5C SWAP1 PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A6E DUP6 PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x1AAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA4 SWAP1 PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1AD6 SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B13 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B28 DUP3 DUP3 DUP7 PUSH2 0x1B57 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1B67 JUMPI DUP3 SWAP1 POP PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1B7A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAE SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BCD DUP2 PUSH2 0x27EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BE2 DUP2 PUSH2 0x2801 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF7 DUP2 PUSH2 0x2818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C0C DUP2 PUSH2 0x2818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C28 JUMPI PUSH2 0x1C27 PUSH2 0x24FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C36 DUP5 DUP3 DUP6 ADD PUSH2 0x1BBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C55 JUMPI PUSH2 0x1C54 PUSH2 0x24FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C63 DUP5 DUP3 DUP6 ADD PUSH2 0x1BD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C82 JUMPI PUSH2 0x1C81 PUSH2 0x24FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C90 DUP5 DUP3 DUP6 ADD PUSH2 0x1BE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CAF JUMPI PUSH2 0x1CAE PUSH2 0x24FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CBD DUP5 DUP3 DUP6 ADD PUSH2 0x1BFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CDD JUMPI PUSH2 0x1CDC PUSH2 0x24FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CEB DUP6 DUP3 DUP7 ADD PUSH2 0x1BE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CFC DUP6 DUP3 DUP7 ADD PUSH2 0x1BE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0F DUP2 PUSH2 0x23BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 DUP3 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x1D2A DUP2 DUP6 PUSH2 0x228A JUMP JUMPDEST SWAP4 POP PUSH2 0x1D3A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2439 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D4F DUP2 PUSH2 0x2403 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D60 DUP3 PUSH2 0x227F JUMP JUMPDEST PUSH2 0x1D6A DUP2 DUP6 PUSH2 0x2295 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D7A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x1D83 DUP2 PUSH2 0x2500 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9B PUSH1 0x10 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA6 DUP3 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBE PUSH1 0x15 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC9 DUP3 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE1 PUSH1 0x2A DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DEC DUP3 PUSH2 0x2563 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E04 PUSH1 0x26 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0F DUP3 PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E27 PUSH1 0xE DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E32 DUP3 PUSH2 0x2601 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4A PUSH1 0xF DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E55 DUP3 PUSH2 0x262A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6D PUSH1 0x26 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E78 DUP3 PUSH2 0x2653 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E90 PUSH1 0x1F DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9B DUP3 PUSH2 0x26A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB3 PUSH1 0x20 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBE DUP3 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED6 PUSH1 0xD DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE1 DUP3 PUSH2 0x26F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF9 PUSH1 0x1D DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F04 DUP3 PUSH2 0x271D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1C PUSH1 0x1A DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F27 DUP3 PUSH2 0x2746 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3F PUSH1 0x17 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4A DUP3 PUSH2 0x276F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F62 PUSH1 0xD DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F6D DUP3 PUSH2 0x2798 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F85 PUSH1 0xD DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F90 DUP3 PUSH2 0x27C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FA4 DUP2 PUSH2 0x23F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB6 DUP3 DUP5 PUSH2 0x1D15 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FF1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x1FFE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x200B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2028 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x2035 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2051 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2071 DUP2 DUP5 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2092 DUP2 PUSH2 0x1D8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20B2 DUP2 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D2 DUP2 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F2 DUP2 PUSH2 0x1DF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2112 DUP2 PUSH2 0x1E1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2132 DUP2 PUSH2 0x1E3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2152 DUP2 PUSH2 0x1E60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2172 DUP2 PUSH2 0x1E83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2192 DUP2 PUSH2 0x1EA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21B2 DUP2 PUSH2 0x1EC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D2 DUP2 PUSH2 0x1EEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F2 DUP2 PUSH2 0x1F0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2212 DUP2 PUSH2 0x1F32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2232 DUP2 PUSH2 0x1F55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2252 DUP2 PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x226E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B1 DUP3 PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x22BC DUP4 PUSH2 0x23F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x22F1 JUMPI PUSH2 0x22F0 PUSH2 0x249D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2307 DUP3 PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2312 DUP4 PUSH2 0x23F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2322 JUMPI PUSH2 0x2321 PUSH2 0x24CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2338 DUP3 PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2343 DUP4 PUSH2 0x23F9 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x237C JUMPI PUSH2 0x237B PUSH2 0x249D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2392 DUP3 PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x239D DUP4 PUSH2 0x23F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x23AF PUSH2 0x249D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C6 DUP3 PUSH2 0x23D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240E DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2420 DUP3 PUSH2 0x2427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2432 DUP3 PUSH2 0x23D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2457 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x243C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2466 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2477 DUP3 PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2482 DUP4 PUSH2 0x23F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2492 JUMPI PUSH2 0x2491 PUSH2 0x24CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x27F3 DUP2 PUSH2 0x23BB JUMP JUMPDEST DUP2 EQ PUSH2 0x27FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x280A DUP2 PUSH2 0x23CD JUMP JUMPDEST DUP2 EQ PUSH2 0x2815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2821 DUP2 PUSH2 0x23F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x282C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xC1A47140E0C601E4E3FE7EFB06EFF72AA9049445A765DE43F31B23D6C0 DUP12 0x4C PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "27335:6780:0:-:0;;;28536:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25763:32;25782:12;:10;;;:12;;:::i;:::-;25763:18;;;:32;;:::i;:::-;28583:6;:4;;;:6;;:::i;:::-;28614;28599:5;;:22;;;;;;;;;;;;;;;;;;28536:92;27335:6780;;24669:96;24722:7;24748:10;24741:17;;24669:96;:::o;27112:187::-;27185:16;27204:6;;;;;;;;;;;27185:25;;27229:8;27220:6;;:17;;;;;;;;;;;;;;;;;;27283:8;27252:40;;27273:8;27252:40;;;;;;;;;;;;27175:124;27112:187;:::o;28634:207::-;28692:3;28678:11;:17;;;;28736:4;28716:17;:24;;;;28767:3;28750:14;:20;;;;28795:6;28780:12;:21;;;;28827:7;28811:13;:23;;;;28634:207::o;7:143:1:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;27335:6780:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_915": {
									"entryPoint": 6465,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1002": {
									"entryPoint": 6124,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1113": {
									"entryPoint": 6132,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_567": {
									"entryPoint": 5946,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_612": {
									"entryPoint": 5924,
									"id": 612,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_257": {
									"entryPoint": 6688,
									"id": 257,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_187": {
									"entryPoint": 6664,
									"id": 187,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getNumberofStakers_1463": {
									"entryPoint": 3544,
									"id": 1463,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardRate_1823": {
									"entryPoint": 4044,
									"id": 1823,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalStaked_1454": {
									"entryPoint": 808,
									"id": 1454,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@harvest_1791": {
									"entryPoint": 1867,
									"id": 1791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_116": {
									"entryPoint": 6964,
									"id": 116,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_597": {
									"entryPoint": 5968,
									"id": 597,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_1042": {
									"entryPoint": 4060,
									"id": 1042,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1070": {
									"entryPoint": 3908,
									"id": 1070,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_1815": {
									"entryPoint": 5570,
									"id": 1815,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardToHarvest_1712": {
									"entryPoint": 3557,
									"id": 1712,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_758": {
									"entryPoint": 6328,
									"id": 758,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_732": {
									"entryPoint": 5990,
									"id": 732,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setEventPeriod_1658": {
									"entryPoint": 3631,
									"id": 1658,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockupTime_1700": {
									"entryPoint": 2580,
									"id": 1700,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_1632": {
									"entryPoint": 4357,
									"id": 1632,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnstakingFeeRate_1681": {
									"entryPoint": 4101,
									"id": 1681,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1446": {
									"entryPoint": 4613,
									"id": 1446,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_1803": {
									"entryPoint": 1793,
									"id": 1803,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@startStaking_1365": {
									"entryPoint": 2781,
									"id": 1365,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_582": {
									"entryPoint": 5902,
									"id": 582,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1159": {
									"entryPoint": 5644,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1156": {
									"entryPoint": 4054,
									"id": 1156,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1093": {
									"entryPoint": 5322,
									"id": 1093,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateReward_1292": {
									"entryPoint": 5682,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_392": {
									"entryPoint": 6999,
									"id": 392,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1609": {
									"entryPoint": 818,
									"id": 1609,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack": {
									"entryPoint": 7494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$100__to_t_address__fromStack_reversed": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$100_to_t_address": {
									"entryPoint": 9219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 9273,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"mod_t_uint256": {
									"entryPoint": 9324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9420,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 9489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684": {
									"entryPoint": 9530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 9571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 9729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6": {
									"entryPoint": 9770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 9811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 9890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 9931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6": {
									"entryPoint": 9972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 10013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3": {
									"entryPoint": 10054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561": {
									"entryPoint": 10095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2": {
									"entryPoint": 10136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811": {
									"entryPoint": 10177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:24550:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:1",
														"type": ""
													}
												],
												"src": "152:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:1",
														"type": ""
													}
												],
												"src": "295:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:1",
														"type": ""
													}
												],
												"src": "440:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:1"
															},
															"nodeType": "YulIf",
															"src": "665:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:1",
														"type": ""
													}
												],
												"src": "589:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:1"
															},
															"nodeType": "YulIf",
															"src": "1008:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:1",
														"type": ""
													}
												],
												"src": "924:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:1"
															},
															"nodeType": "YulIf",
															"src": "1351:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:1",
														"type": ""
													}
												],
												"src": "1275:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:1"
															},
															"nodeType": "YulIf",
															"src": "1697:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:1",
														"type": ""
													}
												],
												"src": "1610:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2050:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2096:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2098:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2098:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2098:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2071:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2067:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2063:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:32:1"
															},
															"nodeType": "YulIf",
															"src": "2060:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2189:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2204:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2208:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2233:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2268:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2279:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2264:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2264:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2288:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2243:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2233:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2316:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2331:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2335:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2361:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2396:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2407:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2371:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2361:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2012:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2023:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2035:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2043:6:1",
														"type": ""
													}
												],
												"src": "1967:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2512:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2529:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2552:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2534:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2522:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2500:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2507:3:1",
														"type": ""
													}
												],
												"src": "2447:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2679:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2689:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2735:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2703:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2693:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2750:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2838:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2757:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2750:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2880:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2887:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2894:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2854:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2854:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2915:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2926:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2931:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2915:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2660:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2667:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2675:3:1",
														"type": ""
													}
												],
												"src": "2571:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3046:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$100_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3051:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3051:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3017:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3024:3:1",
														"type": ""
													}
												],
												"src": "2950:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3207:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3217:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3264:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3231:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3221:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3279:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3345:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3350:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3286:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3279:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3392:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3388:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3388:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3406:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3411:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3366:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3366:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3427:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3438:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3465:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3443:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3434:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3427:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3188:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3195:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3203:3:1",
														"type": ""
													}
												],
												"src": "3115:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3631:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3641:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3707:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3712:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3648:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3641:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3813:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nodeType": "YulIdentifier",
																	"src": "3724:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3724:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3837:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3842:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3826:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3619:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3627:3:1",
														"type": ""
													}
												],
												"src": "3485:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4079:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4084:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4020:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4013:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4185:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																	"nodeType": "YulIdentifier",
																	"src": "4096:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4096:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4198:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4209:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4205:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3991:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3999:3:1",
														"type": ""
													}
												],
												"src": "3857:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4375:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4385:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4451:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4456:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4392:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4385:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4557:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "4468:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4468:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4468:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4570:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4586:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4577:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4363:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4371:3:1",
														"type": ""
													}
												],
												"src": "4229:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4747:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4757:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4823:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4828:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4764:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4757:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4929:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4840:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4840:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4942:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4953:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4949:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4735:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4743:3:1",
														"type": ""
													}
												],
												"src": "4601:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5119:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5129:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5195:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5136:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5129:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5301:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "5212:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5314:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5314:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5107:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5115:3:1",
														"type": ""
													}
												],
												"src": "4973:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5501:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5567:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5508:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5501:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5673:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																	"nodeType": "YulIdentifier",
																	"src": "5584:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5584:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5686:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5697:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5702:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5693:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5686:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5479:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5487:3:1",
														"type": ""
													}
												],
												"src": "5345:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5863:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5873:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5939:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5880:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5873:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6045:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "5956:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5956:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6069:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6074:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6065:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6058:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5859:3:1",
														"type": ""
													}
												],
												"src": "5717:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6235:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6245:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6252:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6245:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6417:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nodeType": "YulIdentifier",
																	"src": "6328:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6328:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6430:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6441:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6446:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6437:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6223:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6231:3:1",
														"type": ""
													}
												],
												"src": "6089:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6607:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6617:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6683:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6688:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6624:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6700:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6700:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6802:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6813:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6818:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6809:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6809:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6595:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6603:3:1",
														"type": ""
													}
												],
												"src": "6461:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6979:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6989:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7055:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6996:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6996:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6989:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7161:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																	"nodeType": "YulIdentifier",
																	"src": "7072:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7072:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7174:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7185:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7181:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6967:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6975:3:1",
														"type": ""
													}
												],
												"src": "6833:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7351:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7361:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7427:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7432:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7368:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7368:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7533:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "7444:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7444:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7546:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7557:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7553:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7546:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7339:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7347:3:1",
														"type": ""
													}
												],
												"src": "7205:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7723:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7733:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7799:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7740:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7740:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7905:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																	"nodeType": "YulIdentifier",
																	"src": "7816:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7816:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7816:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7918:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7925:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7918:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7711:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7719:3:1",
														"type": ""
													}
												],
												"src": "7577:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8095:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8105:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8112:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8112:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8105:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8277:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																	"nodeType": "YulIdentifier",
																	"src": "8188:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8188:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8301:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8306:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8290:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8083:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8091:3:1",
														"type": ""
													}
												],
												"src": "7949:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8467:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8477:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8543:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8548:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8484:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8484:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8649:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																	"nodeType": "YulIdentifier",
																	"src": "8560:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8560:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8662:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8673:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8678:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8669:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8662:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8455:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8463:3:1",
														"type": ""
													}
												],
												"src": "8321:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8839:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8849:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8915:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8920:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8856:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8856:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8849:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9021:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																	"nodeType": "YulIdentifier",
																	"src": "8932:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9034:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9045:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9050:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9041:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9034:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8827:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8835:3:1",
														"type": ""
													}
												],
												"src": "8693:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9130:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9147:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9170:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9152:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9152:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9140:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9140:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9140:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9118:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9125:3:1",
														"type": ""
													}
												],
												"src": "9065:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9323:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9334:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9421:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9430:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9341:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9334:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9444:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9451:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9444:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9302:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9308:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9319:3:1",
														"type": ""
													}
												],
												"src": "9189:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9564:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9574:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9586:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9597:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9582:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9582:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9574:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9654:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9667:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9678:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9663:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9610:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9610:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9610:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9536:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9548:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9559:4:1",
														"type": ""
													}
												],
												"src": "9466:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9848:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9858:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9870:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9881:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9866:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9866:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9858:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9938:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9951:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9962:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9947:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9947:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9894:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9894:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9894:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10019:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10032:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10043:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10028:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9975:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9975:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10101:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10114:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10125:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10110:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10057:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10057:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10057:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9804:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9816:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9824:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9832:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9843:4:1",
														"type": ""
													}
												],
												"src": "9694:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10268:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10278:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10290:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10301:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10286:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10286:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10278:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10358:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10371:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10382:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10367:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10314:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10314:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10314:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10439:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10452:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10463:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10448:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10448:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10395:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10395:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10395:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10232:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10244:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10252:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10263:4:1",
														"type": ""
													}
												],
												"src": "10142:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10592:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10602:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10614:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10625:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10610:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10610:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10602:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10696:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10720:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10705:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10638:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10638:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10638:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$100__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10564:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10576:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10587:4:1",
														"type": ""
													}
												],
												"src": "10480:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10854:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10864:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10876:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10887:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10872:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10864:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10911:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10922:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10907:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10930:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10936:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10926:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10926:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10900:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10900:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10956:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11028:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11037:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10964:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10964:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10956:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10838:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10849:4:1",
														"type": ""
													}
												],
												"src": "10736:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11226:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11236:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11248:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11259:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11244:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11244:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11236:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11283:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11294:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11279:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11302:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11308:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11298:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11272:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11272:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11328:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11462:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11336:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11336:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11328:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11206:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11221:4:1",
														"type": ""
													}
												],
												"src": "11055:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11651:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11673:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11708:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11719:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11704:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11727:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11733:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11723:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11697:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11697:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11753:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11887:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11761:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11761:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11753:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11631:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11646:4:1",
														"type": ""
													}
												],
												"src": "11480:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12076:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12086:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12098:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12109:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12094:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12094:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12086:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12133:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12144:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12129:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12152:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12158:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12148:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12122:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12122:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12178:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12312:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12186:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12186:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12178:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12056:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12071:4:1",
														"type": ""
													}
												],
												"src": "11905:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12501:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12511:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12523:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12534:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12519:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12511:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12558:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12569:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12554:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12554:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12577:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12583:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12573:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12547:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12547:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12547:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12603:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12737:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12611:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12611:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12603:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12481:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12496:4:1",
														"type": ""
													}
												],
												"src": "12330:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12926:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12936:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12948:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12959:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12944:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12944:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12936:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12983:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12994:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12979:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13002:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13008:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12998:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12972:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12972:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12972:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13028:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13162:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13036:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13036:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13028:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12906:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12921:4:1",
														"type": ""
													}
												],
												"src": "12755:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13351:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13361:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13373:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13369:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13369:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13361:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13408:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13419:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13404:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13427:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13433:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13423:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13423:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13397:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13397:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13453:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13587:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13461:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13461:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13453:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13331:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13346:4:1",
														"type": ""
													}
												],
												"src": "13180:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13776:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13786:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13798:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13809:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13794:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13794:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13786:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13833:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13844:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13829:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13852:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13858:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13848:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13848:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13822:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13822:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13878:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14012:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13886:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13886:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13878:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13756:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13771:4:1",
														"type": ""
													}
												],
												"src": "13605:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14201:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14211:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14223:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14234:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14219:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14219:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14211:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14258:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14269:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14254:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14277:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14283:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14273:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14273:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14247:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14247:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14303:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14437:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14311:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14311:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14303:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14181:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14196:4:1",
														"type": ""
													}
												],
												"src": "14030:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14626:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14636:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14648:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14659:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14644:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14644:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14636:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14694:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14679:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14702:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14708:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14698:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14672:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14672:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14672:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14728:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14862:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14736:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14736:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14728:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14606:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14621:4:1",
														"type": ""
													}
												],
												"src": "14455:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15051:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15061:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15073:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15084:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15069:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15069:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15061:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15108:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15119:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15104:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15104:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15127:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15133:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15123:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15097:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15097:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15097:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15153:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15287:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15161:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15161:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15153:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15031:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15046:4:1",
														"type": ""
													}
												],
												"src": "14880:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15476:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15486:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15498:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15509:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15494:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15494:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15486:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15533:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15544:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15529:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15552:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15558:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15548:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15522:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15522:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15578:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15712:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15586:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15586:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15578:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15456:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15471:4:1",
														"type": ""
													}
												],
												"src": "15305:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15901:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15911:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15923:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15934:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15919:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15919:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15911:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15958:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15969:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15954:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15954:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15977:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15983:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15973:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15973:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15947:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15947:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15947:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16003:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16137:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16011:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16011:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16003:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15881:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15896:4:1",
														"type": ""
													}
												],
												"src": "15730:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16326:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16336:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16348:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16359:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16344:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16344:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16336:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16383:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16394:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16379:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16379:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16402:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16408:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16398:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16372:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16372:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16372:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16428:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16562:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16436:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16436:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16428:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16306:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16321:4:1",
														"type": ""
													}
												],
												"src": "16155:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16751:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16761:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16773:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16784:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16769:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16761:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16808:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16819:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16804:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16827:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16833:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16823:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16797:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16797:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16797:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16853:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16987:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16861:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16861:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16853:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16731:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16746:4:1",
														"type": ""
													}
												],
												"src": "16580:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17176:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17186:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17198:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17209:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17194:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17186:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17233:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17244:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17229:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17229:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17252:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17258:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17248:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17222:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17222:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17222:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17278:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17412:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17286:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17286:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17278:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17156:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17171:4:1",
														"type": ""
													}
												],
												"src": "17005:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17528:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17538:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17550:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17561:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17546:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17538:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17618:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17631:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17642:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17627:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17574:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17574:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17574:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17500:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17512:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17523:4:1",
														"type": ""
													}
												],
												"src": "17430:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17698:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17708:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17724:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17718:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17718:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "17708:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17691:6:1",
														"type": ""
													}
												],
												"src": "17658:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17797:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17808:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17824:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17818:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17818:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17808:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17780:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17790:6:1",
														"type": ""
													}
												],
												"src": "17739:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17902:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17913:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17929:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17923:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17923:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17913:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17885:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17895:6:1",
														"type": ""
													}
												],
												"src": "17843:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18061:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18071:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18086:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18071:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18033:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18038:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18049:11:1",
														"type": ""
													}
												],
												"src": "17948:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18197:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18214:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18219:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18207:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18207:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18235:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18254:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18259:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18250:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18250:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18235:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18169:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18174:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18185:11:1",
														"type": ""
													}
												],
												"src": "18101:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18320:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18330:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18353:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18335:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18335:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18330:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18364:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18387:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18369:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18369:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18364:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18527:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18529:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18529:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18529:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18448:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18455:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18523:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18451:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18451:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18445:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18445:81:1"
															},
															"nodeType": "YulIf",
															"src": "18442:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18559:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18570:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18573:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18566:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18566:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "18559:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18307:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18310:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "18316:3:1",
														"type": ""
													}
												],
												"src": "18276:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18629:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18639:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18662:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18644:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18644:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18639:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18673:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18696:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18678:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18678:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18673:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18720:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "18722:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18722:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18722:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18717:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18710:9:1"
															},
															"nodeType": "YulIf",
															"src": "18707:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18752:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18761:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18764:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18757:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18757:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "18752:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18618:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18621:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "18627:1:1",
														"type": ""
													}
												],
												"src": "18587:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18826:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18836:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18859:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18841:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18841:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18836:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18870:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18893:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18875:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18875:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18870:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19068:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19070:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19070:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19070:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18980:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18973:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18973:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18966:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18966:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18988:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18995:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19063:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "18991:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18991:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18985:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18985:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18962:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18962:105:1"
															},
															"nodeType": "YulIf",
															"src": "18959:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19100:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19115:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19118:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19111:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19111:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "19100:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18809:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18812:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "18818:7:1",
														"type": ""
													}
												],
												"src": "18778:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19177:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19187:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19210:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19192:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19192:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19187:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19221:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19244:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19226:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19226:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19221:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19268:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19270:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19270:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19270:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19262:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19265:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19259:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19259:8:1"
															},
															"nodeType": "YulIf",
															"src": "19256:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19300:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19312:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19315:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19308:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19308:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19300:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19163:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19166:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19172:4:1",
														"type": ""
													}
												],
												"src": "19132:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19374:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19384:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19413:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19395:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19395:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19384:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19356:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19366:7:1",
														"type": ""
													}
												],
												"src": "19329:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19473:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19483:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19508:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19501:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19501:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19494:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19494:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19483:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19455:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19465:7:1",
														"type": ""
													}
												],
												"src": "19431:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19572:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19582:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19597:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19604:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19593:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19582:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19554:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19564:7:1",
														"type": ""
													}
												],
												"src": "19527:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19704:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19714:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19725:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19714:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19686:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19696:7:1",
														"type": ""
													}
												],
												"src": "19659:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19816:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19826:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19870:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "19839:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19839:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19826:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$100_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19796:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19806:9:1",
														"type": ""
													}
												],
												"src": "19742:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19948:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19958:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20002:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19971:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19971:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19958:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19928:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19938:9:1",
														"type": ""
													}
												],
												"src": "19888:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20080:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20090:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20121:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20103:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20103:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20090:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20060:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20070:9:1",
														"type": ""
													}
												],
												"src": "20020:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20188:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20198:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20207:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "20202:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20267:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "20292:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "20297:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20288:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20288:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "20311:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "20316:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "20307:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20307:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20301:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20301:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20281:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20281:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20281:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20228:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20231:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20225:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20225:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "20239:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20241:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "20250:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20253:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20246:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20246:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "20241:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "20221:3:1",
																"statements": []
															},
															"src": "20217:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20364:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "20414:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "20419:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20410:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20410:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20428:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20403:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20403:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20403:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20345:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20348:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20342:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20342:13:1"
															},
															"nodeType": "YulIf",
															"src": "20339:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20170:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "20175:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20180:6:1",
														"type": ""
													}
												],
												"src": "20139:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20486:142:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20496:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20519:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20501:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20501:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20496:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20530:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20553:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20535:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20535:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20530:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20577:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "20579:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20579:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20579:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20574:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20567:9:1"
															},
															"nodeType": "YulIf",
															"src": "20564:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20608:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20617:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20620:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "20613:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20613:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20608:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20475:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20478:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "20484:1:1",
														"type": ""
													}
												],
												"src": "20452:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20662:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20679:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20682:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20672:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20672:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20672:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20776:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20779:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20769:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20769:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20769:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20800:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20803:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20793:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20793:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20634:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20848:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20865:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20868:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20858:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20858:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20858:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20962:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20965:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20955:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20955:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20986:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20989:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20979:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20979:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20979:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "20820:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21095:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21112:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21115:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21105:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21105:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21105:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "21006:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21218:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21235:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21238:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21228:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21228:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "21129:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21300:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21310:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21328:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21335:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21324:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21344:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "21340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21340:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21320:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21320:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "21310:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21283:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "21293:6:1",
														"type": ""
													}
												],
												"src": "21252:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21466:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21488:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21496:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21484:14:1"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21500:18:1",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21477:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21477:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21477:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21458:6:1",
														"type": ""
													}
												],
												"src": "21360:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21638:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21660:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21668:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21656:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21656:14:1"
																	},
																	{
																		"hexValue": "4572726f723a20696e76616c6964207374616b6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21672:23:1",
																		"type": "",
																		"value": "Error: invalid staker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21649:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21649:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21649:47:1"
														}
													]
												},
												"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21630:6:1",
														"type": ""
													}
												],
												"src": "21532:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21815:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21837:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21845:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21833:14:1"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21849:34:1",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21826:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21826:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21905:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21913:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21901:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21901:15:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21918:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21894:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21894:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21894:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21807:6:1",
														"type": ""
													}
												],
												"src": "21709:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22050:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22072:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22080:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22068:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22068:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22084:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22061:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22061:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22061:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22140:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22148:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22136:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22136:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22153:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22129:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22129:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22129:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22042:6:1",
														"type": ""
													}
												],
												"src": "21944:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22281:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22303:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22311:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22299:14:1"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22315:16:1",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22292:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22292:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22273:6:1",
														"type": ""
													}
												],
												"src": "22175:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22451:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22473:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22481:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22469:14:1"
																	},
																	{
																		"hexValue": "416c72656164792073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22485:17:1",
																		"type": "",
																		"value": "Already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22462:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22462:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22443:6:1",
														"type": ""
													}
												],
												"src": "22345:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22622:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22644:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22652:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22640:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22640:14:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22656:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22633:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22633:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22633:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22712:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22720:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22708:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22708:15:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22725:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22701:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22701:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22701:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22614:6:1",
														"type": ""
													}
												],
												"src": "22516:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22853:75:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22875:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22883:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22871:14:1"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22887:33:1",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22864:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22864:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22864:57:1"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22845:6:1",
														"type": ""
													}
												],
												"src": "22747:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23040:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23062:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23070:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23058:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23058:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23074:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23051:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23051:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23051:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23032:6:1",
														"type": ""
													}
												],
												"src": "22934:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23228:57:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23250:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23258:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23246:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23246:14:1"
																	},
																	{
																		"hexValue": "496e76616c69642076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23262:15:1",
																		"type": "",
																		"value": "Invalid value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23239:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23239:39:1"
														}
													]
												},
												"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23220:6:1",
														"type": ""
													}
												],
												"src": "23122:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23397:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23419:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23427:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23415:14:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23431:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23408:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23408:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23389:6:1",
														"type": ""
													}
												],
												"src": "23291:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23582:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23604:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23612:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23600:14:1"
																	},
																	{
																		"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23616:28:1",
																		"type": "",
																		"value": "Invalid Unstaking Fee Rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23593:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23593:52:1"
														}
													]
												},
												"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23574:6:1",
														"type": ""
													}
												],
												"src": "23476:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23764:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23786:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23794:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23782:14:1"
																	},
																	{
																		"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23798:25:1",
																		"type": "",
																		"value": "Invalid Lockup Duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23775:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23775:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23756:6:1",
														"type": ""
													}
												],
												"src": "23658:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23943:57:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23965:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23973:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23961:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23961:14:1"
																	},
																	{
																		"hexValue": "43616e2774206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23977:15:1",
																		"type": "",
																		"value": "Can't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23954:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23954:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23954:39:1"
														}
													]
												},
												"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23935:6:1",
														"type": ""
													}
												],
												"src": "23837:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24112:57:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24134:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24142:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24130:14:1"
																	},
																	{
																		"hexValue": "496e73756666696369656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24146:15:1",
																		"type": "",
																		"value": "Insufficient!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24123:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24123:39:1"
														}
													]
												},
												"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24104:6:1",
														"type": ""
													}
												],
												"src": "24006:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24218:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24275:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24284:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24287:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24277:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24277:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24277:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24241:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24266:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "24248:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24248:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24238:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24238:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24231:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24231:43:1"
															},
															"nodeType": "YulIf",
															"src": "24228:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24211:5:1",
														"type": ""
													}
												],
												"src": "24175:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24343:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24397:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24406:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24409:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24399:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24399:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24399:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24366:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24388:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "24373:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24373:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24363:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24363:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24356:40:1"
															},
															"nodeType": "YulIf",
															"src": "24353:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24336:5:1",
														"type": ""
													}
												],
												"src": "24303:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24468:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24525:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24534:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24537:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24527:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24527:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24527:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24491:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24516:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "24498:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24498:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24488:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24488:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24481:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24481:43:1"
															},
															"nodeType": "YulIf",
															"src": "24478:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24461:5:1",
														"type": ""
													}
												],
												"src": "24425:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$100_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$100__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$100_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IBEP20_$100_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: invalid staker\")\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already started\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid value\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Unstaking Fee Rate\")\n\n    }\n\n    function store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Lockup Duration\")\n\n    }\n\n    function store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't be zero\")\n\n    }\n\n    function store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad5780639e447fc6116100715780639e447fc614610298578063a694fc3a146102b4578063f2fde38b146102d0578063f7b2a7be146102ec578063fc0c546a1461030a57610121565b8063715018a6146102185780637e1a378614610222578063817b1cd2146102405780638da5cb5b1461025e57806391e07e7a1461027c57610121565b80634b62b70b116100f45780634b62b70b146101885780634b77dd9e146101a45780635715ec11146101c05780635d2ec65d146101de578063692642e7146101fc57610121565b80630917e776146101265780632e1a7d4d14610144578063373d6132146101605780634641257d1461017e575b600080fd5b61012e610328565b60405161013b9190612259565b60405180910390f35b61015e60048036038101906101599190611c6c565b610332565b005b610168610701565b6040516101759190612259565b60405180910390f35b61018661074b565b005b6101a2600480360381019061019d9190611c6c565b610a14565b005b6101be60048036038101906101b99190611cc6565b610add565b005b6101c8610dd8565b6040516101d59190612259565b60405180910390f35b6101e6610de5565b6040516101f39190612259565b60405180910390f35b61021660048036038101906102119190611c6c565b610e2f565b005b610220610f44565b005b61022a610fcc565b6040516102379190612259565b60405180910390f35b610248610fd6565b6040516102559190612259565b60405180910390f35b610266610fdc565b6040516102739190611fc1565b60405180910390f35b61029660048036038101906102919190611c6c565b611005565b005b6102b260048036038101906102ad9190611c6c565b611105565b005b6102ce60048036038101906102c99190611c6c565b611205565b005b6102ea60048036038101906102e59190611c12565b6114ca565b005b6102f46115c2565b6040516103019190612259565b60405180910390f35b61031261160c565b60405161031f919061203c565b60405180910390f35b6000600854905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600082116103b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103af90612159565b60405180910390fd5b80600101548211156103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f6906120f9565b60405180910390fd5b610407611632565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104649190611fc1565b60206040518083038186803b15801561047c57600080fd5b505afa158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b49190611c99565b831061056a57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105159190611fc1565b60206040518083038186803b15801561052d57600080fd5b505afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105659190611c99565b61056c565b825b9050600061059c6201518061058e85600301544261170e90919063ffffffff16565b61172490919063ffffffff16565b9050600060649050600060018560020154146105d3576105cb600554866003015461173a90919063ffffffff16565b4210156105f1565b6000600254846105e3919061246c565b1480156105f05750600083115b5b9050806105fe5760015491505b61063761062861271061061a858861175090919063ffffffff16565b61172490919063ffffffff16565b8561170e90919063ffffffff16565b935061064e8460085461170e90919063ffffffff16565b60088190555061066b84866001015461170e90919063ffffffff16565b85600101819055506106c03385600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117669092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433856040516106f1929190612013565b60405180910390a1505050505050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b610753611632565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006107db6107c86127106107ba600454866000015461175090919063ffffffff16565b61172490919063ffffffff16565b836000015461170e90919063ffffffff16565b905060008111610820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081790612079565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161087b9190611fc1565b60206040518083038186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cb9190611c99565b81111561098057600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161092d9190611fc1565b60206040518083038186803b15801561094557600080fd5b505afa158015610959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097d9190611c99565b90505b6109cd3382600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117669092919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610a08929190612013565b60405180910390a15050565b610a1c6117ec565b73ffffffffffffffffffffffffffffffffffffffff16610a3a610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8790612179565b60405180910390fd5b60008111610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aca90612219565b60405180910390fd5b8060058190555050565b60008211610b20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1790612159565b60405180910390fd5b81600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b7c9190611fc1565b60206040518083038186803b158015610b9457600080fd5b505afa158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc9190611c99565b11610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0390612239565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8990612119565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610dd482611205565b5050565b6000600680549050905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610e376117ec565b73ffffffffffffffffffffffffffffffffffffffff16610e55610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea290612179565b60405180910390fd5b60008111610eee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee5906121f9565b60405180910390fd5b610f04620151808261175090919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610f399190612259565b60405180910390a150565b610f4c6117ec565b73ffffffffffffffffffffffffffffffffffffffff16610f6a610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614610fc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb790612179565b60405180910390fd5b610fca60006117f4565b565b6000600354905090565b60085481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61100d6117ec565b73ffffffffffffffffffffffffffffffffffffffff1661102b610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614611081576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107890612179565b60405180910390fd5b600081116110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bb906121d9565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516110fa9190612259565b60405180910390a150565b61110d6117ec565b73ffffffffffffffffffffffffffffffffffffffff1661112b610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614611181576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117890612179565b60405180910390fd5b600081116111c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bb90612199565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516111fa9190612259565b60405180910390a150565b60008111611248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123f90612159565b60405180910390fd5b80600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016112a49190611fc1565b60206040518083038186803b1580156112bc57600080fd5b505afa1580156112d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f49190611c99565b11611334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132b90612239565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154146113b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b090612099565b60405180910390fd5b6113c1611632565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611453333084600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118b8909392919063ffffffff16565b61146a82826001015461173a90919063ffffffff16565b81600101819055506114878260085461173a90919063ffffffff16565b6008819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33836040516114be929190612013565b60405180910390a15050565b6114d26117ec565b73ffffffffffffffffffffffffffffffffffffffff166114f0610fdc565b73ffffffffffffffffffffffffffffffffffffffff1614611546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153d90612179565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ad906120d9565b60405180910390fd5b6115bf816117f4565b50565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006116e06127106116d26003546116c46116b16121c06116a389600401544361170e90919063ffffffff16565b61172490919063ffffffff16565b876001015461175090919063ffffffff16565b61175090919063ffffffff16565b61172490919063ffffffff16565b90506116f981836000015461173a90919063ffffffff16565b82600001819055504382600401819055505050565b6000818361171c9190612387565b905092915050565b6000818361173291906122fc565b905092915050565b6000818361174891906122a6565b905092915050565b6000818361175e919061232d565b905092915050565b6117e78363a9059cbb60e01b8484604051602401611785929190612013565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611941565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61193b846323b872dd60e01b8585856040516024016118d993929190611fdc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611941565b50505050565b60006119a3826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a089092919063ffffffff16565b9050600081511115611a0357808060200190518101906119c39190611c3f565b611a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f9906120b9565b60405180910390fd5b5b505050565b6060611a178484600085611a20565b90509392505050565b606082471015611a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5c90612139565b60405180910390fd5b611a6e85611b34565b611aad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa4906121b9565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611ad69190611faa565b60006040518083038185875af1925050503d8060008114611b13576040519150601f19603f3d011682016040523d82523d6000602084013e611b18565b606091505b5091509150611b28828286611b57565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611b6757829050611bb7565b600083511115611b7a5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bae9190612057565b60405180910390fd5b9392505050565b600081359050611bcd816127ea565b92915050565b600081519050611be281612801565b92915050565b600081359050611bf781612818565b92915050565b600081519050611c0c81612818565b92915050565b600060208284031215611c2857611c276124fb565b5b6000611c3684828501611bbe565b91505092915050565b600060208284031215611c5557611c546124fb565b5b6000611c6384828501611bd3565b91505092915050565b600060208284031215611c8257611c816124fb565b5b6000611c9084828501611be8565b91505092915050565b600060208284031215611caf57611cae6124fb565b5b6000611cbd84828501611bfd565b91505092915050565b60008060408385031215611cdd57611cdc6124fb565b5b6000611ceb85828601611be8565b9250506020611cfc85828601611be8565b9150509250929050565b611d0f816123bb565b82525050565b6000611d2082612274565b611d2a818561228a565b9350611d3a818560208601612439565b80840191505092915050565b611d4f81612403565b82525050565b6000611d608261227f565b611d6a8185612295565b9350611d7a818560208601612439565b611d8381612500565b840191505092915050565b6000611d9b601083612295565b9150611da682612511565b602082019050919050565b6000611dbe601583612295565b9150611dc98261253a565b602082019050919050565b6000611de1602a83612295565b9150611dec82612563565b604082019050919050565b6000611e04602683612295565b9150611e0f826125b2565b604082019050919050565b6000611e27600e83612295565b9150611e3282612601565b602082019050919050565b6000611e4a600f83612295565b9150611e558261262a565b602082019050919050565b6000611e6d602683612295565b9150611e7882612653565b604082019050919050565b6000611e90601f83612295565b9150611e9b826126a2565b602082019050919050565b6000611eb3602083612295565b9150611ebe826126cb565b602082019050919050565b6000611ed6600d83612295565b9150611ee1826126f4565b602082019050919050565b6000611ef9601d83612295565b9150611f048261271d565b602082019050919050565b6000611f1c601a83612295565b9150611f2782612746565b602082019050919050565b6000611f3f601783612295565b9150611f4a8261276f565b602082019050919050565b6000611f62600d83612295565b9150611f6d82612798565b602082019050919050565b6000611f85600d83612295565b9150611f90826127c1565b602082019050919050565b611fa4816123f9565b82525050565b6000611fb68284611d15565b915081905092915050565b6000602082019050611fd66000830184611d06565b92915050565b6000606082019050611ff16000830186611d06565b611ffe6020830185611d06565b61200b6040830184611f9b565b949350505050565b60006040820190506120286000830185611d06565b6120356020830184611f9b565b9392505050565b60006020820190506120516000830184611d46565b92915050565b600060208201905081810360008301526120718184611d55565b905092915050565b6000602082019050818103600083015261209281611d8e565b9050919050565b600060208201905081810360008301526120b281611db1565b9050919050565b600060208201905081810360008301526120d281611dd4565b9050919050565b600060208201905081810360008301526120f281611df7565b9050919050565b6000602082019050818103600083015261211281611e1a565b9050919050565b6000602082019050818103600083015261213281611e3d565b9050919050565b6000602082019050818103600083015261215281611e60565b9050919050565b6000602082019050818103600083015261217281611e83565b9050919050565b6000602082019050818103600083015261219281611ea6565b9050919050565b600060208201905081810360008301526121b281611ec9565b9050919050565b600060208201905081810360008301526121d281611eec565b9050919050565b600060208201905081810360008301526121f281611f0f565b9050919050565b6000602082019050818103600083015261221281611f32565b9050919050565b6000602082019050818103600083015261223281611f55565b9050919050565b6000602082019050818103600083015261225281611f78565b9050919050565b600060208201905061226e6000830184611f9b565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006122b1826123f9565b91506122bc836123f9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122f1576122f061249d565b5b828201905092915050565b6000612307826123f9565b9150612312836123f9565b925082612322576123216124cc565b5b828204905092915050565b6000612338826123f9565b9150612343836123f9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561237c5761237b61249d565b5b828202905092915050565b6000612392826123f9565b915061239d836123f9565b9250828210156123b0576123af61249d565b5b828203905092915050565b60006123c6826123d9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061240e82612415565b9050919050565b600061242082612427565b9050919050565b6000612432826123d9565b9050919050565b60005b8381101561245757808201518184015260208101905061243c565b83811115612466576000848401525b50505050565b6000612477826123f9565b9150612482836123f9565b925082612492576124916124cc565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b6127f3816123bb565b81146127fe57600080fd5b50565b61280a816123cd565b811461281557600080fd5b50565b612821816123f9565b811461282c57600080fd5b5056fea26469706673582212207cc1a47140e0c601e4e3fe7efb06eff72aa9049445a765de43f31b23d6c08b4c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9E447FC6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x30A JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x27C JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x4B62B70B GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x1FC JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x168 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH2 0x74B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0xE2F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0xF44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x1105 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x1205 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x14CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F4 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AF SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F6 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x407 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x490 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST DUP4 LT PUSH2 0x56A JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x59C PUSH3 0x15180 PUSH2 0x58E DUP6 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x5D3 JUMPI PUSH2 0x5CB PUSH1 0x5 SLOAD DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x173A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x246C JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x5F0 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x5FE JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x637 PUSH2 0x628 PUSH2 0x2710 PUSH2 0x61A DUP6 DUP9 PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x64E DUP5 PUSH1 0x8 SLOAD PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x66B DUP5 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x6C0 CALLER DUP6 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1766 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP3 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x753 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x7DB PUSH2 0x7C8 PUSH2 0x2710 PUSH2 0x7BA PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x817 SWAP1 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x980 JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92D SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x945 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x959 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x9CD CALLER DUP3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1766 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xA08 SWAP3 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xA1C PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA3A PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB17 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST GT PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC89 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDD4 DUP3 PUSH2 0x1205 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE37 PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE55 PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xEEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE5 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF04 PUSH3 0x15180 DUP3 PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xF39 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xF4C PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF6A PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB7 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFCA PUSH1 0x0 PUSH2 0x17F4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x100D PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x102B PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1081 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1078 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BB SWAP1 PUSH2 0x21D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x10FA SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x110D PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x112B PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1181 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1178 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123F SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST GT PUSH2 0x1334 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132B SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x13B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B0 SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13C1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1453 CALLER ADDRESS DUP5 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18B8 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x146A DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x173A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1487 DUP3 PUSH1 0x8 SLOAD PUSH2 0x173A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x14BE SWAP3 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x14D2 PUSH2 0x17EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14F0 PUSH2 0xFDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AD SWAP1 PUSH2 0x20D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15BF DUP2 PUSH2 0x17F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x16E0 PUSH2 0x2710 PUSH2 0x16D2 PUSH1 0x3 SLOAD PUSH2 0x16C4 PUSH2 0x16B1 PUSH2 0x21C0 PUSH2 0x16A3 DUP10 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x170E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1750 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x16F9 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x173A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x171C SWAP2 SWAP1 PUSH2 0x2387 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1732 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1748 SWAP2 SWAP1 PUSH2 0x22A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x175E SWAP2 SWAP1 PUSH2 0x232D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1785 SWAP3 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1941 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x193B DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18D9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1941 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A08 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1A03 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x19C3 SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0x1A02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F9 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A17 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1A20 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1A65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5C SWAP1 PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A6E DUP6 PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x1AAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA4 SWAP1 PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1AD6 SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B13 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B28 DUP3 DUP3 DUP7 PUSH2 0x1B57 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1B67 JUMPI DUP3 SWAP1 POP PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1B7A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAE SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BCD DUP2 PUSH2 0x27EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BE2 DUP2 PUSH2 0x2801 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF7 DUP2 PUSH2 0x2818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C0C DUP2 PUSH2 0x2818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C28 JUMPI PUSH2 0x1C27 PUSH2 0x24FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C36 DUP5 DUP3 DUP6 ADD PUSH2 0x1BBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C55 JUMPI PUSH2 0x1C54 PUSH2 0x24FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C63 DUP5 DUP3 DUP6 ADD PUSH2 0x1BD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C82 JUMPI PUSH2 0x1C81 PUSH2 0x24FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C90 DUP5 DUP3 DUP6 ADD PUSH2 0x1BE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CAF JUMPI PUSH2 0x1CAE PUSH2 0x24FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CBD DUP5 DUP3 DUP6 ADD PUSH2 0x1BFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CDD JUMPI PUSH2 0x1CDC PUSH2 0x24FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CEB DUP6 DUP3 DUP7 ADD PUSH2 0x1BE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CFC DUP6 DUP3 DUP7 ADD PUSH2 0x1BE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0F DUP2 PUSH2 0x23BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 DUP3 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x1D2A DUP2 DUP6 PUSH2 0x228A JUMP JUMPDEST SWAP4 POP PUSH2 0x1D3A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2439 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D4F DUP2 PUSH2 0x2403 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D60 DUP3 PUSH2 0x227F JUMP JUMPDEST PUSH2 0x1D6A DUP2 DUP6 PUSH2 0x2295 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D7A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x1D83 DUP2 PUSH2 0x2500 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9B PUSH1 0x10 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA6 DUP3 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBE PUSH1 0x15 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC9 DUP3 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE1 PUSH1 0x2A DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DEC DUP3 PUSH2 0x2563 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E04 PUSH1 0x26 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0F DUP3 PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E27 PUSH1 0xE DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E32 DUP3 PUSH2 0x2601 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4A PUSH1 0xF DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E55 DUP3 PUSH2 0x262A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6D PUSH1 0x26 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E78 DUP3 PUSH2 0x2653 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E90 PUSH1 0x1F DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9B DUP3 PUSH2 0x26A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB3 PUSH1 0x20 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBE DUP3 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED6 PUSH1 0xD DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE1 DUP3 PUSH2 0x26F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF9 PUSH1 0x1D DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F04 DUP3 PUSH2 0x271D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1C PUSH1 0x1A DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F27 DUP3 PUSH2 0x2746 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3F PUSH1 0x17 DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4A DUP3 PUSH2 0x276F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F62 PUSH1 0xD DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F6D DUP3 PUSH2 0x2798 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F85 PUSH1 0xD DUP4 PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F90 DUP3 PUSH2 0x27C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FA4 DUP2 PUSH2 0x23F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB6 DUP3 DUP5 PUSH2 0x1D15 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FF1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x1FFE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x200B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2028 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x2035 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2051 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2071 DUP2 DUP5 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2092 DUP2 PUSH2 0x1D8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20B2 DUP2 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D2 DUP2 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F2 DUP2 PUSH2 0x1DF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2112 DUP2 PUSH2 0x1E1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2132 DUP2 PUSH2 0x1E3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2152 DUP2 PUSH2 0x1E60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2172 DUP2 PUSH2 0x1E83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2192 DUP2 PUSH2 0x1EA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21B2 DUP2 PUSH2 0x1EC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D2 DUP2 PUSH2 0x1EEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F2 DUP2 PUSH2 0x1F0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2212 DUP2 PUSH2 0x1F32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2232 DUP2 PUSH2 0x1F55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2252 DUP2 PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x226E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B1 DUP3 PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x22BC DUP4 PUSH2 0x23F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x22F1 JUMPI PUSH2 0x22F0 PUSH2 0x249D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2307 DUP3 PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2312 DUP4 PUSH2 0x23F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2322 JUMPI PUSH2 0x2321 PUSH2 0x24CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2338 DUP3 PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2343 DUP4 PUSH2 0x23F9 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x237C JUMPI PUSH2 0x237B PUSH2 0x249D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2392 DUP3 PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x239D DUP4 PUSH2 0x23F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x23AF PUSH2 0x249D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C6 DUP3 PUSH2 0x23D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240E DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2420 DUP3 PUSH2 0x2427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2432 DUP3 PUSH2 0x23D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2457 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x243C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2466 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2477 DUP3 PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2482 DUP4 PUSH2 0x23F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2492 JUMPI PUSH2 0x2491 PUSH2 0x24CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x27F3 DUP2 PUSH2 0x23BB JUMP JUMPDEST DUP2 EQ PUSH2 0x27FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x280A DUP2 PUSH2 0x23CD JUMP JUMPDEST DUP2 EQ PUSH2 0x2815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2821 DUP2 PUSH2 0x23F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x282C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xC1A47140E0C601E4E3FE7EFB06EFF72AA9049445A765DE43F31B23D6C0 DUP12 0x4C PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "27335:6780:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30586:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30828:1153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33771:119;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33147:571;;;:::i;:::-;;32737:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29432:496;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30684:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32954:155;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32217:241;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26510:101;;;:::i;:::-;;34023:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28087:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25878:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32464:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31991:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29993:587;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26760:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33900:117;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28119:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30586:92;30633:7;30660:11;;30653:18;;30586:92;:::o;30828:1153::-;30889:21;30913:7;:19;30921:10;30913:19;;;;;;;;;;;;;;;30889:43;;30960:1;30951:6;:10;30943:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;31025:6;:19;;;31015:6;:29;;31007:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;31074:14;:12;:14::i;:::-;31098:27;31137:5;;;;;;;;;;;:15;;;31161:4;31137:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31128:6;:39;:81;;31179:5;;;;;;;;;;;:15;;;31203:4;31179:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31128:81;;;31170:6;31128:81;31098:111;;31219:14;31236:54;31283:6;31236:42;31256:6;:21;;;31236:15;:19;;:42;;;;:::i;:::-;:46;;:54;;;;:::i;:::-;31219:71;;31300:11;31314:3;31300:17;;31327:21;31366:1;31351:6;:11;;;:16;:133;;31444:40;31470:13;;31444:6;:21;;;:25;;:40;;;;:::i;:::-;31425:15;:59;;31351:133;;;31395:1;31379:12;;31370:6;:21;;;;:::i;:::-;:26;:40;;;;;31409:1;31400:6;:10;31370:40;31351:133;31327:157;;31499:16;31494:71;;31537:17;;31531:23;;31494:71;31596:62;31620:37;31653:3;31620:28;31644:3;31620:19;:23;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;31596:19;:23;;:62;;;;:::i;:::-;31574:84;;31682:36;31698:19;31682:11;;:15;;:36;;;;:::i;:::-;31668:11;:50;;;;31750:44;31774:19;31750:6;:19;;;:23;;:44;;;;:::i;:::-;31728:6;:19;;:66;;;;31804:51;31823:10;31835:19;31804:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;31871:41;31880:10;31892:19;31871:41;;;;;;;:::i;:::-;;;;;;;;30870:1111;;;;;30828:1153;:::o;33771:119::-;33816:7;33851;:19;33859:10;33851:19;;;;;;;;;;;;;;;:32;;;33844:39;;33771:119;:::o;33147:571::-;33191:14;:12;:14::i;:::-;33215:21;33239:7;:19;33247:10;33239:19;;;;;;;;;;;;;;;33215:43;;33268:21;33292:89;33323:57;33374:5;33323:46;33354:14;;33323:6;:26;;;:30;;:46;;;;:::i;:::-;:50;;:57;;;;:::i;:::-;33292:6;:26;;;:30;;:89;;;;:::i;:::-;33268:113;;33424:1;33408:13;:17;33400:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;33476:5;;;;;;;;;;;:15;;;33500:4;33476:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33460:13;:46;33456:110;;;33536:5;;;;;;;;;;;:15;;;33560:4;33536:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33520:46;;33456:110;33576:45;33595:10;33607:13;33576:5;;;;;;;;;;;:18;;;;:45;;;;;:::i;:::-;33660:1;33631:6;:26;;:30;;;;33677:34;33685:10;33697:13;33677:34;;;;;;;:::i;:::-;;;;;;;;33172:546;;33147:571::o;32737:157::-;26101:12;:10;:12::i;:::-;26090:23;;:7;:5;:7::i;:::-;:23;;;26082:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;32831:1:::1;32818:10;:14;32810:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;32877:10;32861:13;:26;;;;32737:157:::0;:::o;29432:496::-;29532:1;29522:7;:11;29514:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;29617:7;29587:5;;;;;;;;;;;:15;;;29603:10;29587:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;29579:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;29690:4;29660:7;:19;29668:10;29660:19;;;;;;;;;;;;;;;:26;;;:34;;29652:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;29752:5;29725:7;:19;29733:10;29725:19;;;;;;;;;;;;;;;:24;;:32;;;;29804:15;29767:7;:19;29775:10;29767:19;;;;;;;;;;;;;;;:34;;:52;;;;29858:4;29829:7;:19;29837:10;29829:19;;;;;;;;;;;;;;;:26;;:33;;;;29872:8;29886:10;29872:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29907:14;29913:7;29907:5;:14::i;:::-;29432:496;;:::o;30684:100::-;30735:7;30762:8;:15;;;;30755:22;;30684:100;:::o;32954:155::-;33002:7;33063;:19;33071:10;33063:19;;;;;;;;;;;;;;;:39;;;33056:46;;32954:155;:::o;32217:241::-;26101:12;:10;:12::i;:::-;26090:23;;:7;:5;:7::i;:::-;:23;;;26082:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;32326:1:::1;32310:13;:17;32302:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;32381:25;32399:6;32381:13;:17;;:25;;;;:::i;:::-;32366:12;:40;;;;32422:29;32437:13;32422:29;;;;;;:::i;:::-;;;;;;;;32217:241:::0;:::o;26510:101::-;26101:12;:10;:12::i;:::-;26090:23;;:7;:5;:7::i;:::-;:23;;;26082:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;26574:30:::1;26601:1;26574:18;:30::i;:::-;26510:101::o:0;34023:90::-;34069:7;34095:11;;34088:18;;34023:90;:::o;28087:26::-;;;;:::o;25878:85::-;25924:7;25950:6;;;;;;;;;;;25943:13;;25878:85;:::o;32464:267::-;26101:12;:10;:12::i;:::-;26090:23;;:7;:5;:7::i;:::-;:23;;;26082:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;32588:1:::1;32567:18;:22;32559:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;32651:18;32631:17;:38;;;;32685:39;32705:18;32685:39;;;;;;:::i;:::-;;;;;;;;32464:267:::0;:::o;31991:220::-;26101:12;:10;:12::i;:::-;26090:23;;:7;:5;:7::i;:::-;:23;;;26082:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;32097:1:::1;32082:12;:16;32074:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;32149:12;32135:11;:26;;;;32177:27;32191:12;32177:27;;;;;;:::i;:::-;;;;;;;;31991:220:::0;:::o;29993:587::-;30068:1;30058:7;:11;30050:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;30153:7;30123:5;;;;;;;;;;;:15;;;30139:10;30123:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;30115:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;30226:4;30196:7;:19;30204:10;30196:19;;;;;;;;;;;;;;;:26;;;:34;30188:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;30275:14;:12;:14::i;:::-;30299:21;30323:7;:19;30331:10;30323:19;;;;;;;;;;;;;;;30299:43;;30352:58;30375:10;30395:4;30402:7;30352:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;30442:32;30466:7;30442:6;:19;;;:23;;:32;;;;:::i;:::-;30420:6;:19;;:54;;;;30498:24;30514:7;30498:11;;:15;;:24;;;;:::i;:::-;30484:11;:38;;;;30546:27;30553:10;30565:7;30546:27;;;;;;;:::i;:::-;;;;;;;;30031:549;29993:587;:::o;26760:198::-;26101:12;:10;:12::i;:::-;26090:23;;:7;:5;:7::i;:::-;:23;;;26082:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;26868:1:::1;26848:22;;:8;:22;;;;26840:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;26923:28;26942:8;26923:18;:28::i;:::-;26760:198:::0;:::o;33900:117::-;33945:7;33971;:19;33979:10;33971:19;;;;;;;;;;;;;;;:39;;;33964:46;;33900:117;:::o;28119:19::-;;;;;;;;;;;;;:::o;29050:372::-;29100:21;29124:7;:19;29132:10;29124:19;;;;;;;;;;;;;;;29100:43;;29153:17;29173:108;29277:3;29173:99;29260:11;;29173:82;29197:57;29249:4;29197:47;29214:6;:29;;;29197:12;:16;;:47;;;;:::i;:::-;:51;;:57;;;;:::i;:::-;29173:6;:19;;;:23;;:82;;;;:::i;:::-;:86;;:99;;;;:::i;:::-;:103;;:108;;;;:::i;:::-;29153:128;;29320:41;29351:9;29320:6;:26;;;:30;;:41;;;;:::i;:::-;29291:6;:26;;:70;;;;29403:12;29371:6;:29;;:44;;;;29081:341;;29050:372::o;14446:96::-;14504:7;14534:1;14530;:5;;;;:::i;:::-;14523:12;;14446:96;;;;:::o;15174:::-;15232:7;15262:1;15258;:5;;;;:::i;:::-;15251:12;;15174:96;;;;:::o;14079:::-;14137:7;14167:1;14163;:5;;;;:::i;:::-;14156:12;;14079:96;;;;:::o;14789:::-;14847:7;14877:1;14873;:5;;;;:::i;:::-;14866:12;;14789:96;;;;:::o;18231:175::-;18313:86;18333:5;18363:23;;;18388:2;18392:5;18340:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18313:19;:86::i;:::-;18231:175;;;:::o;24669:96::-;24722:7;24748:10;24741:17;;24669:96;:::o;27112:187::-;27185:16;27204:6;;;;;;;;;;;27185:25;;27229:8;27220:6;;:17;;;;;;;;;;;;;;;;;;27283:8;27252:40;;27273:8;27252:40;;;;;;;;;;;;27175:124;27112:187;:::o;18412:203::-;18512:96;18532:5;18562:27;;;18591:4;18597:2;18601:5;18539:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18512:19;:96::i;:::-;18412:203;;;;:::o;20498:759::-;20925:23;20951:69;20979:4;20951:69;;;;;;;;;;;;;;;;;20959:5;20951:27;;;;:69;;;;;:::i;:::-;20925:95;;21054:1;21034:10;:17;:21;21030:221;;;21174:10;21163:30;;;;;;;;;;;;:::i;:::-;21155:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;21030:221;20568:689;20498:759;;:::o;6938:223::-;7071:12;7102:52;7124:6;7132:4;7138:1;7141:12;7102:21;:52::i;:::-;7095:59;;6938:223;;;;;:::o;8025:499::-;8190:12;8247:5;8222:21;:30;;8214:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;8313:18;8324:6;8313:10;:18::i;:::-;8305:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;8377:12;8391:23;8418:6;:11;;8437:5;8444:4;8418:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8376:73;;;;8466:51;8483:7;8492:10;8504:12;8466:16;:51::i;:::-;8459:58;;;;8025:499;;;;;;:::o;4252:320::-;4312:4;4564:1;4542:7;:19;;;:23;4535:30;;4252:320;;;:::o;10638:692::-;10784:12;10812:7;10808:516;;;10842:10;10835:17;;;;10808:516;10973:1;10953:10;:17;:21;10949:365;;;11147:10;11141:17;11207:15;11194:10;11190:2;11186:19;11179:44;10949:365;11286:12;11279:20;;;;;;;;;;;:::i;:::-;;;;;;;;10638:692;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:474::-;2035:6;2043;2092:2;2080:9;2071:7;2067:23;2063:32;2060:119;;;2098:79;;:::i;:::-;2060:119;2218:1;2243:53;2288:7;2279:6;2268:9;2264:22;2243:53;:::i;:::-;2233:63;;2189:117;2345:2;2371:53;2416:7;2407:6;2396:9;2392:22;2371:53;:::i;:::-;2361:63;;2316:118;1967:474;;;;;:::o;2447:118::-;2534:24;2552:5;2534:24;:::i;:::-;2529:3;2522:37;2447:118;;:::o;2571:373::-;2675:3;2703:38;2735:5;2703:38;:::i;:::-;2757:88;2838:6;2833:3;2757:88;:::i;:::-;2750:95;;2854:52;2899:6;2894:3;2887:4;2880:5;2876:16;2854:52;:::i;:::-;2931:6;2926:3;2922:16;2915:23;;2679:265;2571:373;;;;:::o;2950:159::-;3051:51;3096:5;3051:51;:::i;:::-;3046:3;3039:64;2950:159;;:::o;3115:364::-;3203:3;3231:39;3264:5;3231:39;:::i;:::-;3286:71;3350:6;3345:3;3286:71;:::i;:::-;3279:78;;3366:52;3411:6;3406:3;3399:4;3392:5;3388:16;3366:52;:::i;:::-;3443:29;3465:6;3443:29;:::i;:::-;3438:3;3434:39;3427:46;;3207:272;3115:364;;;;:::o;3485:366::-;3627:3;3648:67;3712:2;3707:3;3648:67;:::i;:::-;3641:74;;3724:93;3813:3;3724:93;:::i;:::-;3842:2;3837:3;3833:12;3826:19;;3485:366;;;:::o;3857:::-;3999:3;4020:67;4084:2;4079:3;4020:67;:::i;:::-;4013:74;;4096:93;4185:3;4096:93;:::i;:::-;4214:2;4209:3;4205:12;4198:19;;3857:366;;;:::o;4229:::-;4371:3;4392:67;4456:2;4451:3;4392:67;:::i;:::-;4385:74;;4468:93;4557:3;4468:93;:::i;:::-;4586:2;4581:3;4577:12;4570:19;;4229:366;;;:::o;4601:::-;4743:3;4764:67;4828:2;4823:3;4764:67;:::i;:::-;4757:74;;4840:93;4929:3;4840:93;:::i;:::-;4958:2;4953:3;4949:12;4942:19;;4601:366;;;:::o;4973:::-;5115:3;5136:67;5200:2;5195:3;5136:67;:::i;:::-;5129:74;;5212:93;5301:3;5212:93;:::i;:::-;5330:2;5325:3;5321:12;5314:19;;4973:366;;;:::o;5345:::-;5487:3;5508:67;5572:2;5567:3;5508:67;:::i;:::-;5501:74;;5584:93;5673:3;5584:93;:::i;:::-;5702:2;5697:3;5693:12;5686:19;;5345:366;;;:::o;5717:::-;5859:3;5880:67;5944:2;5939:3;5880:67;:::i;:::-;5873:74;;5956:93;6045:3;5956:93;:::i;:::-;6074:2;6069:3;6065:12;6058:19;;5717:366;;;:::o;6089:::-;6231:3;6252:67;6316:2;6311:3;6252:67;:::i;:::-;6245:74;;6328:93;6417:3;6328:93;:::i;:::-;6446:2;6441:3;6437:12;6430:19;;6089:366;;;:::o;6461:::-;6603:3;6624:67;6688:2;6683:3;6624:67;:::i;:::-;6617:74;;6700:93;6789:3;6700:93;:::i;:::-;6818:2;6813:3;6809:12;6802:19;;6461:366;;;:::o;6833:::-;6975:3;6996:67;7060:2;7055:3;6996:67;:::i;:::-;6989:74;;7072:93;7161:3;7072:93;:::i;:::-;7190:2;7185:3;7181:12;7174:19;;6833:366;;;:::o;7205:::-;7347:3;7368:67;7432:2;7427:3;7368:67;:::i;:::-;7361:74;;7444:93;7533:3;7444:93;:::i;:::-;7562:2;7557:3;7553:12;7546:19;;7205:366;;;:::o;7577:::-;7719:3;7740:67;7804:2;7799:3;7740:67;:::i;:::-;7733:74;;7816:93;7905:3;7816:93;:::i;:::-;7934:2;7929:3;7925:12;7918:19;;7577:366;;;:::o;7949:::-;8091:3;8112:67;8176:2;8171:3;8112:67;:::i;:::-;8105:74;;8188:93;8277:3;8188:93;:::i;:::-;8306:2;8301:3;8297:12;8290:19;;7949:366;;;:::o;8321:::-;8463:3;8484:67;8548:2;8543:3;8484:67;:::i;:::-;8477:74;;8560:93;8649:3;8560:93;:::i;:::-;8678:2;8673:3;8669:12;8662:19;;8321:366;;;:::o;8693:::-;8835:3;8856:67;8920:2;8915:3;8856:67;:::i;:::-;8849:74;;8932:93;9021:3;8932:93;:::i;:::-;9050:2;9045:3;9041:12;9034:19;;8693:366;;;:::o;9065:118::-;9152:24;9170:5;9152:24;:::i;:::-;9147:3;9140:37;9065:118;;:::o;9189:271::-;9319:3;9341:93;9430:3;9421:6;9341:93;:::i;:::-;9334:100;;9451:3;9444:10;;9189:271;;;;:::o;9466:222::-;9559:4;9597:2;9586:9;9582:18;9574:26;;9610:71;9678:1;9667:9;9663:17;9654:6;9610:71;:::i;:::-;9466:222;;;;:::o;9694:442::-;9843:4;9881:2;9870:9;9866:18;9858:26;;9894:71;9962:1;9951:9;9947:17;9938:6;9894:71;:::i;:::-;9975:72;10043:2;10032:9;10028:18;10019:6;9975:72;:::i;:::-;10057;10125:2;10114:9;10110:18;10101:6;10057:72;:::i;:::-;9694:442;;;;;;:::o;10142:332::-;10263:4;10301:2;10290:9;10286:18;10278:26;;10314:71;10382:1;10371:9;10367:17;10358:6;10314:71;:::i;:::-;10395:72;10463:2;10452:9;10448:18;10439:6;10395:72;:::i;:::-;10142:332;;;;;:::o;10480:250::-;10587:4;10625:2;10614:9;10610:18;10602:26;;10638:85;10720:1;10709:9;10705:17;10696:6;10638:85;:::i;:::-;10480:250;;;;:::o;10736:313::-;10849:4;10887:2;10876:9;10872:18;10864:26;;10936:9;10930:4;10926:20;10922:1;10911:9;10907:17;10900:47;10964:78;11037:4;11028:6;10964:78;:::i;:::-;10956:86;;10736:313;;;;:::o;11055:419::-;11221:4;11259:2;11248:9;11244:18;11236:26;;11308:9;11302:4;11298:20;11294:1;11283:9;11279:17;11272:47;11336:131;11462:4;11336:131;:::i;:::-;11328:139;;11055:419;;;:::o;11480:::-;11646:4;11684:2;11673:9;11669:18;11661:26;;11733:9;11727:4;11723:20;11719:1;11708:9;11704:17;11697:47;11761:131;11887:4;11761:131;:::i;:::-;11753:139;;11480:419;;;:::o;11905:::-;12071:4;12109:2;12098:9;12094:18;12086:26;;12158:9;12152:4;12148:20;12144:1;12133:9;12129:17;12122:47;12186:131;12312:4;12186:131;:::i;:::-;12178:139;;11905:419;;;:::o;12330:::-;12496:4;12534:2;12523:9;12519:18;12511:26;;12583:9;12577:4;12573:20;12569:1;12558:9;12554:17;12547:47;12611:131;12737:4;12611:131;:::i;:::-;12603:139;;12330:419;;;:::o;12755:::-;12921:4;12959:2;12948:9;12944:18;12936:26;;13008:9;13002:4;12998:20;12994:1;12983:9;12979:17;12972:47;13036:131;13162:4;13036:131;:::i;:::-;13028:139;;12755:419;;;:::o;13180:::-;13346:4;13384:2;13373:9;13369:18;13361:26;;13433:9;13427:4;13423:20;13419:1;13408:9;13404:17;13397:47;13461:131;13587:4;13461:131;:::i;:::-;13453:139;;13180:419;;;:::o;13605:::-;13771:4;13809:2;13798:9;13794:18;13786:26;;13858:9;13852:4;13848:20;13844:1;13833:9;13829:17;13822:47;13886:131;14012:4;13886:131;:::i;:::-;13878:139;;13605:419;;;:::o;14030:::-;14196:4;14234:2;14223:9;14219:18;14211:26;;14283:9;14277:4;14273:20;14269:1;14258:9;14254:17;14247:47;14311:131;14437:4;14311:131;:::i;:::-;14303:139;;14030:419;;;:::o;14455:::-;14621:4;14659:2;14648:9;14644:18;14636:26;;14708:9;14702:4;14698:20;14694:1;14683:9;14679:17;14672:47;14736:131;14862:4;14736:131;:::i;:::-;14728:139;;14455:419;;;:::o;14880:::-;15046:4;15084:2;15073:9;15069:18;15061:26;;15133:9;15127:4;15123:20;15119:1;15108:9;15104:17;15097:47;15161:131;15287:4;15161:131;:::i;:::-;15153:139;;14880:419;;;:::o;15305:::-;15471:4;15509:2;15498:9;15494:18;15486:26;;15558:9;15552:4;15548:20;15544:1;15533:9;15529:17;15522:47;15586:131;15712:4;15586:131;:::i;:::-;15578:139;;15305:419;;;:::o;15730:::-;15896:4;15934:2;15923:9;15919:18;15911:26;;15983:9;15977:4;15973:20;15969:1;15958:9;15954:17;15947:47;16011:131;16137:4;16011:131;:::i;:::-;16003:139;;15730:419;;;:::o;16155:::-;16321:4;16359:2;16348:9;16344:18;16336:26;;16408:9;16402:4;16398:20;16394:1;16383:9;16379:17;16372:47;16436:131;16562:4;16436:131;:::i;:::-;16428:139;;16155:419;;;:::o;16580:::-;16746:4;16784:2;16773:9;16769:18;16761:26;;16833:9;16827:4;16823:20;16819:1;16808:9;16804:17;16797:47;16861:131;16987:4;16861:131;:::i;:::-;16853:139;;16580:419;;;:::o;17005:::-;17171:4;17209:2;17198:9;17194:18;17186:26;;17258:9;17252:4;17248:20;17244:1;17233:9;17229:17;17222:47;17286:131;17412:4;17286:131;:::i;:::-;17278:139;;17005:419;;;:::o;17430:222::-;17523:4;17561:2;17550:9;17546:18;17538:26;;17574:71;17642:1;17631:9;17627:17;17618:6;17574:71;:::i;:::-;17430:222;;;;:::o;17739:98::-;17790:6;17824:5;17818:12;17808:22;;17739:98;;;:::o;17843:99::-;17895:6;17929:5;17923:12;17913:22;;17843:99;;;:::o;17948:147::-;18049:11;18086:3;18071:18;;17948:147;;;;:::o;18101:169::-;18185:11;18219:6;18214:3;18207:19;18259:4;18254:3;18250:14;18235:29;;18101:169;;;;:::o;18276:305::-;18316:3;18335:20;18353:1;18335:20;:::i;:::-;18330:25;;18369:20;18387:1;18369:20;:::i;:::-;18364:25;;18523:1;18455:66;18451:74;18448:1;18445:81;18442:107;;;18529:18;;:::i;:::-;18442:107;18573:1;18570;18566:9;18559:16;;18276:305;;;;:::o;18587:185::-;18627:1;18644:20;18662:1;18644:20;:::i;:::-;18639:25;;18678:20;18696:1;18678:20;:::i;:::-;18673:25;;18717:1;18707:35;;18722:18;;:::i;:::-;18707:35;18764:1;18761;18757:9;18752:14;;18587:185;;;;:::o;18778:348::-;18818:7;18841:20;18859:1;18841:20;:::i;:::-;18836:25;;18875:20;18893:1;18875:20;:::i;:::-;18870:25;;19063:1;18995:66;18991:74;18988:1;18985:81;18980:1;18973:9;18966:17;18962:105;18959:131;;;19070:18;;:::i;:::-;18959:131;19118:1;19115;19111:9;19100:20;;18778:348;;;;:::o;19132:191::-;19172:4;19192:20;19210:1;19192:20;:::i;:::-;19187:25;;19226:20;19244:1;19226:20;:::i;:::-;19221:25;;19265:1;19262;19259:8;19256:34;;;19270:18;;:::i;:::-;19256:34;19315:1;19312;19308:9;19300:17;;19132:191;;;;:::o;19329:96::-;19366:7;19395:24;19413:5;19395:24;:::i;:::-;19384:35;;19329:96;;;:::o;19431:90::-;19465:7;19508:5;19501:13;19494:21;19483:32;;19431:90;;;:::o;19527:126::-;19564:7;19604:42;19597:5;19593:54;19582:65;;19527:126;;;:::o;19659:77::-;19696:7;19725:5;19714:16;;19659:77;;;:::o;19742:140::-;19806:9;19839:37;19870:5;19839:37;:::i;:::-;19826:50;;19742:140;;;:::o;19888:126::-;19938:9;19971:37;20002:5;19971:37;:::i;:::-;19958:50;;19888:126;;;:::o;20020:113::-;20070:9;20103:24;20121:5;20103:24;:::i;:::-;20090:37;;20020:113;;;:::o;20139:307::-;20207:1;20217:113;20231:6;20228:1;20225:13;20217:113;;;20316:1;20311:3;20307:11;20301:18;20297:1;20292:3;20288:11;20281:39;20253:2;20250:1;20246:10;20241:15;;20217:113;;;20348:6;20345:1;20342:13;20339:101;;;20428:1;20419:6;20414:3;20410:16;20403:27;20339:101;20188:258;20139:307;;;:::o;20452:176::-;20484:1;20501:20;20519:1;20501:20;:::i;:::-;20496:25;;20535:20;20553:1;20535:20;:::i;:::-;20530:25;;20574:1;20564:35;;20579:18;;:::i;:::-;20564:35;20620:1;20617;20613:9;20608:14;;20452:176;;;;:::o;20634:180::-;20682:77;20679:1;20672:88;20779:4;20776:1;20769:15;20803:4;20800:1;20793:15;20820:180;20868:77;20865:1;20858:88;20965:4;20962:1;20955:15;20989:4;20986:1;20979:15;21129:117;21238:1;21235;21228:12;21252:102;21293:6;21344:2;21340:7;21335:2;21328:5;21324:14;21320:28;21310:38;;21252:102;;;:::o;21360:166::-;21500:18;21496:1;21488:6;21484:14;21477:42;21360:166;:::o;21532:171::-;21672:23;21668:1;21660:6;21656:14;21649:47;21532:171;:::o;21709:229::-;21849:34;21845:1;21837:6;21833:14;21826:58;21918:12;21913:2;21905:6;21901:15;21894:37;21709:229;:::o;21944:225::-;22084:34;22080:1;22072:6;22068:14;22061:58;22153:8;22148:2;22140:6;22136:15;22129:33;21944:225;:::o;22175:164::-;22315:16;22311:1;22303:6;22299:14;22292:40;22175:164;:::o;22345:165::-;22485:17;22481:1;22473:6;22469:14;22462:41;22345:165;:::o;22516:225::-;22656:34;22652:1;22644:6;22640:14;22633:58;22725:8;22720:2;22712:6;22708:15;22701:33;22516:225;:::o;22747:181::-;22887:33;22883:1;22875:6;22871:14;22864:57;22747:181;:::o;22934:182::-;23074:34;23070:1;23062:6;23058:14;23051:58;22934:182;:::o;23122:163::-;23262:15;23258:1;23250:6;23246:14;23239:39;23122:163;:::o;23291:179::-;23431:31;23427:1;23419:6;23415:14;23408:55;23291:179;:::o;23476:176::-;23616:28;23612:1;23604:6;23600:14;23593:52;23476:176;:::o;23658:173::-;23798:25;23794:1;23786:6;23782:14;23775:49;23658:173;:::o;23837:163::-;23977:15;23973:1;23965:6;23961:14;23954:39;23837:163;:::o;24006:::-;24146:15;24142:1;24134:6;24130:14;24123:39;24006:163;:::o;24175:122::-;24248:24;24266:5;24248:24;:::i;:::-;24241:5;24238:35;24228:63;;24287:1;24284;24277:12;24228:63;24175:122;:::o;24303:116::-;24373:21;24388:5;24373:21;:::i;:::-;24366:5;24363:32;24353:60;;24409:1;24406;24399:12;24353:60;24303:116;:::o;24425:122::-;24498:24;24516:5;24498:24;:::i;:::-;24491:5;24488:35;24478:63;;24537:1;24534;24527:12;24478:63;24425:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2068200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getNumberofStakers()": "2512",
								"getRewardRate()": "2482",
								"getTotalStaked()": "2461",
								"harvest()": "infinite",
								"owner()": "2611",
								"renounceOwnership()": "30397",
								"rewardAmount()": "2620",
								"rewardToHarvest()": "2621",
								"setEventPeriod(uint256)": "infinite",
								"setLockupTime(uint256)": "24806",
								"setRewardRate(uint256)": "infinite",
								"setUnstakingFeeRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakedAmount()": "2600",
								"startStaking(uint256,uint256)": "infinite",
								"token()": "2710",
								"totalStaked()": "2496",
								"transferOwnership(address)": "30789",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Init()": "infinite",
								"calDaysFromTimestamp(uint256)": "infinite",
								"updateReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27335,
									"end": 34115,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25763,
									"end": 25795,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25782,
									"end": 25794,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25782,
									"end": 25792,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25782,
									"end": 25792,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25782,
									"end": 25792,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 25782,
									"end": 25794,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25782,
									"end": 25794,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 25782,
									"end": 25794,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 25782,
									"end": 25794,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25782,
									"end": 25794,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25763,
									"end": 25781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 25763,
									"end": 25781,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25763,
									"end": 25781,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 25763,
									"end": 25795,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25763,
									"end": 25795,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 25763,
									"end": 25795,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 25763,
									"end": 25795,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25763,
									"end": 25795,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28583,
									"end": 28589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28583,
									"end": 28587,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28583,
									"end": 28587,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28583,
									"end": 28587,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 28583,
									"end": 28589,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28583,
									"end": 28589,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 28583,
									"end": 28589,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 28583,
									"end": 28589,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28583,
									"end": 28589,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28614,
									"end": 28620,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28604,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 28599,
									"end": 28604,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28599,
									"end": 28621,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28536,
									"end": 28628,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24669,
									"end": 24765,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24669,
									"end": 24765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24722,
									"end": 24729,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24748,
									"end": 24758,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24669,
									"end": 24765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24669,
									"end": 24765,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 27112,
									"end": 27299,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 27112,
									"end": 27299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27185,
									"end": 27201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27204,
									"end": 27210,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27204,
									"end": 27210,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27204,
									"end": 27210,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27204,
									"end": 27210,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27204,
									"end": 27210,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27204,
									"end": 27210,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 27204,
									"end": 27210,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 27204,
									"end": 27210,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27204,
									"end": 27210,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 27204,
									"end": 27210,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27204,
									"end": 27210,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27185,
									"end": 27210,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27185,
									"end": 27210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27229,
									"end": 27237,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27220,
									"end": 27226,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27220,
									"end": 27237,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27283,
									"end": 27291,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27273,
									"end": 27281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27252,
									"end": 27292,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 27175,
									"end": 27299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27112,
									"end": 27299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27112,
									"end": 27299,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 28634,
									"end": 28841,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28634,
									"end": 28841,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28692,
									"end": 28695,
									"name": "PUSH",
									"source": 0,
									"value": "C8"
								},
								{
									"begin": 28678,
									"end": 28689,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 28678,
									"end": 28695,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28678,
									"end": 28695,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28678,
									"end": 28695,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28678,
									"end": 28695,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28736,
									"end": 28740,
									"name": "PUSH",
									"source": 0,
									"value": "5DC"
								},
								{
									"begin": 28716,
									"end": 28733,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28716,
									"end": 28740,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28716,
									"end": 28740,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28716,
									"end": 28740,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28716,
									"end": 28740,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28767,
									"end": 28770,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 28750,
									"end": 28764,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 28750,
									"end": 28770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28750,
									"end": 28770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28750,
									"end": 28770,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28750,
									"end": 28770,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28795,
									"end": 28801,
									"name": "PUSH",
									"source": 0,
									"value": "93A80"
								},
								{
									"begin": 28780,
									"end": 28792,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 28780,
									"end": 28801,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28780,
									"end": 28801,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28780,
									"end": 28801,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28780,
									"end": 28801,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28827,
									"end": 28834,
									"name": "PUSH",
									"source": 0,
									"value": "76A700"
								},
								{
									"begin": 28811,
									"end": 28824,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 28811,
									"end": 28834,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28811,
									"end": 28834,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28811,
									"end": 28834,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28811,
									"end": 28834,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28634,
									"end": 28841,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27335,
									"end": 34115,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207cc1a47140e0c601e4e3fe7efb06eff72aa9049445a765de43f31b23d6c08b4c64736f6c63430008070033",
									".code": [
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "9E447FC6"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "9E447FC6"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "F7B2A7BE"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "FC0C546A"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "7E1A3786"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "817B1CD2"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "91E07E7A"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "4B62B70B"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "4B62B70B"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "4B77DD9E"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "5715EC11"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "5D2EC65D"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "692642E7"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "917E776"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "373D6132"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "4641257D"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 34115,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33147,
											"end": 33718,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 33147,
											"end": 33718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33147,
											"end": 33718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 33147,
											"end": 33718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 33147,
											"end": 33718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33147,
											"end": 33718,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 33147,
											"end": 33718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33147,
											"end": 33718,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26611,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26510,
											"end": 26611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26510,
											"end": 26611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26510,
											"end": 26611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26510,
											"end": 26611,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26510,
											"end": 26611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26611,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30633,
											"end": 30640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30660,
											"end": 30671,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30660,
											"end": 30671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30653,
											"end": 30671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30653,
											"end": 30671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30678,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30889,
											"end": 30910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30913,
											"end": 30920,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30921,
											"end": 30931,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30913,
											"end": 30932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30889,
											"end": 30932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30889,
											"end": 30932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30960,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30951,
											"end": 30957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30951,
											"end": 30961,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 30943,
											"end": 30997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31025,
											"end": 31031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31025,
											"end": 31044,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31025,
											"end": 31044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31025,
											"end": 31044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31015,
											"end": 31021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31015,
											"end": 31044,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31015,
											"end": 31044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 31007,
											"end": 31063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31074,
											"end": 31088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 31074,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 31074,
											"end": 31088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31074,
											"end": 31088,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 31074,
											"end": 31088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31098,
											"end": 31125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31137,
											"end": 31142,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31137,
											"end": 31142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31137,
											"end": 31142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31142,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31137,
											"end": 31142,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31142,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31137,
											"end": 31142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31137,
											"end": 31152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31152,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 31161,
											"end": 31165,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31137,
											"end": 31167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31128,
											"end": 31134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31128,
											"end": 31167,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31128,
											"end": 31209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 31128,
											"end": 31209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31184,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31179,
											"end": 31184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31179,
											"end": 31184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31184,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31179,
											"end": 31184,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31184,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31179,
											"end": 31184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31179,
											"end": 31194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31194,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 31203,
											"end": 31207,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 31179,
											"end": 31209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31128,
											"end": 31209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 31128,
											"end": 31209,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31128,
											"end": 31209,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 31128,
											"end": 31209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31170,
											"end": 31176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31128,
											"end": 31209,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 31128,
											"end": 31209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31098,
											"end": 31209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31098,
											"end": 31209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31219,
											"end": 31233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31236,
											"end": 31290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31283,
											"end": 31289,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 31236,
											"end": 31278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 31256,
											"end": 31262,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31256,
											"end": 31277,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31256,
											"end": 31277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31256,
											"end": 31277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31251,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 31236,
											"end": 31255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31278,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31236,
											"end": 31278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31236,
											"end": 31278,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 31236,
											"end": 31278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 31236,
											"end": 31282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31236,
											"end": 31290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31236,
											"end": 31290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31236,
											"end": 31290,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31236,
											"end": 31290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31219,
											"end": 31290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31219,
											"end": 31290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31300,
											"end": 31311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31314,
											"end": 31317,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31300,
											"end": 31317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31300,
											"end": 31317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31327,
											"end": 31348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31366,
											"end": 31367,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31351,
											"end": 31357,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31351,
											"end": 31362,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31351,
											"end": 31362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31351,
											"end": 31362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31351,
											"end": 31367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31351,
											"end": 31484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31351,
											"end": 31484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31444,
											"end": 31484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 31470,
											"end": 31483,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31470,
											"end": 31483,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31444,
											"end": 31450,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31444,
											"end": 31465,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31444,
											"end": 31465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31444,
											"end": 31465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31444,
											"end": 31469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 31444,
											"end": 31469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31444,
											"end": 31484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31444,
											"end": 31484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31444,
											"end": 31484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31444,
											"end": 31484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31444,
											"end": 31484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31444,
											"end": 31484,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 31444,
											"end": 31484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31425,
											"end": 31440,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31425,
											"end": 31484,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31425,
											"end": 31484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31351,
											"end": 31484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31351,
											"end": 31484,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31351,
											"end": 31484,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31351,
											"end": 31484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31395,
											"end": 31396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31379,
											"end": 31391,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31379,
											"end": 31391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31370,
											"end": 31376,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31370,
											"end": 31391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 31370,
											"end": 31391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31370,
											"end": 31391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31370,
											"end": 31391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 31370,
											"end": 31391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31370,
											"end": 31391,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 31370,
											"end": 31391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31370,
											"end": 31396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31370,
											"end": 31410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31370,
											"end": 31410,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31370,
											"end": 31410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31370,
											"end": 31410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31370,
											"end": 31410,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31400,
											"end": 31406,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31400,
											"end": 31410,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31370,
											"end": 31410,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31370,
											"end": 31410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31351,
											"end": 31484,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31351,
											"end": 31484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31327,
											"end": 31484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31327,
											"end": 31484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31499,
											"end": 31515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31494,
											"end": 31565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31494,
											"end": 31565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31537,
											"end": 31554,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31537,
											"end": 31554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31531,
											"end": 31554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31531,
											"end": 31554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31494,
											"end": 31565,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31494,
											"end": 31565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31596,
											"end": 31658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31620,
											"end": 31657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31653,
											"end": 31656,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 31620,
											"end": 31648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 31644,
											"end": 31647,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31620,
											"end": 31639,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31620,
											"end": 31643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31620,
											"end": 31643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31620,
											"end": 31648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31620,
											"end": 31648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31620,
											"end": 31648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31620,
											"end": 31648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31620,
											"end": 31648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31620,
											"end": 31648,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 31620,
											"end": 31648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31620,
											"end": 31652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 31620,
											"end": 31652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31620,
											"end": 31657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31620,
											"end": 31657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31620,
											"end": 31657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31620,
											"end": 31657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31620,
											"end": 31657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31620,
											"end": 31657,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31620,
											"end": 31657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31596,
											"end": 31615,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31596,
											"end": 31619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 31596,
											"end": 31619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31596,
											"end": 31658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31596,
											"end": 31658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31596,
											"end": 31658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31596,
											"end": 31658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31596,
											"end": 31658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31596,
											"end": 31658,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31596,
											"end": 31658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31658,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31682,
											"end": 31718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 31698,
											"end": 31717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31682,
											"end": 31693,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31682,
											"end": 31693,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31682,
											"end": 31697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 31682,
											"end": 31697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31682,
											"end": 31718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31682,
											"end": 31718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31682,
											"end": 31718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31682,
											"end": 31718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31682,
											"end": 31718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31682,
											"end": 31718,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 31682,
											"end": 31718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31679,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31668,
											"end": 31718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 31774,
											"end": 31793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31756,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31769,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31750,
											"end": 31769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31769,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 31750,
											"end": 31773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31794,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31750,
											"end": 31794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31750,
											"end": 31794,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 31750,
											"end": 31794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31734,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31747,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31728,
											"end": 31747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31794,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31728,
											"end": 31794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31823,
											"end": 31833,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31835,
											"end": 31854,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31809,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31804,
											"end": 31809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31804,
											"end": 31809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31809,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31809,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31804,
											"end": 31809,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31809,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31804,
											"end": 31809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31804,
											"end": 31822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31804,
											"end": 31822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31855,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31855,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31804,
											"end": 31855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31804,
											"end": 31855,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31804,
											"end": 31855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 31880,
											"end": 31890,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31892,
											"end": 31911,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31871,
											"end": 31912,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 30870,
											"end": 31981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30870,
											"end": 31981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30870,
											"end": 31981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30870,
											"end": 31981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30870,
											"end": 31981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 31981,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33816,
											"end": 33823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33851,
											"end": 33858,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33859,
											"end": 33869,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33851,
											"end": 33870,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33851,
											"end": 33883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33851,
											"end": 33883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33844,
											"end": 33883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33844,
											"end": 33883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33147,
											"end": 33718,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 33147,
											"end": 33718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33191,
											"end": 33205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 33191,
											"end": 33203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 33191,
											"end": 33205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33191,
											"end": 33205,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 33191,
											"end": 33205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33215,
											"end": 33236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33239,
											"end": 33246,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33247,
											"end": 33257,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33239,
											"end": 33258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33215,
											"end": 33258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33215,
											"end": 33258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33292,
											"end": 33381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 33323,
											"end": 33380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 33374,
											"end": 33379,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 33323,
											"end": 33369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 33354,
											"end": 33368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33354,
											"end": 33368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33323,
											"end": 33349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 33323,
											"end": 33353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33323,
											"end": 33369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33323,
											"end": 33369,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 33323,
											"end": 33369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 33323,
											"end": 33373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33323,
											"end": 33380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33323,
											"end": 33380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33323,
											"end": 33380,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 33323,
											"end": 33380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33292,
											"end": 33298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33292,
											"end": 33318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33292,
											"end": 33318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33292,
											"end": 33318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33292,
											"end": 33322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 33292,
											"end": 33322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33292,
											"end": 33381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33292,
											"end": 33381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33292,
											"end": 33381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33292,
											"end": 33381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33292,
											"end": 33381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33292,
											"end": 33381,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 33292,
											"end": 33381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33424,
											"end": 33425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33408,
											"end": 33421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33408,
											"end": 33425,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 33400,
											"end": 33446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33481,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33476,
											"end": 33481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33476,
											"end": 33481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33481,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33476,
											"end": 33481,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33481,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33476,
											"end": 33481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33491,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33476,
											"end": 33491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33491,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 33500,
											"end": 33504,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 33476,
											"end": 33506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33506,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33456,
											"end": 33566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33456,
											"end": 33566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 33456,
											"end": 33566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33541,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33536,
											"end": 33541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33536,
											"end": 33541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33541,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33541,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33536,
											"end": 33541,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33541,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33541,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33536,
											"end": 33541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33536,
											"end": 33551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33551,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 33560,
											"end": 33564,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 33536,
											"end": 33566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33456,
											"end": 33566,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 33456,
											"end": 33566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 33595,
											"end": 33605,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33581,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33576,
											"end": 33581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33576,
											"end": 33581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33581,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33576,
											"end": 33581,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33581,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33576,
											"end": 33581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33576,
											"end": 33594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33576,
											"end": 33594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33621,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33576,
											"end": 33621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33576,
											"end": 33621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33576,
											"end": 33621,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 33576,
											"end": 33621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33660,
											"end": 33661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33631,
											"end": 33637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33631,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33631,
											"end": 33657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33631,
											"end": 33661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33631,
											"end": 33661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33631,
											"end": 33661,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33631,
											"end": 33661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "PUSH",
											"source": 0,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 33685,
											"end": 33695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33697,
											"end": 33710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33677,
											"end": 33711,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 33172,
											"end": 33718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33172,
											"end": 33718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33147,
											"end": 33718,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 26101,
											"end": 26111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 26090,
											"end": 26095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32831,
											"end": 32832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32818,
											"end": 32828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32818,
											"end": 32832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 32810,
											"end": 32850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32877,
											"end": 32887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 32874,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32861,
											"end": 32887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 32887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 32887,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 32887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32894,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29532,
											"end": 29533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29522,
											"end": 29529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29522,
											"end": 29533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 29514,
											"end": 29569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29617,
											"end": 29624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29592,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29587,
											"end": 29592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29587,
											"end": 29592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29592,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29587,
											"end": 29592,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29592,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29587,
											"end": 29592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29587,
											"end": 29602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29602,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29603,
											"end": 29613,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29587,
											"end": 29614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29624,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 29579,
											"end": 29642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29694,
											"name": "PUSH",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29660,
											"end": 29667,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29668,
											"end": 29678,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29660,
											"end": 29679,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29686,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29660,
											"end": 29686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29694,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29660,
											"end": 29694,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 29652,
											"end": 29714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29752,
											"end": 29757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29732,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29733,
											"end": 29743,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29725,
											"end": 29744,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29749,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29725,
											"end": 29749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29757,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29804,
											"end": 29819,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29774,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29775,
											"end": 29785,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29767,
											"end": 29786,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29801,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29767,
											"end": 29801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29767,
											"end": 29819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29858,
											"end": 29862,
											"name": "PUSH",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29829,
											"end": 29836,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29837,
											"end": 29847,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29829,
											"end": 29848,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29855,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29829,
											"end": 29855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29862,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29886,
											"end": 29896,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29907,
											"end": 29921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29913,
											"end": 29920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29907,
											"end": 29912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29907,
											"end": 29921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29907,
											"end": 29921,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29907,
											"end": 29921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29928,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30735,
											"end": 30742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30762,
											"end": 30770,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30762,
											"end": 30777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30762,
											"end": 30777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30762,
											"end": 30777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30762,
											"end": 30777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30755,
											"end": 30777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30755,
											"end": 30777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30784,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33002,
											"end": 33009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33063,
											"end": 33070,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33071,
											"end": 33081,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33063,
											"end": 33102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32954,
											"end": 33109,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 26101,
											"end": 26111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 26090,
											"end": 26095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32326,
											"end": 32327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32310,
											"end": 32323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32310,
											"end": 32327,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 32302,
											"end": 32355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32381,
											"end": 32406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 32399,
											"end": 32405,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 32381,
											"end": 32394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32381,
											"end": 32398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 32381,
											"end": 32398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32381,
											"end": 32406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32381,
											"end": 32406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32381,
											"end": 32406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32381,
											"end": 32406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32381,
											"end": 32406,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32381,
											"end": 32406,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 32381,
											"end": 32406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32366,
											"end": 32378,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32366,
											"end": 32406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32366,
											"end": 32406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32366,
											"end": 32406,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32366,
											"end": 32406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "PUSH",
											"source": 0,
											"value": "189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C"
										},
										{
											"begin": 32437,
											"end": 32450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32451,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32458,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26510,
											"end": 26611,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26510,
											"end": 26611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 26101,
											"end": 26111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 26090,
											"end": 26095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26574,
											"end": 26604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 26601,
											"end": 26602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 26574,
											"end": 26604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26574,
											"end": 26604,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 26574,
											"end": 26604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26611,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34069,
											"end": 34076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34023,
											"end": 34113,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28087,
											"end": 28113,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25924,
											"end": 25931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25943,
											"end": 25956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25943,
											"end": 25956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25963,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26101,
											"end": 26111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26090,
											"end": 26095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32588,
											"end": 32589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32567,
											"end": 32585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32589,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 32559,
											"end": 32620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32651,
											"end": 32669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32631,
											"end": 32648,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32631,
											"end": 32669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32631,
											"end": 32669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32631,
											"end": 32669,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32631,
											"end": 32669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "PUSH",
											"source": 0,
											"value": "150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81"
										},
										{
											"begin": 32705,
											"end": 32723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32685,
											"end": 32724,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32464,
											"end": 32731,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 26101,
											"end": 26111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 26090,
											"end": 26095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32097,
											"end": 32098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32082,
											"end": 32094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32082,
											"end": 32098,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 32074,
											"end": 32116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32135,
											"end": 32146,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32135,
											"end": 32161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32135,
											"end": 32161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32135,
											"end": 32161,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32135,
											"end": 32161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "PUSH",
											"source": 0,
											"value": "1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F"
										},
										{
											"begin": 32191,
											"end": 32203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32177,
											"end": 32204,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32211,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30058,
											"end": 30065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30058,
											"end": 30069,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 30050,
											"end": 30105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30153,
											"end": 30160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30128,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30123,
											"end": 30128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30123,
											"end": 30128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30128,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30123,
											"end": 30128,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30128,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30123,
											"end": 30128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30123,
											"end": 30138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30138,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 30139,
											"end": 30149,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 30123,
											"end": 30150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 30160,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30115,
											"end": 30178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30226,
											"end": 30230,
											"name": "PUSH",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30196,
											"end": 30203,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30204,
											"end": 30214,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30196,
											"end": 30215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30222,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30196,
											"end": 30222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30196,
											"end": 30230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 30188,
											"end": 30256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30275,
											"end": 30289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 30275,
											"end": 30287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 30275,
											"end": 30289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30275,
											"end": 30289,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 30275,
											"end": 30289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30299,
											"end": 30320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30323,
											"end": 30330,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30331,
											"end": 30341,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30323,
											"end": 30342,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30299,
											"end": 30342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30299,
											"end": 30342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 30375,
											"end": 30385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30395,
											"end": 30399,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30409,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30357,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30352,
											"end": 30357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30352,
											"end": 30357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30357,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30357,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30352,
											"end": 30357,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30357,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30352,
											"end": 30357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30352,
											"end": 30374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 30352,
											"end": 30374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30410,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30352,
											"end": 30410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30410,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30352,
											"end": 30410,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 30352,
											"end": 30410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30442,
											"end": 30474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 30466,
											"end": 30473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30442,
											"end": 30448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30442,
											"end": 30461,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30442,
											"end": 30461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30442,
											"end": 30461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30442,
											"end": 30465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 30442,
											"end": 30465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30442,
											"end": 30474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30442,
											"end": 30474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30442,
											"end": 30474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30442,
											"end": 30474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30442,
											"end": 30474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30442,
											"end": 30474,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 30442,
											"end": 30474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30420,
											"end": 30426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30420,
											"end": 30439,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30420,
											"end": 30439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30420,
											"end": 30474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30420,
											"end": 30474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30420,
											"end": 30474,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30420,
											"end": 30474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 30514,
											"end": 30521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30509,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30498,
											"end": 30509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 30498,
											"end": 30513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 30498,
											"end": 30522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30484,
											"end": 30495,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30484,
											"end": 30522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30484,
											"end": 30522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30484,
											"end": 30522,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30484,
											"end": 30522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "PUSH",
											"source": 0,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 30553,
											"end": 30563,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30565,
											"end": 30572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30546,
											"end": 30573,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 30031,
											"end": 30580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29993,
											"end": 30580,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26101,
											"end": 26111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 26090,
											"end": 26095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 26090,
											"end": 26097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26090,
											"end": 26113,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 26082,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26868,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26848,
											"end": 26870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26848,
											"end": 26870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26848,
											"end": 26870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26870,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26870,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 26840,
											"end": 26913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26923,
											"end": 26951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 26942,
											"end": 26950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26923,
											"end": 26941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 26923,
											"end": 26951,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26923,
											"end": 26951,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 26923,
											"end": 26951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26760,
											"end": 26958,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33971,
											"end": 33978,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33979,
											"end": 33989,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33971,
											"end": 33990,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 34010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33971,
											"end": 34010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 34010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33964,
											"end": 34010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33964,
											"end": 34010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33900,
											"end": 34017,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28119,
											"end": 28138,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29050,
											"end": 29422,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 29050,
											"end": 29422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29100,
											"end": 29121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29124,
											"end": 29131,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29132,
											"end": 29142,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29124,
											"end": 29143,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29100,
											"end": 29143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29100,
											"end": 29143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29153,
											"end": 29170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29173,
											"end": 29281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 29277,
											"end": 29280,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 29173,
											"end": 29272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 29260,
											"end": 29271,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29260,
											"end": 29271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 29197,
											"end": 29254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 29249,
											"end": 29253,
											"name": "PUSH",
											"source": 0,
											"value": "21C0"
										},
										{
											"begin": 29197,
											"end": 29244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 29214,
											"end": 29220,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 29214,
											"end": 29243,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29214,
											"end": 29243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29214,
											"end": 29243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29209,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 29197,
											"end": 29213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29197,
											"end": 29244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29197,
											"end": 29244,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 29197,
											"end": 29244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 29197,
											"end": 29248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29197,
											"end": 29254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29197,
											"end": 29254,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 29197,
											"end": 29254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29179,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29192,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29173,
											"end": 29192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 29173,
											"end": 29196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29173,
											"end": 29255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29173,
											"end": 29255,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 29173,
											"end": 29255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 29173,
											"end": 29259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29173,
											"end": 29272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29173,
											"end": 29272,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 29173,
											"end": 29272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 29173,
											"end": 29276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29281,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29173,
											"end": 29281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29173,
											"end": 29281,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 29173,
											"end": 29281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29153,
											"end": 29281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29153,
											"end": 29281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29320,
											"end": 29361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 29351,
											"end": 29360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29320,
											"end": 29326,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29320,
											"end": 29346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29320,
											"end": 29346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29320,
											"end": 29346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29320,
											"end": 29350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29320,
											"end": 29350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29320,
											"end": 29361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29320,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29320,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29320,
											"end": 29361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29320,
											"end": 29361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29320,
											"end": 29361,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 29320,
											"end": 29361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29291,
											"end": 29317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29403,
											"end": 29415,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 29371,
											"end": 29377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29371,
											"end": 29400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29371,
											"end": 29400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29371,
											"end": 29415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29371,
											"end": 29415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29371,
											"end": 29415,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29371,
											"end": 29415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29081,
											"end": 29422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29050,
											"end": 29422,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14446,
											"end": 14542,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14446,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14504,
											"end": 14511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14534,
											"end": 14535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 14530,
											"end": 14535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 14530,
											"end": 14535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14530,
											"end": 14535,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 14530,
											"end": 14535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14523,
											"end": 14535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14523,
											"end": 14535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14446,
											"end": 14542,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14446,
											"end": 14542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14446,
											"end": 14542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14446,
											"end": 14542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14446,
											"end": 14542,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15174,
											"end": 15270,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15174,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15232,
											"end": 15239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15262,
											"end": 15263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15258,
											"end": 15259,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15258,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 15258,
											"end": 15263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15258,
											"end": 15263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15258,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 15258,
											"end": 15263,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15258,
											"end": 15263,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 15258,
											"end": 15263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15251,
											"end": 15263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15251,
											"end": 15263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15270,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15270,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14079,
											"end": 14175,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14079,
											"end": 14175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14167,
											"end": 14168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14163,
											"end": 14164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14163,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 14163,
											"end": 14168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14163,
											"end": 14168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14163,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 14163,
											"end": 14168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14163,
											"end": 14168,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 14163,
											"end": 14168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14156,
											"end": 14168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14156,
											"end": 14168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14079,
											"end": 14175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14079,
											"end": 14175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14079,
											"end": 14175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14079,
											"end": 14175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14079,
											"end": 14175,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14789,
											"end": 14885,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14789,
											"end": 14885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14847,
											"end": 14854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 14878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14873,
											"end": 14874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14873,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 14873,
											"end": 14878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14873,
											"end": 14878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14873,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 14873,
											"end": 14878,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14873,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 14873,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14789,
											"end": 14885,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14789,
											"end": 14885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14789,
											"end": 14885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14789,
											"end": 14885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14789,
											"end": 14885,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18231,
											"end": 18406,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 18231,
											"end": 18406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18313,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 18333,
											"end": 18338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18363,
											"end": 18386,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 18363,
											"end": 18386,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18363,
											"end": 18386,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18388,
											"end": 18390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18397,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18313,
											"end": 18332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 18313,
											"end": 18399,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18313,
											"end": 18399,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 18313,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18231,
											"end": 18406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18231,
											"end": 18406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18231,
											"end": 18406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18231,
											"end": 18406,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24669,
											"end": 24765,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 24669,
											"end": 24765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24722,
											"end": 24729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24748,
											"end": 24758,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24765,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27112,
											"end": 27299,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 27112,
											"end": 27299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27204,
											"end": 27210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27204,
											"end": 27210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27204,
											"end": 27210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27204,
											"end": 27210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27204,
											"end": 27210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27204,
											"end": 27210,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27204,
											"end": 27210,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27204,
											"end": 27210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27204,
											"end": 27210,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27204,
											"end": 27210,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27204,
											"end": 27210,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27229,
											"end": 27237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27220,
											"end": 27226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27283,
											"end": 27291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27273,
											"end": 27281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27252,
											"end": 27292,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 27175,
											"end": 27299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27112,
											"end": 27299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27112,
											"end": 27299,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18412,
											"end": 18615,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 18412,
											"end": 18615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 18532,
											"end": 18537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18591,
											"end": 18595,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18597,
											"end": 18599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18601,
											"end": 18606,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18539,
											"end": 18607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 18512,
											"end": 18608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18512,
											"end": 18608,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 18512,
											"end": 18608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18412,
											"end": 18615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18412,
											"end": 18615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18412,
											"end": 18615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18412,
											"end": 18615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18412,
											"end": 18615,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20498,
											"end": 21257,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 20498,
											"end": 21257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20925,
											"end": 20948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 20979,
											"end": 20983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "PUSH",
											"source": 0,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20959,
											"end": 20964,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 20978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20951,
											"end": 20978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 20978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 20951,
											"end": 20978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 20951,
											"end": 21020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20925,
											"end": 21020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20925,
											"end": 21020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21054,
											"end": 21055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21034,
											"end": 21044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21034,
											"end": 21051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21034,
											"end": 21055,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21030,
											"end": 21251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21030,
											"end": 21251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 21030,
											"end": 21251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21174,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 21163,
											"end": 21193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 21155,
											"end": 21240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21030,
											"end": 21251,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 21030,
											"end": 21251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20568,
											"end": 21257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 21257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 21257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 21257,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6938,
											"end": 7161,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 6938,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7071,
											"end": 7083,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7102,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 7124,
											"end": 7130,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7132,
											"end": 7136,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7153,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 7102,
											"end": 7154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7102,
											"end": 7154,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 7102,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7161,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7161,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8025,
											"end": 8524,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 8025,
											"end": 8524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8190,
											"end": 8202,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8247,
											"end": 8252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 8222,
											"end": 8252,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8222,
											"end": 8252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 8214,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 8324,
											"end": 8330,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 8305,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8391,
											"end": 8414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8424,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8429,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8418,
											"end": 8429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8437,
											"end": 8442,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8444,
											"end": 8448,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 8483,
											"end": 8490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8492,
											"end": 8502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8516,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 8466,
											"end": 8517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8466,
											"end": 8517,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 8466,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8517,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8025,
											"end": 8524,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8025,
											"end": 8524,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8025,
											"end": 8524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8025,
											"end": 8524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8025,
											"end": 8524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8025,
											"end": 8524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8025,
											"end": 8524,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4252,
											"end": 4572,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 4252,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4542,
											"end": 4561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4561,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4565,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10638,
											"end": 11330,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 10638,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10796,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10812,
											"end": 10819,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 11324,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 10808,
											"end": 11324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10842,
											"end": 10852,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 10835,
											"end": 10852,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 11324,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 10808,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10953,
											"end": 10963,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 10970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 10974,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10949,
											"end": 11314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10949,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 10949,
											"end": 11314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11147,
											"end": 11157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11141,
											"end": 11158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11207,
											"end": 11222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11190,
											"end": 11192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11186,
											"end": 11205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11223,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10949,
											"end": 11314,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 10949,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11299,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 11330,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 10638,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 11330,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 11330,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 11330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 11330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 11330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 11330,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2277,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 2838,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2885,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3264,
											"end": 3269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3348,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3441,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 3712,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3707,
											"end": 3710,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4079,
											"end": 4082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4185,
											"end": 4188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4205,
											"end": 4217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 4451,
											"end": 4454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 4557,
											"end": 4560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 4828,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4823,
											"end": 4826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 4956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5195,
											"end": 5198,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5321,
											"end": 5333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 5572,
											"end": 5574,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 5567,
											"end": 5570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 5673,
											"end": 5676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5704,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5697,
											"end": 5700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 5944,
											"end": 5946,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5939,
											"end": 5942,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6231,
											"end": 6234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 6417,
											"end": 6420,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6448,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6441,
											"end": 6444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6683,
											"end": 6686,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6818,
											"end": 6820,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6813,
											"end": 6816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6975,
											"end": 6978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 7055,
											"end": 7058,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 7161,
											"end": 7164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7190,
											"end": 7192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 7432,
											"end": 7434,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7557,
											"end": 7560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 7799,
											"end": 7802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 7905,
											"end": 7908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8091,
											"end": 8094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 8277,
											"end": 8280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8297,
											"end": 8309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 8548,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 8543,
											"end": 8546,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 8649,
											"end": 8652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8680,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8673,
											"end": 8676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8669,
											"end": 8681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 8920,
											"end": 8922,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 8915,
											"end": 8918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8923,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 9021,
											"end": 9024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9050,
											"end": 9052,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9041,
											"end": 9053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9034,
											"end": 9053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9034,
											"end": 9053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9065,
											"end": 9183,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 9065,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9152,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 9170,
											"end": 9175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9152,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 9152,
											"end": 9176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9152,
											"end": 9176,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 9152,
											"end": 9176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9177,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9065,
											"end": 9183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9065,
											"end": 9183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9065,
											"end": 9183,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9319,
											"end": 9322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9341,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 9430,
											"end": 9433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9341,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 9341,
											"end": 9434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9341,
											"end": 9434,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 9341,
											"end": 9434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9334,
											"end": 9434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9334,
											"end": 9434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9451,
											"end": 9454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9599,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9582,
											"end": 9600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9574,
											"end": 9600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9574,
											"end": 9600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9610,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 9678,
											"end": 9679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9667,
											"end": 9676,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9663,
											"end": 9680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9610,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 9610,
											"end": 9681,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9610,
											"end": 9681,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 9610,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 9847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9881,
											"end": 9883,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9870,
											"end": 9879,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9858,
											"end": 9884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9858,
											"end": 9884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9894,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 9962,
											"end": 9963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9951,
											"end": 9960,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9947,
											"end": 9964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9938,
											"end": 9944,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9894,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 9894,
											"end": 9965,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9894,
											"end": 9965,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 9894,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 10043,
											"end": 10045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10025,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 10125,
											"end": 10127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10114,
											"end": 10123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10107,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10057,
											"end": 10129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10057,
											"end": 10129,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 10057,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10263,
											"end": 10267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10301,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10290,
											"end": 10299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10314,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 10382,
											"end": 10383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10380,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10358,
											"end": 10364,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10314,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 10314,
											"end": 10385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10314,
											"end": 10385,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 10314,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10395,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 10463,
											"end": 10465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10452,
											"end": 10461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10439,
											"end": 10445,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10395,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10395,
											"end": 10467,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10395,
											"end": 10467,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 10395,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10587,
											"end": 10591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10625,
											"end": 10627,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10614,
											"end": 10623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10610,
											"end": 10628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10638,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10709,
											"end": 10718,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10696,
											"end": 10702,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10638,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 10638,
											"end": 10723,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10638,
											"end": 10723,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 10638,
											"end": 10723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10887,
											"end": 10889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10872,
											"end": 10890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10864,
											"end": 10890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10864,
											"end": 10890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10930,
											"end": 10934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10922,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10911,
											"end": 10920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10907,
											"end": 10924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 11037,
											"end": 11041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11028,
											"end": 11034,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 10964,
											"end": 11042,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10964,
											"end": 11042,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 10964,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11221,
											"end": 11225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11259,
											"end": 11261,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11248,
											"end": 11257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11236,
											"end": 11262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11236,
											"end": 11262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11302,
											"end": 11306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11298,
											"end": 11318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11294,
											"end": 11295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11272,
											"end": 11319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 11462,
											"end": 11466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 11336,
											"end": 11467,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11336,
											"end": 11467,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 11336,
											"end": 11467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11328,
											"end": 11467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11328,
											"end": 11467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11646,
											"end": 11650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11684,
											"end": 11686,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11669,
											"end": 11687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11661,
											"end": 11687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11661,
											"end": 11687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11727,
											"end": 11731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11723,
											"end": 11743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11719,
											"end": 11720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11708,
											"end": 11717,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11704,
											"end": 11721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11697,
											"end": 11744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 11887,
											"end": 11891,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 11761,
											"end": 11892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11761,
											"end": 11892,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 11761,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11753,
											"end": 11892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11753,
											"end": 11892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12071,
											"end": 12075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12109,
											"end": 12111,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12098,
											"end": 12107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12094,
											"end": 12112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12158,
											"end": 12167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12152,
											"end": 12156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12148,
											"end": 12168,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12144,
											"end": 12145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12142,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12129,
											"end": 12146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12122,
											"end": 12169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12186,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 12312,
											"end": 12316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12186,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 12186,
											"end": 12317,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12186,
											"end": 12317,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 12186,
											"end": 12317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12178,
											"end": 12317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12178,
											"end": 12317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12496,
											"end": 12500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12534,
											"end": 12536,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12523,
											"end": 12532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12519,
											"end": 12537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12577,
											"end": 12581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12573,
											"end": 12593,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12569,
											"end": 12570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12558,
											"end": 12567,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12554,
											"end": 12571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12547,
											"end": 12594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 12737,
											"end": 12741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12603,
											"end": 12742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12603,
											"end": 12742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12921,
											"end": 12925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12959,
											"end": 12961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12948,
											"end": 12957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12944,
											"end": 12962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12936,
											"end": 12962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12936,
											"end": 12962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13002,
											"end": 13006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12998,
											"end": 13018,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12994,
											"end": 12995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12983,
											"end": 12992,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12979,
											"end": 12996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12972,
											"end": 13019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13036,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 13162,
											"end": 13166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13036,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 13036,
											"end": 13167,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13036,
											"end": 13167,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 13036,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13028,
											"end": 13167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13028,
											"end": 13167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13384,
											"end": 13386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13373,
											"end": 13382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13369,
											"end": 13387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13361,
											"end": 13387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13361,
											"end": 13387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13433,
											"end": 13442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13423,
											"end": 13443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13419,
											"end": 13420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13408,
											"end": 13417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13404,
											"end": 13421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13397,
											"end": 13444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 13587,
											"end": 13591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13771,
											"end": 13775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13809,
											"end": 13811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13798,
											"end": 13807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13794,
											"end": 13812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13786,
											"end": 13812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13786,
											"end": 13812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13858,
											"end": 13867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13852,
											"end": 13856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13844,
											"end": 13845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13833,
											"end": 13842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13829,
											"end": 13846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 14017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 14012,
											"end": 14016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13886,
											"end": 14017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 13886,
											"end": 14017,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13886,
											"end": 14017,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 13886,
											"end": 14017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13878,
											"end": 14017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13878,
											"end": 14017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14196,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14234,
											"end": 14236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14223,
											"end": 14232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14211,
											"end": 14237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14211,
											"end": 14237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14283,
											"end": 14292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14277,
											"end": 14281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14293,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14269,
											"end": 14270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14267,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14254,
											"end": 14271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14311,
											"end": 14442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 14437,
											"end": 14441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14311,
											"end": 14442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 14311,
											"end": 14442,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14311,
											"end": 14442,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 14311,
											"end": 14442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14303,
											"end": 14442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14303,
											"end": 14442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14621,
											"end": 14625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14659,
											"end": 14661,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14648,
											"end": 14657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14644,
											"end": 14662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14636,
											"end": 14662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14636,
											"end": 14662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14708,
											"end": 14717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14702,
											"end": 14706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14698,
											"end": 14718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14694,
											"end": 14695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14683,
											"end": 14692,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14679,
											"end": 14696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14672,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 14862,
											"end": 14866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14728,
											"end": 14867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14728,
											"end": 14867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15084,
											"end": 15086,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15073,
											"end": 15082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15069,
											"end": 15087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15061,
											"end": 15087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15061,
											"end": 15087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15127,
											"end": 15131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15119,
											"end": 15120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15108,
											"end": 15117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15104,
											"end": 15121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15097,
											"end": 15144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15161,
											"end": 15292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 15287,
											"end": 15291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15161,
											"end": 15292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 15161,
											"end": 15292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15161,
											"end": 15292,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 15161,
											"end": 15292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15153,
											"end": 15292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15153,
											"end": 15292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15471,
											"end": 15475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15509,
											"end": 15511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15498,
											"end": 15507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15494,
											"end": 15512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15486,
											"end": 15512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15486,
											"end": 15512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15552,
											"end": 15556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15548,
											"end": 15568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15544,
											"end": 15545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15533,
											"end": 15542,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15529,
											"end": 15546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15522,
											"end": 15569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15586,
											"end": 15717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 15712,
											"end": 15716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15586,
											"end": 15717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 15586,
											"end": 15717,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15586,
											"end": 15717,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 15586,
											"end": 15717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15578,
											"end": 15717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15578,
											"end": 15717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15896,
											"end": 15900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15934,
											"end": 15936,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15923,
											"end": 15932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15919,
											"end": 15937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15911,
											"end": 15937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15911,
											"end": 15937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15983,
											"end": 15992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15977,
											"end": 15981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15973,
											"end": 15993,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 15970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15958,
											"end": 15967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15954,
											"end": 15971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 15994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16011,
											"end": 16142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 16137,
											"end": 16141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16011,
											"end": 16142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 16011,
											"end": 16142,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16011,
											"end": 16142,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 16011,
											"end": 16142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16003,
											"end": 16142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16003,
											"end": 16142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16321,
											"end": 16325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16359,
											"end": 16361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16348,
											"end": 16357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16344,
											"end": 16362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16336,
											"end": 16362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16336,
											"end": 16362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16408,
											"end": 16417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16402,
											"end": 16406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16398,
											"end": 16418,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16383,
											"end": 16392,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16379,
											"end": 16396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16372,
											"end": 16419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16436,
											"end": 16567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 16562,
											"end": 16566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16436,
											"end": 16567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 16436,
											"end": 16567,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16436,
											"end": 16567,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 16436,
											"end": 16567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16428,
											"end": 16567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16428,
											"end": 16567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16746,
											"end": 16750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16784,
											"end": 16786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16773,
											"end": 16782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16769,
											"end": 16787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16761,
											"end": 16787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16761,
											"end": 16787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16833,
											"end": 16842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16827,
											"end": 16831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16823,
											"end": 16843,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16819,
											"end": 16820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16808,
											"end": 16817,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16804,
											"end": 16821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16797,
											"end": 16844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16861,
											"end": 16992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 16987,
											"end": 16991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16861,
											"end": 16992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 16861,
											"end": 16992,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16861,
											"end": 16992,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 16861,
											"end": 16992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17171,
											"end": 17175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17209,
											"end": 17211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17198,
											"end": 17207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17194,
											"end": 17212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17258,
											"end": 17267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17252,
											"end": 17256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17248,
											"end": 17268,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17244,
											"end": 17245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17233,
											"end": 17242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17229,
											"end": 17246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17222,
											"end": 17269,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17286,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 17412,
											"end": 17416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17286,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 17286,
											"end": 17417,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17286,
											"end": 17417,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 17286,
											"end": 17417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17278,
											"end": 17417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17278,
											"end": 17417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17523,
											"end": 17527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17561,
											"end": 17563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17550,
											"end": 17559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17546,
											"end": 17564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17538,
											"end": 17564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17538,
											"end": 17564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17574,
											"end": 17645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 17642,
											"end": 17643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17631,
											"end": 17640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17627,
											"end": 17644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17618,
											"end": 17624,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17574,
											"end": 17645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 17574,
											"end": 17645,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17574,
											"end": 17645,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 17574,
											"end": 17645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17790,
											"end": 17796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17824,
											"end": 17829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17818,
											"end": 17830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17808,
											"end": 17830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17808,
											"end": 17830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17929,
											"end": 17934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17913,
											"end": 17935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17913,
											"end": 17935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18049,
											"end": 18060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18086,
											"end": 18089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18185,
											"end": 18196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18219,
											"end": 18225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18207,
											"end": 18226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18259,
											"end": 18263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18254,
											"end": 18257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18250,
											"end": 18264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18235,
											"end": 18264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18235,
											"end": 18264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18316,
											"end": 18319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18335,
											"end": 18355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 18353,
											"end": 18354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18335,
											"end": 18355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 18335,
											"end": 18355,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18335,
											"end": 18355,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 18335,
											"end": 18355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18330,
											"end": 18355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18330,
											"end": 18355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 18387,
											"end": 18388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 18369,
											"end": 18389,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18369,
											"end": 18389,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 18369,
											"end": 18389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18389,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18523,
											"end": 18524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18455,
											"end": 18521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18451,
											"end": 18525,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18448,
											"end": 18449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18445,
											"end": 18526,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18442,
											"end": 18549,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18442,
											"end": 18549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 18442,
											"end": 18549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18442,
											"end": 18549,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 18442,
											"end": 18549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18573,
											"end": 18574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18570,
											"end": 18571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18566,
											"end": 18575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18559,
											"end": 18575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18559,
											"end": 18575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18627,
											"end": 18628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18644,
											"end": 18664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 18662,
											"end": 18663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18644,
											"end": 18664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 18644,
											"end": 18664,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18644,
											"end": 18664,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 18644,
											"end": 18664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18639,
											"end": 18664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18639,
											"end": 18664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18678,
											"end": 18698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 18696,
											"end": 18697,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18678,
											"end": 18698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 18678,
											"end": 18698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18678,
											"end": 18698,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 18678,
											"end": 18698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18673,
											"end": 18698,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18673,
											"end": 18698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18717,
											"end": 18718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18707,
											"end": 18742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 18707,
											"end": 18742,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18707,
											"end": 18742,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 18707,
											"end": 18742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18764,
											"end": 18765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18761,
											"end": 18762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18757,
											"end": 18766,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18752,
											"end": 18766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18752,
											"end": 18766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18818,
											"end": 18825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 18859,
											"end": 18860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18836,
											"end": 18861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18836,
											"end": 18861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18875,
											"end": 18895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 18893,
											"end": 18894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18875,
											"end": 18895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 18875,
											"end": 18895,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18875,
											"end": 18895,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 18875,
											"end": 18895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18870,
											"end": 18895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18870,
											"end": 18895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19063,
											"end": 19064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18995,
											"end": 19061,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18991,
											"end": 19065,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18988,
											"end": 18989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18985,
											"end": 19066,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18980,
											"end": 18981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18973,
											"end": 18982,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 18983,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18962,
											"end": 19067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18959,
											"end": 19090,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18959,
											"end": 19090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 18959,
											"end": 19090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19070,
											"end": 19088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 19070,
											"end": 19088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 19070,
											"end": 19088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19070,
											"end": 19088,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 19070,
											"end": 19088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18959,
											"end": 19090,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 18959,
											"end": 19090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19118,
											"end": 19119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19115,
											"end": 19116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19111,
											"end": 19120,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 19100,
											"end": 19120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19100,
											"end": 19120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19172,
											"end": 19176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19192,
											"end": 19212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 19210,
											"end": 19211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19192,
											"end": 19212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 19192,
											"end": 19212,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19192,
											"end": 19212,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 19192,
											"end": 19212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19187,
											"end": 19212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19187,
											"end": 19212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 19244,
											"end": 19245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19221,
											"end": 19246,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19221,
											"end": 19246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19265,
											"end": 19266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19262,
											"end": 19263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19259,
											"end": 19267,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19290,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 19256,
											"end": 19290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19290,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 19256,
											"end": 19290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19315,
											"end": 19316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19312,
											"end": 19313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19308,
											"end": 19317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19300,
											"end": 19317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19300,
											"end": 19317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19366,
											"end": 19373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19395,
											"end": 19419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 19413,
											"end": 19418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19395,
											"end": 19419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 19395,
											"end": 19419,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19395,
											"end": 19419,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 19395,
											"end": 19419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19384,
											"end": 19419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19384,
											"end": 19419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19465,
											"end": 19472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19508,
											"end": 19513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19501,
											"end": 19514,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19494,
											"end": 19515,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19483,
											"end": 19515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19483,
											"end": 19515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19564,
											"end": 19571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19604,
											"end": 19646,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19597,
											"end": 19602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19593,
											"end": 19647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19582,
											"end": 19647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19582,
											"end": 19647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19696,
											"end": 19703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19725,
											"end": 19730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19714,
											"end": 19730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19714,
											"end": 19730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19806,
											"end": 19815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19839,
											"end": 19876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 19870,
											"end": 19875,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19839,
											"end": 19876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 19839,
											"end": 19876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19839,
											"end": 19876,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 19839,
											"end": 19876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19938,
											"end": 19947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19971,
											"end": 20008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 20002,
											"end": 20007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19971,
											"end": 20008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 19971,
											"end": 20008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19971,
											"end": 20008,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 19971,
											"end": 20008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 20008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 20008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20070,
											"end": 20079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20103,
											"end": 20127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 20121,
											"end": 20126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20103,
											"end": 20127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 20103,
											"end": 20127,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20103,
											"end": 20127,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 20103,
											"end": 20127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20090,
											"end": 20127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20090,
											"end": 20127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20207,
											"end": 20208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20231,
											"end": 20237,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20228,
											"end": 20229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20225,
											"end": 20238,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20316,
											"end": 20317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20311,
											"end": 20314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20307,
											"end": 20318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20301,
											"end": 20319,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20297,
											"end": 20298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20292,
											"end": 20295,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20288,
											"end": 20299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20281,
											"end": 20320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20253,
											"end": 20255,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20250,
											"end": 20251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20246,
											"end": 20256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20241,
											"end": 20256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20241,
											"end": 20256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20348,
											"end": 20354,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20345,
											"end": 20346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20342,
											"end": 20355,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20339,
											"end": 20440,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20339,
											"end": 20440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 20339,
											"end": 20440,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20428,
											"end": 20429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20419,
											"end": 20425,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20414,
											"end": 20417,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20410,
											"end": 20426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20403,
											"end": 20430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20339,
											"end": 20440,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 20339,
											"end": 20440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20188,
											"end": 20446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20484,
											"end": 20485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20501,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 20519,
											"end": 20520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20501,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 20501,
											"end": 20521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20501,
											"end": 20521,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 20501,
											"end": 20521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20496,
											"end": 20521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20496,
											"end": 20521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20535,
											"end": 20555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 20553,
											"end": 20554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20535,
											"end": 20555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 20535,
											"end": 20555,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20535,
											"end": 20555,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 20535,
											"end": 20555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20530,
											"end": 20555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20530,
											"end": 20555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20574,
											"end": 20575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20564,
											"end": 20599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 20564,
											"end": 20599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20579,
											"end": 20597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 20579,
											"end": 20597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 20579,
											"end": 20597,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20579,
											"end": 20597,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 20579,
											"end": 20597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20564,
											"end": 20599,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 20564,
											"end": 20599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20620,
											"end": 20621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20617,
											"end": 20618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20613,
											"end": 20622,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20634,
											"end": 20814,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 20634,
											"end": 20814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20682,
											"end": 20759,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20679,
											"end": 20680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20672,
											"end": 20760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20779,
											"end": 20783,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 20776,
											"end": 20777,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20769,
											"end": 20784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20803,
											"end": 20807,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20800,
											"end": 20801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20793,
											"end": 20808,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20820,
											"end": 21000,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 20820,
											"end": 21000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20868,
											"end": 20945,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20865,
											"end": 20866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20858,
											"end": 20946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20965,
											"end": 20969,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 20962,
											"end": 20963,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20955,
											"end": 20970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20989,
											"end": 20993,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20986,
											"end": 20987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20979,
											"end": 20994,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21129,
											"end": 21246,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 21129,
											"end": 21246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21238,
											"end": 21239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21235,
											"end": 21236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21228,
											"end": 21240,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21293,
											"end": 21299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21344,
											"end": 21346,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 21340,
											"end": 21347,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 21335,
											"end": 21337,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 21328,
											"end": 21333,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21324,
											"end": 21338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21320,
											"end": 21348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21310,
											"end": 21348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21310,
											"end": 21348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21360,
											"end": 21526,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 21360,
											"end": 21526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21500,
											"end": 21518,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 21496,
											"end": 21497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21488,
											"end": 21494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21484,
											"end": 21498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21477,
											"end": 21519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21360,
											"end": 21526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21360,
											"end": 21526,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21532,
											"end": 21703,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 21532,
											"end": 21703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21672,
											"end": 21695,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F723A20696E76616C6964207374616B65720000000000000000000000"
										},
										{
											"begin": 21668,
											"end": 21669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21660,
											"end": 21666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21656,
											"end": 21670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21649,
											"end": 21696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21532,
											"end": 21703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21532,
											"end": 21703,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21709,
											"end": 21938,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 21709,
											"end": 21938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21849,
											"end": 21883,
											"name": "PUSH",
											"source": 1,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 21845,
											"end": 21846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21837,
											"end": 21843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21833,
											"end": 21847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21826,
											"end": 21884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21918,
											"end": 21930,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 21913,
											"end": 21915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21905,
											"end": 21911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21901,
											"end": 21916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21894,
											"end": 21931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21709,
											"end": 21938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21709,
											"end": 21938,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21944,
											"end": 22169,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 21944,
											"end": 22169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22084,
											"end": 22118,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 22080,
											"end": 22081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22072,
											"end": 22078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22068,
											"end": 22082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22061,
											"end": 22119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22153,
											"end": 22161,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22148,
											"end": 22150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22140,
											"end": 22146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22136,
											"end": 22151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22129,
											"end": 22162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21944,
											"end": 22169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21944,
											"end": 22169,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22175,
											"end": 22339,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 22175,
											"end": 22339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22315,
											"end": 22331,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 22311,
											"end": 22312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22303,
											"end": 22309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22299,
											"end": 22313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22292,
											"end": 22332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22175,
											"end": 22339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22175,
											"end": 22339,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22345,
											"end": 22510,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 22345,
											"end": 22510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22485,
											"end": 22502,
											"name": "PUSH",
											"source": 1,
											"value": "416C726561647920737461727465640000000000000000000000000000000000"
										},
										{
											"begin": 22481,
											"end": 22482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22473,
											"end": 22479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22469,
											"end": 22483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22462,
											"end": 22503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22345,
											"end": 22510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22345,
											"end": 22510,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22516,
											"end": 22741,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 22516,
											"end": 22741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22656,
											"end": 22690,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 22652,
											"end": 22653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22644,
											"end": 22650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22640,
											"end": 22654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22633,
											"end": 22691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22725,
											"end": 22733,
											"name": "PUSH",
											"source": 1,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22720,
											"end": 22722,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22712,
											"end": 22718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22708,
											"end": 22723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22701,
											"end": 22734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22516,
											"end": 22741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22516,
											"end": 22741,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22747,
											"end": 22928,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 22747,
											"end": 22928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22887,
											"end": 22920,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 22883,
											"end": 22884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 22881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22871,
											"end": 22885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22864,
											"end": 22921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22747,
											"end": 22928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22747,
											"end": 22928,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22934,
											"end": 23116,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 22934,
											"end": 23116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23074,
											"end": 23108,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23070,
											"end": 23071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23062,
											"end": 23068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23058,
											"end": 23072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23051,
											"end": 23109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22934,
											"end": 23116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22934,
											"end": 23116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23122,
											"end": 23285,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 23122,
											"end": 23285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23262,
											"end": 23277,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C69642076616C756500000000000000000000000000000000000000"
										},
										{
											"begin": 23258,
											"end": 23259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23250,
											"end": 23256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23246,
											"end": 23260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23239,
											"end": 23278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23291,
											"end": 23470,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 23291,
											"end": 23470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23431,
											"end": 23462,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 23427,
											"end": 23428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23419,
											"end": 23425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23415,
											"end": 23429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23408,
											"end": 23463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23291,
											"end": 23470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23291,
											"end": 23470,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23476,
											"end": 23652,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 23476,
											"end": 23652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23616,
											"end": 23644,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C696420556E7374616B696E67204665652052617465000000000000"
										},
										{
											"begin": 23612,
											"end": 23613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23604,
											"end": 23610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23600,
											"end": 23614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23593,
											"end": 23645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23476,
											"end": 23652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23476,
											"end": 23652,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23658,
											"end": 23831,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 23658,
											"end": 23831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23798,
											"end": 23823,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C6964204C6F636B7570204475726174696F6E000000000000000000"
										},
										{
											"begin": 23794,
											"end": 23795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23786,
											"end": 23792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23782,
											"end": 23796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23775,
											"end": 23824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23658,
											"end": 23831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23658,
											"end": 23831,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23837,
											"end": 24000,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 23837,
											"end": 24000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23977,
											"end": 23992,
											"name": "PUSH",
											"source": 1,
											"value": "43616E2774206265207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 23973,
											"end": 23974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23965,
											"end": 23971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23961,
											"end": 23975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23954,
											"end": 23993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23837,
											"end": 24000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23837,
											"end": 24000,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24006,
											"end": 24169,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 24006,
											"end": 24169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24146,
											"end": 24161,
											"name": "PUSH",
											"source": 1,
											"value": "496E73756666696369656E742100000000000000000000000000000000000000"
										},
										{
											"begin": 24142,
											"end": 24143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24134,
											"end": 24140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24130,
											"end": 24144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24123,
											"end": 24162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24006,
											"end": 24169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24006,
											"end": 24169,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24175,
											"end": 24297,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 24175,
											"end": 24297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24248,
											"end": 24272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 24266,
											"end": 24271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24248,
											"end": 24272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 24248,
											"end": 24272,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24248,
											"end": 24272,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 24248,
											"end": 24272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24241,
											"end": 24246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24238,
											"end": 24273,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 24228,
											"end": 24291,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24287,
											"end": 24288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24284,
											"end": 24285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24277,
											"end": 24289,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24291,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 24228,
											"end": 24291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24175,
											"end": 24297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24175,
											"end": 24297,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24303,
											"end": 24419,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 24303,
											"end": 24419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24373,
											"end": 24394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 24388,
											"end": 24393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24373,
											"end": 24394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 24373,
											"end": 24394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24373,
											"end": 24394,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 24373,
											"end": 24394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24366,
											"end": 24371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24363,
											"end": 24395,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24353,
											"end": 24413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 24353,
											"end": 24413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24409,
											"end": 24410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24406,
											"end": 24407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24399,
											"end": 24411,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24353,
											"end": 24413,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 24353,
											"end": 24413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24303,
											"end": 24419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24303,
											"end": 24419,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24425,
											"end": 24547,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 24425,
											"end": 24547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 24516,
											"end": 24521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 24498,
											"end": 24522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24498,
											"end": 24522,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 24498,
											"end": 24522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24491,
											"end": 24496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24488,
											"end": 24523,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24478,
											"end": 24541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 24478,
											"end": 24541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24537,
											"end": 24538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24534,
											"end": 24535,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24527,
											"end": 24539,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24478,
											"end": 24541,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 24478,
											"end": 24541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24425,
											"end": 24547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24425,
											"end": 24547,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getNumberofStakers()": "5715ec11",
							"getRewardRate()": "7e1a3786",
							"getTotalStaked()": "0917e776",
							"harvest()": "4641257d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardAmount()": "f7b2a7be",
							"rewardToHarvest()": "5d2ec65d",
							"setEventPeriod(uint256)": "692642e7",
							"setLockupTime(uint256)": "4b62b70b",
							"setRewardRate(uint256)": "9e447fc6",
							"setUnstakingFeeRate(uint256)": "91e07e7a",
							"stake(uint256)": "a694fc3a",
							"stakedAmount()": "373d6132",
							"startStaking(uint256,uint256)": "4b77dd9e",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardToClaim\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupDuration\",\"type\":\"uint256\"}],\"name\":\"SetEventPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"SetRewardRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"SetUnstakingFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getNumberofStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__eventPeriod\",\"type\":\"uint256\"}],\"name\":\"setEventPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockupTime\",\"type\":\"uint256\"}],\"name\":\"setLockupTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"setUnstakingFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"startStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking_flat.sol\":\"StakingPlatform\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Staking_flat.sol\":{\"keccak256\":\"0x14c9c8bc6e0b3523c6998effa6f71da53a295fc82ed31250a77485410b8a2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3724a956fba97cc6114bab3e08cf2d0b0fb916787cfc034b447f78c428093c3a\",\"dweb:/ipfs/QmZHJvujFb8n2fSR5bQMqisx2uKhnQrSqxaiSCUTAEJm4w\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Staking_flat.sol": {
				"ast": {
					"absolutePath": "Staking_flat.sol",
					"exportedSymbols": {
						"Address": [
							393
						],
						"Context": [
							1012
						],
						"IBEP20": [
							100
						],
						"IERC20": [
							992
						],
						"Ownable": [
							1114
						],
						"SafeBEP20": [
							916
						],
						"SafeMath": [
							703
						],
						"StakingPlatform": [
							1824
						]
					},
					"id": 1825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IBEP20",
							"nameLocation": "68:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "81:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "161:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "172:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "198:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:9:0"
									},
									"scope": 100,
									"src": "152:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "213:51:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "278:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "312:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "312:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:7:0"
									},
									"scope": 100,
									"src": "269:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "325:49:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "388:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "420:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "420:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:15:0"
									},
									"scope": 100,
									"src": "379:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "441:47:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "502:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "506:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "532:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "532:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:15:0"
									},
									"scope": 100,
									"src": "493:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "553:52:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "619:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "627:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "653:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:9:0"
									},
									"scope": 100,
									"src": "610:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "668:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "754:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "772:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "764:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:17:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "804:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:9:0"
									},
									"scope": 100,
									"src": "745:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "819:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1042:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1059:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1051:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1078:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1070:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1104:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1104:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:6:0"
									},
									"scope": 100,
									"src": "1033:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1116:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1394:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1412:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1404:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1428:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1420:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:33:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1460:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:9:0"
									},
									"scope": 100,
									"src": "1385:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1475:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2131:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2147:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2139:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2164:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2156:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:33:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2190:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:6:0"
									},
									"scope": 100,
									"src": "2122:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2202:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2512:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2533:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2525:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2549:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2541:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2568:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2560:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:51:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2594:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2594:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2593:6:0"
									},
									"scope": 100,
									"src": "2503:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2606:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 90,
									"name": "Transfer",
									"nameLocation": "2775:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2800:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2784:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2822:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2806:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2834:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2826:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:57:0"
									},
									"src": "2769:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2847:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 99,
									"name": "Approval",
									"nameLocation": "3006:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3031:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3015:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3054:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3038:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3071:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3063:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3014:63:0"
									},
									"src": "3000:78:0"
								}
							],
							"scope": 1825,
							"src": "58:3022:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 101,
								"nodeType": "StructuredDocumentation",
								"src": "3203:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 393,
							"linearizedBaseContracts": [
								393
							],
							"name": "Address",
							"nameLocation": "3279:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "4318:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 109,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "4542:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4542:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4542:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4564:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4542:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 108,
												"id": 114,
												"nodeType": "Return",
												"src": "4535:30:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3293:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "4261:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4280:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4272:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4271:17:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4312:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4312:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4311:6:0"
									},
									"scope": 393,
									"src": "4252:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "5560:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5586:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$393",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$393",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5578:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5578:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5578:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5578:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "5603:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5578:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5611:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5570:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "5570:73:0"
											},
											{
												"assignments": [
													136,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5660:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "5655:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 135,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5655:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 143,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5703:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 137,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "5673:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5673:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 139,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "5695:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5673:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5673:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5654:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 145,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "5724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5716:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5716:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "5716:78:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "4578:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "5498:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5524:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5508:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5508:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5543:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5535:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5507:43:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5560:0:0"
									},
									"scope": 393,
									"src": "5489:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "6632:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "6662:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 162,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "6670:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6676:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 160,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															167,
															187
														],
														"referencedDeclaration": 187,
														"src": "6649:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6649:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 159,
												"id": 165,
												"nodeType": "Return",
												"src": "6642:67:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5807:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "6552:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6573:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6565:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6594:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6581:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6581:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6564:35:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6618:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6618:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6617:14:0"
									},
									"scope": 393,
									"src": "6543:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "7085:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 180,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "7124:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 181,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "7132:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7138:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 183,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "7141:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 179,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															207,
															257
														],
														"referencedDeclaration": 257,
														"src": "7102:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 178,
												"id": 185,
												"nodeType": "Return",
												"src": "7095:59:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "6722:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "6947:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6977:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "6969:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7006:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "6993:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6993:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7034:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "7020:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7020:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6959:93:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "7071:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7071:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7070:14:0"
									},
									"scope": 393,
									"src": "6938:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "7666:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "7705:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 201,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "7713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 202,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "7719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7726:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 199,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															207,
															257
														],
														"referencedDeclaration": 257,
														"src": "7683:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7683:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 198,
												"id": 205,
												"nodeType": "Return",
												"src": "7676:94:0"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "7167:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "7532:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7571:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "7563:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7600:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "7587:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 191,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7587:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "7614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7553:80:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "7652:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7652:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7651:14:0"
									},
									"scope": 393,
									"src": "7523:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "8204:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 224,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8230:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$393",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$393",
																				"typeString": "library Address"
																			}
																		],
																		"id": 223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8222:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 222,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8222:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8222:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8222:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 227,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "8247:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8222:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8254:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8214:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "8214:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 234,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "8324:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 233,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "8313:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8313:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8333:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8305:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8305:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "8305:60:0"
											},
											{
												"assignments": [
													240,
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8382:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "8377:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "8404:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "8391:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 241,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8391:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 247,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "8444:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 243,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "8418:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8418:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 245,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "8437:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8418:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8418:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8376:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "8483:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 252,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "8492:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 253,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "8504:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 250,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "8466:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8466:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 220,
												"id": 255,
												"nodeType": "Return",
												"src": "8459:58:0"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "7783:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "8034:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8073:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8065:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8102:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8089:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8089:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8124:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8116:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8153:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8139:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8139:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8055:116:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8190:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8190:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8189:14:0"
									},
									"scope": 393,
									"src": "8025:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8801:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 268,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8837:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 269,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8845:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8851:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 267,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															309
														],
														"referencedDeclaration": 309,
														"src": "8818:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8818:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8811:80:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "8530:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "8710:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8737:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8729:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8758:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8745:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8745:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8728:35:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8787:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8787:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8786:14:0"
									},
									"scope": 393,
									"src": "8701:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "9240:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 288,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "9269:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 287,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "9258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9258:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9278:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9250:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9250:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "9250:67:0"
											},
											{
												"assignments": [
													294,
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9334:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "9329:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 293,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9329:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "9356:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "9343:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 295,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9343:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 301,
												"initialValue": {
													"arguments": [
														{
															"id": 299,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9388:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 297,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "9370:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "9370:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9370:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9328:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 303,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "9427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "9436:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 305,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "9448:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 302,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "9410:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9410:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 285,
												"id": 307,
												"nodeType": "Return",
												"src": "9403:58:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "8904:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "9091:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9127:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "9119:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9156:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "9143:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 278,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9143:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9184:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "9170:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9170:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9109:93:0"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "9226:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 283,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9226:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9225:14:0"
									},
									"scope": 393,
									"src": "9082:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "9744:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9782:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "9790:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9796:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 319,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															326,
															361
														],
														"referencedDeclaration": 361,
														"src": "9761:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9761:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 318,
												"id": 324,
												"nodeType": "Return",
												"src": "9754:84:0"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "9474:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "9656:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9685:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "9677:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9706:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "9693:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9676:35:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "9730:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9730:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9729:14:0"
									},
									"scope": 393,
									"src": "9647:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "10186:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 340,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "10215:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 339,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "10204:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10204:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10224:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10196:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10196:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "10196:69:0"
											},
											{
												"assignments": [
													346,
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10282:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "10277:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 345,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10277:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "10304:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "10291:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 347,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10291:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"arguments": [
														{
															"id": 351,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "10338:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 349,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "10318:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "10318:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10318:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10276:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "10377:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 356,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "10386:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 357,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "10398:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 354,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "10360:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10360:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 337,
												"id": 359,
												"nodeType": "Return",
												"src": "10353:58:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "9851:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "10040:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10078:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "10070:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10107:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "10094:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10094:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10135:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "10121:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10121:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10060:93:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "10172:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10172:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10171:14:0"
									},
									"scope": 393,
									"src": "10031:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "10798:532:0",
										"statements": [
											{
												"condition": {
													"id": 373,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 364,
													"src": "10812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 389,
													"nodeType": "Block",
													"src": "10869:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 377,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "10953:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "10953:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10973:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10953:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 387,
																"nodeType": "Block",
																"src": "11261:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 384,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 368,
																					"src": "11286:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 383,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "11279:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11279:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 386,
																		"nodeType": "ExpressionStatement",
																		"src": "11279:20:0"
																	}
																]
															},
															"id": 388,
															"nodeType": "IfStatement",
															"src": "10949:365:0",
															"trueBody": {
																"id": 382,
																"nodeType": "Block",
																"src": "10976:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "11096:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "11118:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "11147:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "11141:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11141:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "11122:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11190:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "11194:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11186:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11186:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "11207:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "11179:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11179:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11179:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 366,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11147:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 366,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11194:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 381,
																		"nodeType": "InlineAssembly",
																		"src": "11087:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 390,
												"nodeType": "IfStatement",
												"src": "10808:516:0",
												"trueBody": {
													"id": 376,
													"nodeType": "Block",
													"src": "10821:42:0",
													"statements": [
														{
															"expression": {
																"id": 374,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "10842:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 372,
															"id": 375,
															"nodeType": "Return",
															"src": "10835:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "10424:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "10647:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "10678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "10673:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10673:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "10708:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "10695:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10742:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "10728:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10728:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10663:97:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "10784:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10784:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10783:14:0"
									},
									"scope": 393,
									"src": "10638:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1825,
							"src": "3271:8061:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 394,
								"nodeType": "StructuredDocumentation",
								"src": "11608:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 703,
							"linearizedBaseContracts": [
								703
							],
							"name": "SafeMath",
							"nameLocation": "11813:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "12040:140:0",
										"statements": [
											{
												"id": 424,
												"nodeType": "UncheckedBlock",
												"src": "12050:124:0",
												"statements": [
													{
														"assignments": [
															407
														],
														"declarations": [
															{
																"constant": false,
																"id": 407,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "12082:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 424,
																"src": "12074:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 406,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12074:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 411,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "12086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 409,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "12090:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12086:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12074:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "12109:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 413,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "12113:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12109:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 419,
														"nodeType": "IfStatement",
														"src": "12105:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12124:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 417,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12123:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 405,
															"id": 418,
															"nodeType": "Return",
															"src": "12116:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12155:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 421,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "12161:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 422,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12154:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 405,
														"id": 423,
														"nodeType": "Return",
														"src": "12147:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "11828:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "11973:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11988:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "11980:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11999:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "11991:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11979:22:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "12025:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12025:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "12031:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12024:15:0"
									},
									"scope": 703,
									"src": "11964:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "12402:113:0",
										"statements": [
											{
												"id": 452,
												"nodeType": "UncheckedBlock",
												"src": "12412:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 438,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "12440:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 439,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "12444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12440:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 445,
														"nodeType": "IfStatement",
														"src": "12436:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12455:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12462:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 443,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12454:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 437,
															"id": 444,
															"nodeType": "Return",
															"src": "12447:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12486:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 447,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "12492:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 448,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "12496:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12492:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 450,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12485:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 437,
														"id": 451,
														"nodeType": "Return",
														"src": "12478:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "12186:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "12335:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12350:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "12342:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12361:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "12353:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12341:22:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "12387:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12387:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "12393:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12386:15:0"
									},
									"scope": 703,
									"src": "12326:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "12739:417:0",
										"statements": [
											{
												"id": 494,
												"nodeType": "UncheckedBlock",
												"src": "12749:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 466,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "13007:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13012:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13007:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 473,
														"nodeType": "IfStatement",
														"src": "13003:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13023:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13029:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13022:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 465,
															"id": 472,
															"nodeType": "Return",
															"src": "13015:16:0"
														}
													},
													{
														"assignments": [
															475
														],
														"declarations": [
															{
																"constant": false,
																"id": 475,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "13053:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 494,
																"src": "13045:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 474,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13045:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 479,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "13057:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 477,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "13061:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13057:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13045:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 480,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "13080:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 481,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "13084:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13080:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 483,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "13089:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13080:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 489,
														"nodeType": "IfStatement",
														"src": "13076:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13100:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13107:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 487,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13099:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 465,
															"id": 488,
															"nodeType": "Return",
															"src": "13092:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13131:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 491,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "13137:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 492,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13130:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 465,
														"id": 493,
														"nodeType": "Return",
														"src": "13123:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "12521:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "12672:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12687:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "12679:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12698:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "12690:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12678:22:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "12724:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 461,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12724:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "12730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12723:15:0"
									},
									"scope": 703,
									"src": "12663:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "13381:114:0",
										"statements": [
											{
												"id": 522,
												"nodeType": "UncheckedBlock",
												"src": "13391:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 508,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "13419:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13424:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13419:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 515,
														"nodeType": "IfStatement",
														"src": "13415:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13435:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13442:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 513,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13434:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 507,
															"id": 514,
															"nodeType": "Return",
															"src": "13427:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13466:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 517,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "13472:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 518,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "13476:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13472:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 520,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13465:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 507,
														"id": 521,
														"nodeType": "Return",
														"src": "13458:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "13162:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "13314:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13329:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "13321:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "13332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13320:22:0"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "13366:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13366:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "13372:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13365:15:0"
									},
									"scope": 703,
									"src": "13305:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "13730:114:0",
										"statements": [
											{
												"id": 550,
												"nodeType": "UncheckedBlock",
												"src": "13740:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 536,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "13768:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13773:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13768:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 543,
														"nodeType": "IfStatement",
														"src": "13764:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13784:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13791:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 541,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13783:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 535,
															"id": 542,
															"nodeType": "Return",
															"src": "13776:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13815:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 545,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "13821:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 546,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "13825:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13821:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 548,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13814:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 535,
														"id": 549,
														"nodeType": "Return",
														"src": "13807:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "13501:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "13663:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13678:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "13670:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13689:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "13681:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13669:22:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "13715:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13715:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "13721:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13714:15:0"
									},
									"scope": 703,
									"src": "13654:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "14146:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 562,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "14163:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 563,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "14167:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 561,
												"id": 565,
												"nodeType": "Return",
												"src": "14156:12:0"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "13850:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "14088:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14100:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "14092:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14111:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "14103:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14091:22:0"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "14137:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14136:9:0"
									},
									"scope": 703,
									"src": "14079:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "14513:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 577,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "14530:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 578,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "14534:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14530:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 576,
												"id": 580,
												"nodeType": "Return",
												"src": "14523:12:0"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "14181:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "14455:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14467:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "14459:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14478:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "14470:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14458:22:0"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "14504:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14503:9:0"
									},
									"scope": 703,
									"src": "14446:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "14856:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 592,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "14873:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 593,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "14877:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14873:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 595,
												"nodeType": "Return",
												"src": "14866:12:0"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "14548:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "14798:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14810:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "14802:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14821:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "14813:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14801:22:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "14847:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14846:9:0"
									},
									"scope": 703,
									"src": "14789:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "15241:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 607,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "15258:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 608,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "15262:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15258:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 606,
												"id": 610,
												"nodeType": "Return",
												"src": "15251:12:0"
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "14891:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "15183:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15195:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "15187:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15206:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "15198:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15186:22:0"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "15232:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15231:9:0"
									},
									"scope": 703,
									"src": "15174:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "15790:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 622,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "15807:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 623,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "15811:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15807:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 621,
												"id": 625,
												"nodeType": "Return",
												"src": "15800:12:0"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "15276:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "15732:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15744:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "15736:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15755:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "15747:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15735:22:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "15781:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15780:9:0"
									},
									"scope": 703,
									"src": "15723:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "16408:106:0",
										"statements": [
											{
												"id": 650,
												"nodeType": "UncheckedBlock",
												"src": "16418:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 640,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "16450:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 641,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "16455:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16450:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 643,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "16458:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 639,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "16442:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16442:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 645,
														"nodeType": "ExpressionStatement",
														"src": "16442:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 646,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "16492:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 647,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "16496:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16492:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 638,
														"id": 649,
														"nodeType": "Return",
														"src": "16485:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "15825:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "16292:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "16313:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "16305:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16332:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "16324:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "16357:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "16343:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16343:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16295:80:0"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "16399:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16398:9:0"
									},
									"scope": 703,
									"src": "16283:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "17123:105:0",
										"statements": [
											{
												"id": 675,
												"nodeType": "UncheckedBlock",
												"src": "17133:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 665,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "17165:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17169:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "17165:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 668,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "17172:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 664,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "17157:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17157:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 670,
														"nodeType": "ExpressionStatement",
														"src": "17157:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 671,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "17206:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 672,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "17210:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17206:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 663,
														"id": 674,
														"nodeType": "Return",
														"src": "17199:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "16520:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "17007:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "17028:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "17020:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "17047:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "17039:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17072:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "17058:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17058:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17010:80:0"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "17114:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17113:9:0"
									},
									"scope": 703,
									"src": "16998:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "17999:105:0",
										"statements": [
											{
												"id": 700,
												"nodeType": "UncheckedBlock",
												"src": "18009:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 690,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "18041:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18045:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "18041:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 693,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "18048:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 689,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "18033:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18033:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 695,
														"nodeType": "ExpressionStatement",
														"src": "18033:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 696,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "18082:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 697,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "18086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18082:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 688,
														"id": 699,
														"nodeType": "Return",
														"src": "18075:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "17234:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "17883:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "17904:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "17896:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "17923:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "17915:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17948:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "17934:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 683,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17934:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17886:80:0"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "17990:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17989:9:0"
									},
									"scope": 703,
									"src": "17874:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1825,
							"src": "11805:6301:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916
							],
							"name": "SafeBEP20",
							"nameLocation": "18151:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 706,
									"libraryName": {
										"id": 704,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "18173:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "18167:27:0",
									"typeName": {
										"id": 705,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18186:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 709,
									"libraryName": {
										"id": 707,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 393,
										"src": "18205:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "18199:26:0",
									"typeName": {
										"id": 708,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18217:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "18303:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 720,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "18333:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 723,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "18363:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 49,
																		"src": "18363:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "18363:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 726,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "18388:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 727,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "18392:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 721,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18340:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "18340:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18340:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 719,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "18313:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18313:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "18313:86:0"
											}
										]
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "18240:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18260:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "18253:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 710,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "18253:6:0"
													},
													"referencedDeclaration": 100,
													"src": "18253:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18275:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "18267:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18287:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "18279:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18252:41:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18303:0:0"
									},
									"scope": 916,
									"src": "18231:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "18502:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "18532:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 748,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 735,
																			"src": "18562:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 81,
																		"src": "18562:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "18562:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 751,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "18591:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 752,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "18597:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "18601:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 746,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18539:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "18539:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18539:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 744,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "18512:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18512:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "18512:96:0"
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "18421:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18445:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "18438:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 734,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 733,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "18438:6:0"
													},
													"referencedDeclaration": 100,
													"src": "18438:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "18452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18474:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "18466:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18486:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "18478:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18437:55:0"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18502:0:0"
									},
									"scope": 916,
									"src": "18412:203:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "18951:537:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 770,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "19240:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19249:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "19240:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 773,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19239:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 778,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "19280:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$916",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$916",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 777,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19272:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 776,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "19272:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 779,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19272:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 780,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 764,
																					"src": "19287:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 774,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 762,
																					"src": "19256:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$100",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 59,
																				"src": "19256:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19256:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19299:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "19256:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 784,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19255:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19239:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19315:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19231:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19231:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "19231:150:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 790,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "19411:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 793,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "19441:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "19441:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19441:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 796,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "19465:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "19474:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 791,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19418:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19418:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19418:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 789,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "19391:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19391:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "19391:90:0"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "18621:249:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "18884:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18903:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "18896:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "18896:6:0"
													},
													"referencedDeclaration": 100,
													"src": "18896:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "18918:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "18910:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18935:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "18927:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18895:46:0"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18951:0:0"
									},
									"scope": 916,
									"src": "18875:613:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "19580:197:0",
										"statements": [
											{
												"assignments": [
													813
												],
												"declarations": [
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "19598:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 838,
														"src": "19590:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 812,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19590:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"arguments": [
														{
															"id": 823,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "19657:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 818,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "19637:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$916",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$916",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "19629:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 816,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "19629:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19629:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 820,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "19644:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 814,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "19613:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 59,
																"src": "19613:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19613:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 567,
														"src": "19613:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19613:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19590:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 827,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "19693:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 830,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "19723:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "19723:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19723:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 833,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "19747:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 834,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "19756:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 828,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19700:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19700:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19700:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 826,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "19673:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19673:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "19673:97:0"
											}
										]
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "19503:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19532:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "19525:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 804,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 803,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "19525:6:0"
													},
													"referencedDeclaration": 100,
													"src": "19525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "19539:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19564:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "19556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19524:46:0"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19580:0:0"
									},
									"scope": 916,
									"src": "19494:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "19869:242:0",
										"statements": [
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "19887:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 876,
														"src": "19879:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19879:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"arguments": [
														{
															"id": 860,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "19946:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19953:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 855,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "19926:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$916",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$916",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "19918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 853,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "19918:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19918:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 857,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "19933:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 851,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "19902:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 59,
																"src": "19902:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19902:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 652,
														"src": "19902:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19902:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19879:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "20027:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 868,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "20057:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$100",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "20057:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20057:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 871,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "20081:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 872,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "20090:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 866,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20034:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20034:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20034:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 864,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "20007:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20007:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "20007:97:0"
											}
										]
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "19792:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19821:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "19814:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 840,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "19814:6:0"
													},
													"referencedDeclaration": 100,
													"src": "19814:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19836:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "19828:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19853:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "19845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19813:46:0"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19869:0:0"
									},
									"scope": 916,
									"src": "19783:328:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "20568:689:0",
										"statements": [
											{
												"assignments": [
													887
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "20938:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "20925:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 886,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "20925:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 896,
												"initialValue": {
													"arguments": [
														{
															"id": 893,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "20979:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20985:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 890,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "20959:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20951:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20951:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20951:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "20951:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20951:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20925:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 897,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "21034:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21034:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21054:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21034:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 913,
												"nodeType": "IfStatement",
												"src": "21030:221:0",
												"trueBody": {
													"id": 912,
													"nodeType": "Block",
													"src": "21057:194:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 904,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 887,
																				"src": "21174:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 906,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "21187:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 905,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "21187:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 907,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "21186:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 902,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "21163:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "21163:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21163:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21195:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 901,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "21155:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21155:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 911,
															"nodeType": "ExpressionStatement",
															"src": "21155:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "20121:372:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "20507:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "20527:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$100",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 880,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 879,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "20527:6:0"
													},
													"referencedDeclaration": 100,
													"src": "20527:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20554:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "20541:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 882,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20526:33:0"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20568:0:0"
									},
									"scope": 916,
									"src": "20498:759:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1825,
							"src": "18143:3116:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 917,
								"nodeType": "StructuredDocumentation",
								"src": "21394:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 992,
							"linearizedBaseContracts": [
								992
							],
							"name": "IERC20",
							"nameLocation": "21475:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "21488:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "21568:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21579:2:0"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "21605:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21604:9:0"
									},
									"scope": 992,
									"src": "21559:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "21620:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "21706:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21724:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "21716:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21715:17:0"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "21756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21755:9:0"
									},
									"scope": 992,
									"src": "21697:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "21771:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "21987:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22004:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "21996:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22016:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "22008:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21995:28:0"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "22042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22041:6:0"
									},
									"scope": 992,
									"src": "21978:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "22054:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "22332:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "22342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "22365:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "22357:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22357:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22341:32:0"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "22397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22396:9:0"
									},
									"scope": 992,
									"src": "22323:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "22412:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "23068:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "23084:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "23076:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23101:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "23093:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23075:33:0"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "23127:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23126:6:0"
									},
									"scope": 992,
									"src": "23059:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "23139:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "23440:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23470:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "23462:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23492:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "23484:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23512:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "23504:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23452:72:0"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "23543:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23543:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23542:6:0"
									},
									"scope": 992,
									"src": "23431:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "23555:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 982,
									"name": "Transfer",
									"nameLocation": "23724:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "23733:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23771:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "23755:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23783:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "23775:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23732:57:0"
									},
									"src": "23718:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "23796:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 991,
									"name": "Approval",
									"nameLocation": "23955:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23980:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "23964:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23964:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "24003:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "23987:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24020:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "24012:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23963:63:0"
									},
									"src": "23949:78:0"
								}
							],
							"scope": 1825,
							"src": "21465:2564:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 993,
								"nodeType": "StructuredDocumentation",
								"src": "24140:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1012,
							"linearizedBaseContracts": [
								1012
							],
							"name": "Context",
							"nameLocation": "24655:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "24731:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 998,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "24748:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "24748:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 997,
												"id": 1000,
												"nodeType": "Return",
												"src": "24741:17:0"
											}
										]
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "24678:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24688:2:0"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "24722:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24721:9:0"
									},
									"scope": 1012,
									"src": "24669:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "24838:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1007,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "24855:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "24855:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1009,
												"nodeType": "Return",
												"src": "24848:15:0"
											}
										]
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "24780:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24788:2:0"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "24822:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1004,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24822:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24821:16:0"
									},
									"scope": 1012,
									"src": "24771:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1825,
							"src": "24637:235:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1014,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1012,
										"src": "25510:7:0"
									},
									"id": 1015,
									"nodeType": "InheritanceSpecifier",
									"src": "25510:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1013,
								"nodeType": "StructuredDocumentation",
								"src": "24986:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1114,
							"linearizedBaseContracts": [
								1114,
								1012
							],
							"name": "Ownable",
							"nameLocation": "25499:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1017,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "25540:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "25524:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1016,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "25524:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1023,
									"name": "OwnershipTransferred",
									"nameLocation": "25559:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "25596:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "25580:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25627:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "25611:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25579:57:0"
									},
									"src": "25553:84:0"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "25753:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1028,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "25782:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25782:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1027,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "25763:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25763:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "25763:32:0"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "25643:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1033,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25750:2:0"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25753:0:0"
									},
									"scope": 1114,
									"src": "25739:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "25933:30:0",
										"statements": [
											{
												"expression": {
													"id": 1039,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1017,
													"src": "25950:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1040,
												"nodeType": "Return",
												"src": "25943:13:0"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "25808:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "25887:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25892:2:0"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25924:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25924:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25923:9:0"
									},
									"scope": 1114,
									"src": "25878:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "26072:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1046,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "26090:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26090:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1048,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "26101:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26101:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "26090:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26115:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1045,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26082:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26082:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "26082:68:0"
											},
											{
												"id": 1054,
												"nodeType": "PlaceholderStatement",
												"src": "26160:1:0"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "25969:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1056,
									"name": "onlyOwner",
									"nameLocation": "26060:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26069:2:0"
									},
									"src": "26051:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "26564:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26601:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26593:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1063,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26593:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26593:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1062,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "26574:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26574:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "26574:30:0"
											}
										]
									},
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "26174:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1060,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1059,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1056,
												"src": "26554:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26554:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "26519:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26536:2:0"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26564:0:0"
									},
									"scope": 1114,
									"src": "26510:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "26830:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1079,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "26848:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26868:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26860:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1080,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26860:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26860:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "26848:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26872:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26840:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "26840:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "26942:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1088,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "26923:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26923:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "26923:28:0"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "26617:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1076,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1075,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1056,
												"src": "26820:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26820:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "26769:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "26795:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "26787:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26786:18:0"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26830:0:0"
									},
									"scope": 1114,
									"src": "26760:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "27175:124:0",
										"statements": [
											{
												"assignments": [
													1100
												],
												"declarations": [
													{
														"constant": false,
														"id": 1100,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "27193:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "27185:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1099,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27185:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"initialValue": {
													"id": 1101,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1017,
													"src": "27204:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27185:25:0"
											},
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "27220:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "27229:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27220:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "27220:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1108,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "27273:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "27283:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1107,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "27252:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27252:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "EmitStatement",
												"src": "27247:45:0"
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "26964:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "27121:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "27148:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "27140:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27139:18:0"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27175:0:0"
									},
									"scope": 1114,
									"src": "27112:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1825,
							"src": "25481:1820:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1115,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1114,
										"src": "27363:7:0"
									},
									"id": 1116,
									"nodeType": "InheritanceSpecifier",
									"src": "27363:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1824,
							"linearizedBaseContracts": [
								1824,
								1114,
								1012
							],
							"name": "StakingPlatform",
							"nameLocation": "27344:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1119,
									"libraryName": {
										"id": 1117,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "27384:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "27378:27:0",
									"typeName": {
										"id": 1118,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27397:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1123,
									"libraryName": {
										"id": 1120,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "27416:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "27410:27:0",
									"typeName": {
										"id": 1122,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1121,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 100,
											"src": "27430:6:0"
										},
										"referencedDeclaration": 100,
										"src": "27430:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$100",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "StakingPlatform.Staker",
									"id": 1136,
									"members": [
										{
											"constant": false,
											"id": 1125,
											"mutability": "mutable",
											"name": "stakerCurrentReward",
											"nameLocation": "27500:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "27492:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1124,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27492:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1127,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "27537:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "27529:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1126,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27529:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1129,
											"mutability": "mutable",
											"name": "mode",
											"nameLocation": "27567:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "27559:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1128,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27559:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1131,
											"mutability": "mutable",
											"name": "stakeStartTime",
											"nameLocation": "27589:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "27581:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1130,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27581:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1133,
											"mutability": "mutable",
											"name": "lastUpdatedBlockNumber",
											"nameLocation": "27621:22:0",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "27613:30:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1132,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27613:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1135,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "27661:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "27653:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1134,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27653:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "27475:6:0",
									"nodeType": "StructDefinition",
									"scope": 1824,
									"src": "27468:206:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1138,
									"mutability": "mutable",
									"name": "_unstakingFeeRate",
									"nameLocation": "27791:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "27775:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27775:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1140,
									"mutability": "mutable",
									"name": "_eventPeriod",
									"nameLocation": "27830:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "27814:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1139,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27814:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1142,
									"mutability": "mutable",
									"name": "_rewardRate",
									"nameLocation": "27864:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "27848:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1141,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27848:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1144,
									"mutability": "mutable",
									"name": "_rewardFeeRate",
									"nameLocation": "27897:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "27881:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1143,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27881:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1146,
									"mutability": "mutable",
									"name": "_lockupPeriod",
									"nameLocation": "27933:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "27917:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27917:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1149,
									"mutability": "mutable",
									"name": "_stakers",
									"nameLocation": "27970:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "27952:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1147,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27952:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1148,
										"nodeType": "ArrayTypeName",
										"src": "27952:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1154,
									"mutability": "mutable",
									"name": "_staker",
									"nameLocation": "28020:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "27985:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
										"typeString": "mapping(address => struct StakingPlatform.Staker)"
									},
									"typeName": {
										"id": 1153,
										"keyType": {
											"id": 1150,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27993:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "27985:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
											"typeString": "mapping(address => struct StakingPlatform.Staker)"
										},
										"valueType": {
											"id": 1152,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1151,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1136,
												"src": "28004:6:0"
											},
											"referencedDeclaration": 1136,
											"src": "28004:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
												"typeString": "struct StakingPlatform.Staker"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1156,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "28102:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "28087:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1155,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28087:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1159,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "28133:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "28119:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$100",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1158,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1157,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 100,
											"src": "28119:6:0"
										},
										"referencedDeclaration": 100,
										"src": "28119:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$100",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1165,
									"name": "Staked",
									"nameLocation": "28229:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "28244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "28236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28260:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "28252:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28235:32:0"
									},
									"src": "28223:45:0"
								},
								{
									"anonymous": false,
									"id": 1171,
									"name": "Harvest",
									"nameLocation": "28279:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "28295:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "28287:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToClaim",
												"nameLocation": "28311:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "28303:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28286:39:0"
									},
									"src": "28273:53:0"
								},
								{
									"anonymous": false,
									"id": 1177,
									"name": "Withdraw",
									"nameLocation": "28337:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "28354:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "28346:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28370:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "28362:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28345:32:0"
									},
									"src": "28331:47:0"
								},
								{
									"anonymous": false,
									"id": 1181,
									"name": "SetRewardRate",
									"nameLocation": "28389:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "28411:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "28403:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28402:20:0"
									},
									"src": "28383:40:0"
								},
								{
									"anonymous": false,
									"id": 1185,
									"name": "SetEventPeriod",
									"nameLocation": "28434:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockupDuration",
												"nameLocation": "28457:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "28449:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28448:24:0"
									},
									"src": "28428:45:0"
								},
								{
									"anonymous": false,
									"id": 1189,
									"name": "SetUnstakingFeeRate",
									"nameLocation": "28484:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakingFeeRate",
												"nameLocation": "28512:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "28504:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28503:26:0"
									},
									"src": "28478:52:0"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "28564:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1194,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "28583:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28583:6:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "28583:6:0"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1197,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "28599:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$100",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1199,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "28614:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1198,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "28607:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$100_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28607:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$100",
															"typeString": "contract IBEP20"
														}
													},
													"src": "28599:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$100",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "28599:22:0"
											}
										]
									},
									"id": 1204,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "28556:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28548:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28547:16:0"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28564:0:0"
									},
									"scope": 1824,
									"src": "28536:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "28659:182:0",
										"statements": [
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1207,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "28678:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28692:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "28678:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "28678:17:0"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1211,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "28716:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28736:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "28716:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "28716:24:0"
											},
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1215,
														"name": "_rewardFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "28750:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28767:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "28750:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "28750:20:0"
											},
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1219,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "28780:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28795:6:0",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "28780:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "28780:21:0"
											},
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1223,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "28811:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3930",
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28827:7:0",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7776000_by_1",
															"typeString": "int_const 7776000"
														},
														"value": "90"
													},
													"src": "28811:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "28811:23:0"
											}
										]
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Init",
									"nameLocation": "28643:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28647:2:0"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28659:0:0"
									},
									"scope": 1824,
									"src": "28634:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "28926:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28964:6:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"id": 1235,
															"name": "timedur",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "28952:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 612,
														"src": "28952:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28952:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1234,
												"id": 1239,
												"nodeType": "Return",
												"src": "28945:26:0"
											}
										]
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calDaysFromTimestamp",
									"nameLocation": "28856:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "timedur",
												"nameLocation": "28885:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "28877:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28876:17:0"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "28917:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28916:9:0"
									},
									"scope": 1824,
									"src": "28847:131:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "29081:341:0",
										"statements": [
											{
												"assignments": [
													1246
												],
												"declarations": [
													{
														"constant": false,
														"id": 1246,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "29115:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "29100:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1245,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1244,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1136,
																"src": "29100:6:0"
															},
															"referencedDeclaration": 1136,
															"src": "29100:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1251,
												"initialValue": {
													"baseExpression": {
														"id": 1247,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "29124:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1250,
													"indexExpression": {
														"expression": {
															"id": 1248,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "29132:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "29132:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29124:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1136_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29100:43:0"
											},
											{
												"assignments": [
													1253
												],
												"declarations": [
													{
														"constant": false,
														"id": 1253,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "29161:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "29153:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1252,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29277:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1268,
																	"name": "_rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "29260:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "38363430",
																					"id": 1264,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "29249:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					},
																					"value": "8640"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1260,
																								"name": "staker",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1246,
																								"src": "29214:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																									"typeString": "struct StakingPlatform.Staker storage pointer"
																								}
																							},
																							"id": 1261,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lastUpdatedBlockNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1133,
																							"src": "29214:29:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1257,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "29197:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1258,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "29197:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1259,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 582,
																						"src": "29197:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29197:47:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 612,
																				"src": "29197:51:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29197:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1254,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1246,
																				"src": "29173:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakedAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1127,
																			"src": "29173:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 597,
																		"src": "29173:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29173:82:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 597,
																"src": "29173:86:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29173:99:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 612,
														"src": "29173:103:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29173:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29153:128:0"
											},
											{
												"expression": {
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1274,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "29291:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1125,
														"src": "29291:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1280,
																"name": "newReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "29351:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1277,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "29320:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakerCurrentReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1125,
																"src": "29320:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 567,
															"src": "29320:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29320:41:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29291:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "29291:70:0"
											},
											{
												"expression": {
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1284,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "29371:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdatedBlockNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1133,
														"src": "29371:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1287,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "29403:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "29403:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29371:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "29371:44:0"
											}
										]
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "29059:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29071:2:0"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29081:0:0"
									},
									"scope": 1824,
									"src": "29050:372:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "29495:433:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1300,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "29522:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29532:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29522:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29535:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29514:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29514:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "29514:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1309,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "29603:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "29603:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1307,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "29587:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$100",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 39,
																	"src": "29587:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29587:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1312,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "29617:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29587:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29626:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29579:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29579:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "29579:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1318,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "29660:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1321,
																	"indexExpression": {
																		"expression": {
																			"id": 1319,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "29668:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "29668:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "29660:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1136_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1135,
																"src": "29660:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29690:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "29660:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792073746172746564",
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29696:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															},
															"value": "Already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															}
														],
														"id": 1317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29652:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "29652:62:0"
											},
											{
												"expression": {
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1328,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "29725:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1331,
															"indexExpression": {
																"expression": {
																	"id": 1329,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "29733:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "29733:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "29725:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1129,
														"src": "29725:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1333,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "29752:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29725:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "29725:32:0"
											},
											{
												"expression": {
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1336,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "29767:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1339,
															"indexExpression": {
																"expression": {
																	"id": 1337,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "29775:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "29775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "29767:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1131,
														"src": "29767:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1341,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "29804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "29804:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29767:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "29767:52:0"
											},
											{
												"expression": {
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1345,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "29829:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1348,
															"indexExpression": {
																"expression": {
																	"id": 1346,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "29837:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "29837:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "29829:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "29829:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30783535",
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29858:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "29829:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "29829:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1356,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29886:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29886:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1353,
															"name": "_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "29872:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "29872:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29872:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "29872:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1361,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "29913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1360,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "29907:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29907:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "29907:14:0"
											}
										]
									},
									"functionSelector": "4b77dd9e",
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startStaking",
									"nameLocation": "29441:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "29462:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "29454:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "29479:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "29471:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29453:32:0"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29495:0:0"
									},
									"scope": 1824,
									"src": "29432:496:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "30031:549:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1371,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "30058:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30068:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30058:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30071:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30050:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30050:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "30050:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1380,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30139:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30139:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1378,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "30123:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$100",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 39,
																	"src": "30123:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30123:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1383,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "30153:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30123:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30162:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1377,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30115:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30115:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "30115:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1389,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "30196:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1392,
																	"indexExpression": {
																		"expression": {
																			"id": 1390,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30204:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30204:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "30196:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1136_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1135,
																"src": "30196:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30226:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "30196:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a20696e76616c6964207374616b6572",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30232:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															},
															"value": "Error: invalid staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															}
														],
														"id": 1388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30188:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30188:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "30188:68:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1399,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "30275:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30275:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1401,
												"nodeType": "ExpressionStatement",
												"src": "30275:14:0"
											},
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "30314:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1445,
														"src": "30299:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1403,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1402,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1136,
																"src": "30299:6:0"
															},
															"referencedDeclaration": 1136,
															"src": "30299:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1409,
												"initialValue": {
													"baseExpression": {
														"id": 1405,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "30323:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1408,
													"indexExpression": {
														"expression": {
															"id": 1406,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "30331:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "30331:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30323:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1136_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30299:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1413,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30375:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30375:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1417,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "30395:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPlatform_$1824",
																		"typeString": "contract StakingPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPlatform_$1824",
																		"typeString": "contract StakingPlatform"
																	}
																],
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30387:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1415,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30387:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30387:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1419,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "30402:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1410,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "30352:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 758,
														"src": "30352:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$100_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30352:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "30352:58:0"
											},
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1422,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "30420:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1127,
														"src": "30420:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1428,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "30466:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1425,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "30442:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1127,
																"src": "30442:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 567,
															"src": "30442:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30442:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30420:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "30420:54:0"
											},
											{
												"expression": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1432,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "30484:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1435,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "30514:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1433,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "30498:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 567,
															"src": "30498:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30498:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30484:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "30484:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1440,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30553:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30553:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1442,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "30565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1439,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "30546:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30546:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "EmitStatement",
												"src": "30541:32:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "30002:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "30016:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "30008:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30007:17:0"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30031:0:0"
									},
									"scope": 1824,
									"src": "29993:587:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "30642:36:0",
										"statements": [
											{
												"expression": {
													"id": 1451,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1156,
													"src": "30660:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1450,
												"id": 1452,
												"nodeType": "Return",
												"src": "30653:18:0"
											}
										]
									},
									"functionSelector": "0917e776",
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStaked",
									"nameLocation": "30595:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30609:2:0"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "30633:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30632:9:0"
									},
									"scope": 1824,
									"src": "30586:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "30744:40:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1459,
														"name": "_stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "30762:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "30762:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1458,
												"id": 1461,
												"nodeType": "Return",
												"src": "30755:22:0"
											}
										]
									},
									"functionSelector": "5715ec11",
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberofStakers",
									"nameLocation": "30693:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30711:2:0"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "30735:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30734:9:0"
									},
									"scope": 1824,
									"src": "30684:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "30870:1111:0",
										"statements": [
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "30904:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "30889:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1469,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1468,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1136,
																"src": "30889:6:0"
															},
															"referencedDeclaration": 1136,
															"src": "30889:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"initialValue": {
													"baseExpression": {
														"id": 1471,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "30913:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1474,
													"indexExpression": {
														"expression": {
															"id": 1472,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "30921:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "30921:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30913:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1136_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30889:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1477,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "30951:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30960:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30951:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30963:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30943:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "30943:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "31015:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1485,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "31025:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1127,
																"src": "31025:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31015:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31046:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31007:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31007:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "31007:56:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1491,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "31074:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31074:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "31074:14:0"
											},
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "amountTobeWithdrawn",
														"nameLocation": "31106:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "31098:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1494,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31098:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1514,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1496,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "31128:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1501,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "31161:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$1824",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$1824",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "31153:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1499,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "31153:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31153:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1497,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "31137:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 39,
																"src": "31137:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31137:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "31128:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1510,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "31203:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$1824",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$1824",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31195:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1508,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "31195:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31195:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1506,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "31179:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$100",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 39,
															"src": "31179:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31179:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "31128:81:0",
													"trueExpression": {
														"id": 1505,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "31170:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31098:111:0"
											},
											{
												"assignments": [
													1516
												],
												"declarations": [
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "during",
														"nameLocation": "31227:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "31219:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1515,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31219:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1526,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31283:6:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1520,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "31256:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																			"typeString": "struct StakingPlatform.Staker storage pointer"
																		}
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1131,
																	"src": "31256:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1517,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "31236:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "31236:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 582,
																"src": "31236:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31236:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 612,
														"src": "31236:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31236:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31219:71:0"
											},
											{
												"assignments": [
													1528
												],
												"declarations": [
													{
														"constant": false,
														"id": 1528,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "31308:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "31300:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"hexValue": "313030",
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31314:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31300:17:0"
											},
											{
												"assignments": [
													1532
												],
												"declarations": [
													{
														"constant": false,
														"id": 1532,
														"mutability": "mutable",
														"name": "isLockupTimeOver",
														"nameLocation": "31332:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "31327:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1531,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "31327:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1533,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "31351:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1129,
															"src": "31351:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31366:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "31351:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1546,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "31425:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "31425:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1551,
																	"name": "_lockupPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "31470:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1548,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "31444:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																			"typeString": "struct StakingPlatform.Staker storage pointer"
																		}
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1131,
																	"src": "31444:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 567,
																"src": "31444:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31444:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "31425:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "31351:133:0",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1537,
																	"name": "during",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "31370:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1538,
																	"name": "_eventPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "31379:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31370:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31395:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31370:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1542,
																"name": "during",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "31400:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31409:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31400:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "31370:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31327:157:0"
											},
											{
												"condition": {
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "31498:17:0",
													"subExpression": {
														"id": 1556,
														"name": "isLockupTimeOver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "31499:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1563,
												"nodeType": "IfStatement",
												"src": "31494:71:0",
												"trueBody": {
													"id": 1562,
													"nodeType": "Block",
													"src": "31517:48:0",
													"statements": [
														{
															"expression": {
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1558,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "31531:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1559,
																	"name": "_unstakingFeeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "31537:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31531:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1561,
															"nodeType": "ExpressionStatement",
															"src": "31531:23:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1564,
														"name": "amountTobeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "31574:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "316534",
																		"id": 1572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31653:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "1e4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1569,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1528,
																				"src": "31644:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1567,
																				"name": "amountTobeWithdrawn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1495,
																				"src": "31620:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 597,
																			"src": "31620:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31620:28:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 612,
																	"src": "31620:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31620:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1565,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "31596:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 582,
															"src": "31596:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31596:62:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31574:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "31574:84:0"
											},
											{
												"expression": {
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1577,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "31668:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1580,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "31698:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1578,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "31682:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 582,
															"src": "31682:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31682:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31668:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "31668:50:0"
											},
											{
												"expression": {
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1584,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "31728:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1127,
														"src": "31728:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1590,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "31774:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1587,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "31750:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1127,
																"src": "31750:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 582,
															"src": "31750:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31750:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31728:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "31728:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1597,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31823:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31823:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1599,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "31835:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1594,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "31804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 732,
														"src": "31804:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$100_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31804:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "31804:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1603,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31880:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31880:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1605,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "31892:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1602,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "31871:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31871:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "EmitStatement",
												"src": "31866:46:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "30837:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30854:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "30846:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30845:16:0"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30870:0:0"
									},
									"scope": 1824,
									"src": "30828:1153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "32055:156:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1617,
																"name": "__rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "32082:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32097:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32082:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076616c7565",
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32100:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															},
															"value": "Invalid value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															}
														],
														"id": 1616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32074:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "32074:42:0"
											},
											{
												"expression": {
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1623,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "32135:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1624,
														"name": "__rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "32149:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32135:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "32135:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1628,
															"name": "__rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "32191:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1627,
														"name": "SetRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "32177:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32177:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "EmitStatement",
												"src": "32172:32:0"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1614,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1613,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1056,
												"src": "32045:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32045:9:0"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "32000:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "__rewardRate",
												"nameLocation": "32022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "32014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32013:22:0"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32055:0:0"
									},
									"scope": 1824,
									"src": "31991:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "32283:175:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1640,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "32310:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32326:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32310:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32329:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															},
															"value": "Invalid Lockup Duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															}
														],
														"id": 1639,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32302:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "32302:53:0"
											},
											{
												"expression": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1646,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "32366:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32399:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 1647,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "32381:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 597,
															"src": "32381:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32381:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32366:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "32366:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1654,
															"name": "__eventPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "32437:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1653,
														"name": "SetEventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "32422:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32422:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1656,
												"nodeType": "EmitStatement",
												"src": "32417:34:0"
											}
										]
									},
									"functionSelector": "692642e7",
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1637,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1636,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1056,
												"src": "32273:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32273:9:0"
										}
									],
									"name": "setEventPeriod",
									"nameLocation": "32226:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "__eventPeriod",
												"nameLocation": "32249:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "32241:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32240:23:0"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32283:0:0"
									},
									"scope": 1824,
									"src": "32217:241:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "32540:191:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1666,
																"name": "__unstakingFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1660,
																"src": "32567:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32588:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32567:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32591:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															},
															"value": "Invalid Unstaking Fee Rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															}
														],
														"id": 1665,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32559:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32559:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "32559:61:0"
											},
											{
												"expression": {
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1672,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "32631:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1673,
														"name": "__unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "32651:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32631:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1675,
												"nodeType": "ExpressionStatement",
												"src": "32631:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1677,
															"name": "__unstakingFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "32705:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1676,
														"name": "SetUnstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "32685:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32685:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1679,
												"nodeType": "EmitStatement",
												"src": "32680:44:0"
											}
										]
									},
									"functionSelector": "91e07e7a",
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1663,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1662,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1056,
												"src": "32530:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32530:9:0"
										}
									],
									"name": "setUnstakingFeeRate",
									"nameLocation": "32473:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "__unstakingFeeRate",
												"nameLocation": "32501:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "32493:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32492:28:0"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32540:0:0"
									},
									"scope": 1824,
									"src": "32464:267:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "32799:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1689,
																"name": "lockupTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "32818:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32831:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32818:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32834:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32810:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32810:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "32810:40:0"
											},
											{
												"expression": {
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1695,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "32861:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1696,
														"name": "lockupTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "32877:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32861:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "32861:26:0"
											}
										]
									},
									"functionSelector": "4b62b70b",
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1685,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1056,
												"src": "32789:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32789:9:0"
										}
									],
									"name": "setLockupTime",
									"nameLocation": "32746:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "lockupTime",
												"nameLocation": "32768:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "32760:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32759:20:0"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32799:0:0"
									},
									"scope": 1824,
									"src": "32737:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "33010:99:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1705,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "33063:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1708,
														"indexExpression": {
															"expression": {
																"id": 1706,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33071:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33071:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33063:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1136_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1125,
													"src": "33063:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1704,
												"id": 1710,
												"nodeType": "Return",
												"src": "33056:46:0"
											}
										]
									},
									"functionSelector": "5d2ec65d",
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToHarvest",
									"nameLocation": "32963:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32978:2:0"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "33002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33001:9:0"
									},
									"scope": 1824,
									"src": "32954:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1790,
										"nodeType": "Block",
										"src": "33172:546:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1715,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "33191:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33191:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "33191:14:0"
											},
											{
												"assignments": [
													1720
												],
												"declarations": [
													{
														"constant": false,
														"id": 1720,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "33230:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1790,
														"src": "33215:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1719,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1718,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1136,
																"src": "33215:6:0"
															},
															"referencedDeclaration": 1136,
															"src": "33215:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1725,
												"initialValue": {
													"baseExpression": {
														"id": 1721,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "33239:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1724,
													"indexExpression": {
														"expression": {
															"id": 1722,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "33247:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "33247:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33239:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1136_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33215:43:0"
											},
											{
												"assignments": [
													1727
												],
												"declarations": [
													{
														"constant": false,
														"id": 1727,
														"mutability": "mutable",
														"name": "rewardToClaim",
														"nameLocation": "33276:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1790,
														"src": "33268:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33268:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1742,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33374:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "34",
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33378:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	},
																	"src": "33374:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1734,
																			"name": "_rewardFeeRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1144,
																			"src": "33354:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1731,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1720,
																				"src": "33323:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1732,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakerCurrentReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1125,
																			"src": "33323:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 597,
																		"src": "33323:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33323:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 612,
																"src": "33323:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33323:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1728,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1720,
																"src": "33292:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakerCurrentReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1125,
															"src": "33292:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 582,
														"src": "33292:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33292:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33268:113:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1744,
																"name": "rewardToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "33408:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33424:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33408:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33427:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 1743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33400:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "33400:46:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1750,
														"name": "rewardToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "33460:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1755,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "33500:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$1824",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$1824",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33492:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1753,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "33492:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33492:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1751,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "33476:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$100",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 39,
															"src": "33476:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33476:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33460:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1769,
												"nodeType": "IfStatement",
												"src": "33456:110:0",
												"trueBody": {
													"expression": {
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1759,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "33520:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1764,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "33560:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$1824",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$1824",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "33552:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1762,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "33552:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33552:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1760,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "33536:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$100",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 39,
																"src": "33536:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33536:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "33520:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1768,
													"nodeType": "ExpressionStatement",
													"src": "33520:46:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1773,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33595:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33595:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1775,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "33607:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1770,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "33576:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 732,
														"src": "33576:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$100_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$100_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33576:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "33576:45:0"
											},
											{
												"expression": {
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1778,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "33631:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1136_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1125,
														"src": "33631:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33660:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33631:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1783,
												"nodeType": "ExpressionStatement",
												"src": "33631:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1785,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33685:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33685:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1787,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "33697:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1784,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "33677:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33677:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1789,
												"nodeType": "EmitStatement",
												"src": "33672:39:0"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 1791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "33156:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33163:2:0"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33172:0:0"
									},
									"scope": 1824,
									"src": "33147:571:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "33825:65:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1796,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "33851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1799,
														"indexExpression": {
															"expression": {
																"id": 1797,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33859:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33859:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33851:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1136_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1127,
													"src": "33851:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1795,
												"id": 1801,
												"nodeType": "Return",
												"src": "33844:39:0"
											}
										]
									},
									"functionSelector": "373d6132",
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "33780:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33792:2:0"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "33816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33815:9:0"
									},
									"scope": 1824,
									"src": "33771:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "33954:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1808,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "33971:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1136_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1811,
														"indexExpression": {
															"expression": {
																"id": 1809,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33979:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33979:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33971:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1136_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1125,
													"src": "33971:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1807,
												"id": 1813,
												"nodeType": "Return",
												"src": "33964:46:0"
											}
										]
									},
									"functionSelector": "f7b2a7be",
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardAmount",
									"nameLocation": "33909:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33921:2:0"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "33945:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33944:9:0"
									},
									"scope": 1824,
									"src": "33900:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "34078:35:0",
										"statements": [
											{
												"expression": {
													"id": 1820,
													"name": "_rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1142,
													"src": "34095:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1819,
												"id": 1821,
												"nodeType": "Return",
												"src": "34088:18:0"
											}
										]
									},
									"functionSelector": "7e1a3786",
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardRate",
									"nameLocation": "34032:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34045:2:0"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "34069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34068:9:0"
									},
									"scope": 1824,
									"src": "34023:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1825,
							"src": "27335:6780:0",
							"usedErrors": []
						}
					],
					"src": "32:34084:0"
				},
				"id": 0
			}
		}
	}
}